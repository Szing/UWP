//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------


namespace NavDemo
{
    public partial class App : global::Windows.UI.Xaml.Markup.IXamlMetadataProvider
    {
        private global::NavDemo.NavDemo_XamlTypeInfo.XamlMetaDataProvider __appProvider;
        private global::NavDemo.NavDemo_XamlTypeInfo.XamlMetaDataProvider _AppProvider
        {
            get
            {
                if (__appProvider == null)
                {
                    __appProvider = new global::NavDemo.NavDemo_XamlTypeInfo.XamlMetaDataProvider();
                }
                return __appProvider;
            }
        }

        /// <summary>
        /// GetXamlType(Type)
        /// </summary>
        public global::Windows.UI.Xaml.Markup.IXamlType GetXamlType(global::System.Type type)
        {
            return _AppProvider.GetXamlType(type);
        }

        /// <summary>
        /// GetXamlType(String)
        /// </summary>
        public global::Windows.UI.Xaml.Markup.IXamlType GetXamlType(string fullName)
        {
            return _AppProvider.GetXamlType(fullName);
        }

        /// <summary>
        /// GetXmlnsDefinitions()
        /// </summary>
        public global::Windows.UI.Xaml.Markup.XmlnsDefinition[] GetXmlnsDefinitions()
        {
            return _AppProvider.GetXmlnsDefinitions();
        }
    }
}

namespace NavDemo.NavDemo_XamlTypeInfo
{
    /// <summary>
    /// Main class for providing metadata for the app or library
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.17.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    public sealed class XamlMetaDataProvider : global::Windows.UI.Xaml.Markup.IXamlMetadataProvider
    {
        private global::NavDemo.NavDemo_XamlTypeInfo.XamlTypeInfoProvider _provider = null;

        private global::NavDemo.NavDemo_XamlTypeInfo.XamlTypeInfoProvider Provider
        {
            get
            {
                if (_provider == null)
                {
                    _provider = new global::NavDemo.NavDemo_XamlTypeInfo.XamlTypeInfoProvider();
                }
                return _provider;
            }
        }

        /// <summary>
        /// GetXamlType(Type)
        /// </summary>
        public global::Windows.UI.Xaml.Markup.IXamlType GetXamlType(global::System.Type type)
        {
            return Provider.GetXamlTypeByType(type);
        }

        /// <summary>
        /// GetXamlType(String)
        /// </summary>
        public global::Windows.UI.Xaml.Markup.IXamlType GetXamlType(string fullName)
        {
            return Provider.GetXamlTypeByName(fullName);
        }

        /// <summary>
        /// GetXmlnsDefinitions()
        /// </summary>
        public global::Windows.UI.Xaml.Markup.XmlnsDefinition[] GetXmlnsDefinitions()
        {
            return new global::Windows.UI.Xaml.Markup.XmlnsDefinition[0];
        }
    }

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.17.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal partial class XamlTypeInfoProvider
    {
        public global::Windows.UI.Xaml.Markup.IXamlType GetXamlTypeByType(global::System.Type type)
        {
            global::Windows.UI.Xaml.Markup.IXamlType xamlType;
            lock (_xamlTypeCacheByType) 
            { 
                if (_xamlTypeCacheByType.TryGetValue(type, out xamlType))
                {
                    return xamlType;
                }
                int typeIndex = LookupTypeIndexByType(type);
                if(typeIndex != -1)
                {
                    xamlType = CreateXamlType(typeIndex);
                }
                if (xamlType != null)
                {
                    _xamlTypeCacheByName.Add(xamlType.FullName, xamlType);
                    _xamlTypeCacheByType.Add(xamlType.UnderlyingType, xamlType);
                }
            }
            return xamlType;
        }

        public global::Windows.UI.Xaml.Markup.IXamlType GetXamlTypeByName(string typeName)
        {
            if (string.IsNullOrEmpty(typeName))
            {
                return null;
            }
            global::Windows.UI.Xaml.Markup.IXamlType xamlType;
            lock (_xamlTypeCacheByType)
            {
                if (_xamlTypeCacheByName.TryGetValue(typeName, out xamlType))
                {
                    return xamlType;
                }
                int typeIndex = LookupTypeIndexByName(typeName);
                if(typeIndex != -1)
                {
                    xamlType = CreateXamlType(typeIndex);
                }
                if (xamlType != null)
                {
                    _xamlTypeCacheByName.Add(xamlType.FullName, xamlType);
                    _xamlTypeCacheByType.Add(xamlType.UnderlyingType, xamlType);
                }
            }
            return xamlType;
        }

        public global::Windows.UI.Xaml.Markup.IXamlMember GetMemberByLongName(string longMemberName)
        {
            if (string.IsNullOrEmpty(longMemberName))
            {
                return null;
            }
            global::Windows.UI.Xaml.Markup.IXamlMember xamlMember;
            lock (_xamlMembers)
            {
                if (_xamlMembers.TryGetValue(longMemberName, out xamlMember))
                {
                    return xamlMember;
                }
                xamlMember = CreateXamlMember(longMemberName);
                if (xamlMember != null)
                {
                    _xamlMembers.Add(longMemberName, xamlMember);
                }
            }
            return xamlMember;
        }

        global::System.Collections.Generic.Dictionary<string, global::Windows.UI.Xaml.Markup.IXamlType>
                _xamlTypeCacheByName = new global::System.Collections.Generic.Dictionary<string, global::Windows.UI.Xaml.Markup.IXamlType>();

        global::System.Collections.Generic.Dictionary<global::System.Type, global::Windows.UI.Xaml.Markup.IXamlType>
                _xamlTypeCacheByType = new global::System.Collections.Generic.Dictionary<global::System.Type, global::Windows.UI.Xaml.Markup.IXamlType>();

        global::System.Collections.Generic.Dictionary<string, global::Windows.UI.Xaml.Markup.IXamlMember>
                _xamlMembers = new global::System.Collections.Generic.Dictionary<string, global::Windows.UI.Xaml.Markup.IXamlMember>();

        string[] _typeNameTable = null;
        global::System.Type[] _typeTable = null;

        private void InitTypeTables()
        {
            _typeNameTable = new string[82];
            _typeNameTable[0] = "MVVMSidekick.Views.MVVMPage";
            _typeNameTable[1] = "Windows.UI.Xaml.Controls.Page";
            _typeNameTable[2] = "Windows.UI.Xaml.Controls.UserControl";
            _typeNameTable[3] = "Object";
            _typeNameTable[4] = "MVVMSidekick.ViewModels.IViewModel";
            _typeNameTable[5] = "MVVMSidekick.Views.ViewType";
            _typeNameTable[6] = "System.Enum";
            _typeNameTable[7] = "System.ValueType";
            _typeNameTable[8] = "NavDemo.ViewModels.ShowFriendPage_Model";
            _typeNameTable[9] = "MVVMSidekick.ViewModels.ViewModelBase`1<NavDemo.ViewModels.ShowFriendPage_Model>";
            _typeNameTable[10] = "MVVMSidekick.ViewModels.BindableBase`1<NavDemo.ViewModels.ShowFriendPage_Model>";
            _typeNameTable[11] = "MVVMSidekick.ViewModels.BindableBase";
            _typeNameTable[12] = "MVVMSidekick.ViewModels.DisposeGroupBase";
            _typeNameTable[13] = "MVVMSidekick.Common.InstanceCounableBase";
            _typeNameTable[14] = "String";
            _typeNameTable[15] = "NavDemo.Friend";
            _typeNameTable[16] = "System.Collections.Generic.List`1<NavDemo.Friend>";
            _typeNameTable[17] = "Int32";
            _typeNameTable[18] = "MVVMSidekick.ViewModels.CommandModel`2<MVVMSidekick.Reactive.ReactiveCommand, String>";
            _typeNameTable[19] = "MVVMSidekick.ViewModels.BindableBase`1<MVVMSidekick.ViewModels.CommandModel`2<MVVMSidekick.Reactive.ReactiveCommand, String>>";
            _typeNameTable[20] = "MVVMSidekick.Common.IDisposeGroup";
            _typeNameTable[21] = "Boolean";
            _typeNameTable[22] = "MVVMSidekick.Views.IStageManager";
            _typeNameTable[23] = "Windows.UI.Core.CoreDispatcher";
            _typeNameTable[24] = "MVVMSidekick.EventRouting.EventRouter";
            _typeNameTable[25] = "System.Collections.Generic.IList`1<MVVMSidekick.Common.DisposeEntry>";
            _typeNameTable[26] = "MVVMSidekick.Common.DisposeEntry";
            _typeNameTable[27] = "MVVMSidekick.Common.CallingCodeContext";
            _typeNameTable[28] = "System.Exception";
            _typeNameTable[29] = "System.Action";
            _typeNameTable[30] = "System.MulticastDelegate";
            _typeNameTable[31] = "System.Delegate";
            _typeNameTable[32] = "NavDemo.ShowFriendPage";
            _typeNameTable[33] = "NavDemo.ViewModels.AddFriendPage_Model";
            _typeNameTable[34] = "MVVMSidekick.ViewModels.ViewModelBase`1<NavDemo.ViewModels.AddFriendPage_Model>";
            _typeNameTable[35] = "MVVMSidekick.ViewModels.BindableBase`1<NavDemo.ViewModels.AddFriendPage_Model>";
            _typeNameTable[36] = "NavDemo.AddFriendPage";
            _typeNameTable[37] = "NavDemo.ViewModels.AboutPage_Model";
            _typeNameTable[38] = "MVVMSidekick.ViewModels.ViewModelBase`1<NavDemo.ViewModels.AboutPage_Model>";
            _typeNameTable[39] = "MVVMSidekick.ViewModels.BindableBase`1<NavDemo.ViewModels.AboutPage_Model>";
            _typeNameTable[40] = "NavDemo.Dialog";
            _typeNameTable[41] = "System.Collections.Generic.List`1<NavDemo.Dialog>";
            _typeNameTable[42] = "NavDemo.AttachProps.RtfText";
            _typeNameTable[43] = "Windows.UI.Xaml.DependencyObject";
            _typeNameTable[44] = "NavDemo.AboutPage";
            _typeNameTable[45] = "NavDemo.ViewModels.BlankPage1_Model";
            _typeNameTable[46] = "MVVMSidekick.ViewModels.ViewModelBase`1<NavDemo.ViewModels.BlankPage1_Model>";
            _typeNameTable[47] = "MVVMSidekick.ViewModels.BindableBase`1<NavDemo.ViewModels.BlankPage1_Model>";
            _typeNameTable[48] = "NavDemo.BlankPage1";
            _typeNameTable[49] = "NavDemo.ViewModels.HomePage_Model";
            _typeNameTable[50] = "MVVMSidekick.ViewModels.ViewModelBase`1<NavDemo.ViewModels.HomePage_Model>";
            _typeNameTable[51] = "MVVMSidekick.ViewModels.BindableBase`1<NavDemo.ViewModels.HomePage_Model>";
            _typeNameTable[52] = "NavDemo.Services.SuggestService";
            _typeNameTable[53] = "NavDemo.Models.Singleton`1<NavDemo.Services.SuggestService>";
            _typeNameTable[54] = "Windows.UI.Xaml.Media.FontFamily";
            _typeNameTable[55] = "Microsoft.Xaml.Interactivity.Interaction";
            _typeNameTable[56] = "Microsoft.Xaml.Interactivity.BehaviorCollection";
            _typeNameTable[57] = "Windows.UI.Xaml.DependencyObjectCollection";
            _typeNameTable[58] = "Microsoft.Xaml.Interactions.Core.EventTriggerBehavior";
            _typeNameTable[59] = "Microsoft.Xaml.Interactivity.ActionCollection";
            _typeNameTable[60] = "Microsoft.Xaml.Interactions.Core.InvokeCommandAction";
            _typeNameTable[61] = "System.Windows.Input.ICommand";
            _typeNameTable[62] = "Windows.UI.Xaml.Data.IValueConverter";
            _typeNameTable[63] = "MVVMSidekick.Behaviors.SendToEventRouterAction";
            _typeNameTable[64] = "System.Type";
            _typeNameTable[65] = "NavDemo.HomePage";
            _typeNameTable[66] = "NavDemo.ViewModels.MainPage_Model";
            _typeNameTable[67] = "MVVMSidekick.ViewModels.ViewModelBase`1<NavDemo.ViewModels.MainPage_Model>";
            _typeNameTable[68] = "MVVMSidekick.ViewModels.BindableBase`1<NavDemo.ViewModels.MainPage_Model>";
            _typeNameTable[69] = "System.Collections.ObjectModel.ObservableCollection`1<NavDemo.Models.NavMenuItem>";
            _typeNameTable[70] = "System.Collections.ObjectModel.Collection`1<NavDemo.Models.NavMenuItem>";
            _typeNameTable[71] = "NavDemo.Models.NavMenuItem";
            _typeNameTable[72] = "MVVMSidekick.ViewModels.BindableBase`1<NavDemo.Models.NavMenuItem>";
            _typeNameTable[73] = "MVVMSidekick.Views.StageManager";
            _typeNameTable[74] = "MVVMSidekick.Views.IView";
            _typeNameTable[75] = "MVVMSidekick.Views.IStage";
            _typeNameTable[76] = "NavDemo.MainPage";
            _typeNameTable[77] = "NavDemo.ViewModels.SearchPage_Model";
            _typeNameTable[78] = "MVVMSidekick.ViewModels.ViewModelBase`1<NavDemo.ViewModels.SearchPage_Model>";
            _typeNameTable[79] = "MVVMSidekick.ViewModels.BindableBase`1<NavDemo.ViewModels.SearchPage_Model>";
            _typeNameTable[80] = "NavDemo.Behaviours.ListViewBehavior";
            _typeNameTable[81] = "NavDemo.SearchPage";

            _typeTable = new global::System.Type[82];
            _typeTable[0] = typeof(global::MVVMSidekick.Views.MVVMPage);
            _typeTable[1] = typeof(global::Windows.UI.Xaml.Controls.Page);
            _typeTable[2] = typeof(global::Windows.UI.Xaml.Controls.UserControl);
            _typeTable[3] = typeof(global::System.Object);
            _typeTable[4] = typeof(global::MVVMSidekick.ViewModels.IViewModel);
            _typeTable[5] = typeof(global::MVVMSidekick.Views.ViewType);
            _typeTable[6] = typeof(global::System.Enum);
            _typeTable[7] = typeof(global::System.ValueType);
            _typeTable[8] = typeof(global::NavDemo.ViewModels.ShowFriendPage_Model);
            _typeTable[9] = typeof(global::MVVMSidekick.ViewModels.ViewModelBase<global::NavDemo.ViewModels.ShowFriendPage_Model>);
            _typeTable[10] = typeof(global::MVVMSidekick.ViewModels.BindableBase<global::NavDemo.ViewModels.ShowFriendPage_Model>);
            _typeTable[11] = typeof(global::MVVMSidekick.ViewModels.BindableBase);
            _typeTable[12] = typeof(global::MVVMSidekick.ViewModels.DisposeGroupBase);
            _typeTable[13] = typeof(global::MVVMSidekick.Common.InstanceCounableBase);
            _typeTable[14] = typeof(global::System.String);
            _typeTable[15] = typeof(global::NavDemo.Friend);
            _typeTable[16] = typeof(global::System.Collections.Generic.List<global::NavDemo.Friend>);
            _typeTable[17] = typeof(global::System.Int32);
            _typeTable[18] = typeof(global::MVVMSidekick.ViewModels.CommandModel<global::MVVMSidekick.Reactive.ReactiveCommand, global::System.String>);
            _typeTable[19] = typeof(global::MVVMSidekick.ViewModels.BindableBase<global::MVVMSidekick.ViewModels.CommandModel<global::MVVMSidekick.Reactive.ReactiveCommand, global::System.String>>);
            _typeTable[20] = typeof(global::MVVMSidekick.Common.IDisposeGroup);
            _typeTable[21] = typeof(global::System.Boolean);
            _typeTable[22] = typeof(global::MVVMSidekick.Views.IStageManager);
            _typeTable[23] = typeof(global::Windows.UI.Core.CoreDispatcher);
            _typeTable[24] = typeof(global::MVVMSidekick.EventRouting.EventRouter);
            _typeTable[25] = typeof(global::System.Collections.Generic.IList<global::MVVMSidekick.Common.DisposeEntry>);
            _typeTable[26] = typeof(global::MVVMSidekick.Common.DisposeEntry);
            _typeTable[27] = typeof(global::MVVMSidekick.Common.CallingCodeContext);
            _typeTable[28] = typeof(global::System.Exception);
            _typeTable[29] = typeof(global::System.Action);
            _typeTable[30] = typeof(global::System.MulticastDelegate);
            _typeTable[31] = typeof(global::System.Delegate);
            _typeTable[32] = typeof(global::NavDemo.ShowFriendPage);
            _typeTable[33] = typeof(global::NavDemo.ViewModels.AddFriendPage_Model);
            _typeTable[34] = typeof(global::MVVMSidekick.ViewModels.ViewModelBase<global::NavDemo.ViewModels.AddFriendPage_Model>);
            _typeTable[35] = typeof(global::MVVMSidekick.ViewModels.BindableBase<global::NavDemo.ViewModels.AddFriendPage_Model>);
            _typeTable[36] = typeof(global::NavDemo.AddFriendPage);
            _typeTable[37] = typeof(global::NavDemo.ViewModels.AboutPage_Model);
            _typeTable[38] = typeof(global::MVVMSidekick.ViewModels.ViewModelBase<global::NavDemo.ViewModels.AboutPage_Model>);
            _typeTable[39] = typeof(global::MVVMSidekick.ViewModels.BindableBase<global::NavDemo.ViewModels.AboutPage_Model>);
            _typeTable[40] = typeof(global::NavDemo.Dialog);
            _typeTable[41] = typeof(global::System.Collections.Generic.List<global::NavDemo.Dialog>);
            _typeTable[42] = typeof(global::NavDemo.AttachProps.RtfText);
            _typeTable[43] = typeof(global::Windows.UI.Xaml.DependencyObject);
            _typeTable[44] = typeof(global::NavDemo.AboutPage);
            _typeTable[45] = typeof(global::NavDemo.ViewModels.BlankPage1_Model);
            _typeTable[46] = typeof(global::MVVMSidekick.ViewModels.ViewModelBase<global::NavDemo.ViewModels.BlankPage1_Model>);
            _typeTable[47] = typeof(global::MVVMSidekick.ViewModels.BindableBase<global::NavDemo.ViewModels.BlankPage1_Model>);
            _typeTable[48] = typeof(global::NavDemo.BlankPage1);
            _typeTable[49] = typeof(global::NavDemo.ViewModels.HomePage_Model);
            _typeTable[50] = typeof(global::MVVMSidekick.ViewModels.ViewModelBase<global::NavDemo.ViewModels.HomePage_Model>);
            _typeTable[51] = typeof(global::MVVMSidekick.ViewModels.BindableBase<global::NavDemo.ViewModels.HomePage_Model>);
            _typeTable[52] = typeof(global::NavDemo.Services.SuggestService);
            _typeTable[53] = typeof(global::NavDemo.Models.Singleton<global::NavDemo.Services.SuggestService>);
            _typeTable[54] = typeof(global::Windows.UI.Xaml.Media.FontFamily);
            _typeTable[55] = typeof(global::Microsoft.Xaml.Interactivity.Interaction);
            _typeTable[56] = typeof(global::Microsoft.Xaml.Interactivity.BehaviorCollection);
            _typeTable[57] = typeof(global::Windows.UI.Xaml.DependencyObjectCollection);
            _typeTable[58] = typeof(global::Microsoft.Xaml.Interactions.Core.EventTriggerBehavior);
            _typeTable[59] = typeof(global::Microsoft.Xaml.Interactivity.ActionCollection);
            _typeTable[60] = typeof(global::Microsoft.Xaml.Interactions.Core.InvokeCommandAction);
            _typeTable[61] = typeof(global::System.Windows.Input.ICommand);
            _typeTable[62] = typeof(global::Windows.UI.Xaml.Data.IValueConverter);
            _typeTable[63] = typeof(global::MVVMSidekick.Behaviors.SendToEventRouterAction);
            _typeTable[64] = typeof(global::System.Type);
            _typeTable[65] = typeof(global::NavDemo.HomePage);
            _typeTable[66] = typeof(global::NavDemo.ViewModels.MainPage_Model);
            _typeTable[67] = typeof(global::MVVMSidekick.ViewModels.ViewModelBase<global::NavDemo.ViewModels.MainPage_Model>);
            _typeTable[68] = typeof(global::MVVMSidekick.ViewModels.BindableBase<global::NavDemo.ViewModels.MainPage_Model>);
            _typeTable[69] = typeof(global::System.Collections.ObjectModel.ObservableCollection<global::NavDemo.Models.NavMenuItem>);
            _typeTable[70] = typeof(global::System.Collections.ObjectModel.Collection<global::NavDemo.Models.NavMenuItem>);
            _typeTable[71] = typeof(global::NavDemo.Models.NavMenuItem);
            _typeTable[72] = typeof(global::MVVMSidekick.ViewModels.BindableBase<global::NavDemo.Models.NavMenuItem>);
            _typeTable[73] = typeof(global::MVVMSidekick.Views.StageManager);
            _typeTable[74] = typeof(global::MVVMSidekick.Views.IView);
            _typeTable[75] = typeof(global::MVVMSidekick.Views.IStage);
            _typeTable[76] = typeof(global::NavDemo.MainPage);
            _typeTable[77] = typeof(global::NavDemo.ViewModels.SearchPage_Model);
            _typeTable[78] = typeof(global::MVVMSidekick.ViewModels.ViewModelBase<global::NavDemo.ViewModels.SearchPage_Model>);
            _typeTable[79] = typeof(global::MVVMSidekick.ViewModels.BindableBase<global::NavDemo.ViewModels.SearchPage_Model>);
            _typeTable[80] = typeof(global::NavDemo.Behaviours.ListViewBehavior);
            _typeTable[81] = typeof(global::NavDemo.SearchPage);
        }

        private int LookupTypeIndexByName(string typeName)
        {
            if (_typeNameTable == null)
            {
                InitTypeTables();
            }
            for (int i=0; i<_typeNameTable.Length; i++)
            {
                if(0 == string.CompareOrdinal(_typeNameTable[i], typeName))
                {
                    return i;
                }
            }
            return -1;
        }

        private int LookupTypeIndexByType(global::System.Type type)
        {
            if (_typeTable == null)
            {
                InitTypeTables();
            }
            for(int i=0; i<_typeTable.Length; i++)
            {
                if(type == _typeTable[i])
                {
                    return i;
                }
            }
            return -1;
        }

        private object Activate_0_MVVMPage() { return new global::MVVMSidekick.Views.MVVMPage(); }
        private object Activate_8_ShowFriendPage_Model() { return new global::NavDemo.ViewModels.ShowFriendPage_Model(); }
        private object Activate_15_Friend() { return new global::NavDemo.Friend(); }
        private object Activate_16_List() { return new global::System.Collections.Generic.List<global::NavDemo.Friend>(); }
        private object Activate_18_CommandModel() { return new global::MVVMSidekick.ViewModels.CommandModel<global::MVVMSidekick.Reactive.ReactiveCommand, global::System.String>(); }
        private object Activate_24_EventRouter() { return new global::MVVMSidekick.EventRouting.EventRouter(); }
        private object Activate_28_Exception() { return new global::System.Exception(); }
        private object Activate_32_ShowFriendPage() { return new global::NavDemo.ShowFriendPage(); }
        private object Activate_33_AddFriendPage_Model() { return new global::NavDemo.ViewModels.AddFriendPage_Model(); }
        private object Activate_36_AddFriendPage() { return new global::NavDemo.AddFriendPage(); }
        private object Activate_37_AboutPage_Model() { return new global::NavDemo.ViewModels.AboutPage_Model(); }
        private object Activate_40_Dialog() { return new global::NavDemo.Dialog(); }
        private object Activate_41_List() { return new global::System.Collections.Generic.List<global::NavDemo.Dialog>(); }
        private object Activate_42_RtfText() { return new global::NavDemo.AttachProps.RtfText(); }
        private object Activate_44_AboutPage() { return new global::NavDemo.AboutPage(); }
        private object Activate_45_BlankPage1_Model() { return new global::NavDemo.ViewModels.BlankPage1_Model(); }
        private object Activate_48_BlankPage1() { return new global::NavDemo.BlankPage1(); }
        private object Activate_49_HomePage_Model() { return new global::NavDemo.ViewModels.HomePage_Model(); }
        private object Activate_52_SuggestService() { return new global::NavDemo.Services.SuggestService(); }
        private object Activate_53_Singleton() { return new global::NavDemo.Models.Singleton<global::NavDemo.Services.SuggestService>(); }
        private object Activate_56_BehaviorCollection() { return new global::Microsoft.Xaml.Interactivity.BehaviorCollection(); }
        private object Activate_58_EventTriggerBehavior() { return new global::Microsoft.Xaml.Interactions.Core.EventTriggerBehavior(); }
        private object Activate_59_ActionCollection() { return new global::Microsoft.Xaml.Interactivity.ActionCollection(); }
        private object Activate_60_InvokeCommandAction() { return new global::Microsoft.Xaml.Interactions.Core.InvokeCommandAction(); }
        private object Activate_63_SendToEventRouterAction() { return new global::MVVMSidekick.Behaviors.SendToEventRouterAction(); }
        private object Activate_65_HomePage() { return new global::NavDemo.HomePage(); }
        private object Activate_66_MainPage_Model() { return new global::NavDemo.ViewModels.MainPage_Model(); }
        private object Activate_69_ObservableCollection() { return new global::System.Collections.ObjectModel.ObservableCollection<global::NavDemo.Models.NavMenuItem>(); }
        private object Activate_70_Collection() { return new global::System.Collections.ObjectModel.Collection<global::NavDemo.Models.NavMenuItem>(); }
        private object Activate_71_NavMenuItem() { return new global::NavDemo.Models.NavMenuItem(); }
        private object Activate_76_MainPage() { return new global::NavDemo.MainPage(); }
        private object Activate_77_SearchPage_Model() { return new global::NavDemo.ViewModels.SearchPage_Model(); }
        private object Activate_80_ListViewBehavior() { return new global::NavDemo.Behaviours.ListViewBehavior(); }
        private object Activate_81_SearchPage() { return new global::NavDemo.SearchPage(); }
        private void VectorAdd_16_List(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::NavDemo.Friend>)instance;
            var newItem = (global::NavDemo.Friend)item;
            collection.Add(newItem);
        }
        private void VectorAdd_25_IList(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::MVVMSidekick.Common.DisposeEntry>)instance;
            var newItem = (global::MVVMSidekick.Common.DisposeEntry)item;
            collection.Add(newItem);
        }
        private void VectorAdd_41_List(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::NavDemo.Dialog>)instance;
            var newItem = (global::NavDemo.Dialog)item;
            collection.Add(newItem);
        }
        private void VectorAdd_56_BehaviorCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Windows.UI.Xaml.DependencyObject>)instance;
            var newItem = (global::Windows.UI.Xaml.DependencyObject)item;
            collection.Add(newItem);
        }
        private void VectorAdd_59_ActionCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::Windows.UI.Xaml.DependencyObject>)instance;
            var newItem = (global::Windows.UI.Xaml.DependencyObject)item;
            collection.Add(newItem);
        }
        private void VectorAdd_69_ObservableCollection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::NavDemo.Models.NavMenuItem>)instance;
            var newItem = (global::NavDemo.Models.NavMenuItem)item;
            collection.Add(newItem);
        }
        private void VectorAdd_70_Collection(object instance, object item)
        {
            var collection = (global::System.Collections.Generic.ICollection<global::NavDemo.Models.NavMenuItem>)instance;
            var newItem = (global::NavDemo.Models.NavMenuItem)item;
            collection.Add(newItem);
        }

        private global::Windows.UI.Xaml.Markup.IXamlType CreateXamlType(int typeIndex)
        {
            global::NavDemo.NavDemo_XamlTypeInfo.XamlSystemBaseType xamlType = null;
            global::NavDemo.NavDemo_XamlTypeInfo.XamlUserType userType;
            string typeName = _typeNameTable[typeIndex];
            global::System.Type type = _typeTable[typeIndex];

            switch (typeIndex)
            {

            case 0:   //  MVVMSidekick.Views.MVVMPage
                userType = new global::NavDemo.NavDemo_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.Controls.Page"));
                userType.Activator = Activate_0_MVVMPage;
                userType.AddMemberName("ContentObject");
                userType.AddMemberName("ViewModel");
                userType.AddMemberName("ViewType");
                xamlType = userType;
                break;

            case 1:   //  Windows.UI.Xaml.Controls.Page
                xamlType = new global::NavDemo.NavDemo_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 2:   //  Windows.UI.Xaml.Controls.UserControl
                xamlType = new global::NavDemo.NavDemo_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 3:   //  Object
                xamlType = new global::NavDemo.NavDemo_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 4:   //  MVVMSidekick.ViewModels.IViewModel
                userType = new global::NavDemo.NavDemo_XamlTypeInfo.XamlUserType(this, typeName, type, null);
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 5:   //  MVVMSidekick.Views.ViewType
                userType = new global::NavDemo.NavDemo_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Enum"));
                userType.AddEnumValue("Page", global::MVVMSidekick.Views.ViewType.Page);
                userType.AddEnumValue("Window", global::MVVMSidekick.Views.ViewType.Window);
                userType.AddEnumValue("Control", global::MVVMSidekick.Views.ViewType.Control);
                xamlType = userType;
                break;

            case 6:   //  System.Enum
                userType = new global::NavDemo.NavDemo_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.ValueType"));
                xamlType = userType;
                break;

            case 7:   //  System.ValueType
                userType = new global::NavDemo.NavDemo_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                xamlType = userType;
                break;

            case 8:   //  NavDemo.ViewModels.ShowFriendPage_Model
                userType = new global::NavDemo.NavDemo_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("MVVMSidekick.ViewModels.ViewModelBase`1<NavDemo.ViewModels.ShowFriendPage_Model>"));
                userType.Activator = Activate_8_ShowFriendPage_Model;
                userType.AddMemberName("Title");
                userType.AddMemberName("currentFriend");
                userType.AddMemberName("listFriend");
                userType.AddMemberName("indexFriend");
                userType.AddMemberName("CommandToLastFriend");
                userType.AddMemberName("CommandToNextFriend");
                userType.AddMemberName("CommandDeleteFriend");
                userType.AddMemberName("CommandInsertFriend");
                userType.AddMemberName("CommandTest");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 9:   //  MVVMSidekick.ViewModels.ViewModelBase`1<NavDemo.ViewModels.ShowFriendPage_Model>
                userType = new global::NavDemo.NavDemo_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("MVVMSidekick.ViewModels.BindableBase`1<NavDemo.ViewModels.ShowFriendPage_Model>"));
                userType.AddMemberName("UnbindDisposeGroup");
                userType.AddMemberName("UnloadDisposeGroup");
                userType.AddMemberName("IsDisposingWhenUnbindRequired");
                userType.AddMemberName("IsDisposingWhenUnloadRequired");
                userType.AddMemberName("StageManager");
                userType.AddMemberName("HaveReturnValue");
                userType.AddMemberName("IsUIBusy");
                userType.AddMemberName("Dispatcher");
                xamlType = userType;
                break;

            case 10:   //  MVVMSidekick.ViewModels.BindableBase`1<NavDemo.ViewModels.ShowFriendPage_Model>
                userType = new global::NavDemo.NavDemo_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("MVVMSidekick.ViewModels.BindableBase"));
                userType.AddMemberName("BindableInstanceId");
                userType.AddMemberName("Error");
                userType.AddMemberName("HasErrors");
                userType.AddMemberName("LocalEventRouter");
                xamlType = userType;
                break;

            case 11:   //  MVVMSidekick.ViewModels.BindableBase
                userType = new global::NavDemo.NavDemo_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("MVVMSidekick.ViewModels.DisposeGroupBase"));
                userType.AddMemberName("IsValidationActivated");
                userType.AddMemberName("IsNotificationActivated");
                xamlType = userType;
                break;

            case 12:   //  MVVMSidekick.ViewModels.DisposeGroupBase
                userType = new global::NavDemo.NavDemo_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("MVVMSidekick.Common.InstanceCounableBase"));
                userType.AddMemberName("DisposeInfoList");
                xamlType = userType;
                break;

            case 13:   //  MVVMSidekick.Common.InstanceCounableBase
                userType = new global::NavDemo.NavDemo_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                xamlType = userType;
                break;

            case 14:   //  String
                xamlType = new global::NavDemo.NavDemo_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 15:   //  NavDemo.Friend
                userType = new global::NavDemo.NavDemo_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_15_Friend;
                userType.AddMemberName("idFriend");
                userType.AddMemberName("nameFriend");
                userType.AddMemberName("iconFriend");
                userType.AddMemberName("nickNameFriend");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 16:   //  System.Collections.Generic.List`1<NavDemo.Friend>
                userType = new global::NavDemo.NavDemo_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.CollectionAdd = VectorAdd_16_List;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 17:   //  Int32
                xamlType = new global::NavDemo.NavDemo_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 18:   //  MVVMSidekick.ViewModels.CommandModel`2<MVVMSidekick.Reactive.ReactiveCommand, String>
                userType = new global::NavDemo.NavDemo_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("MVVMSidekick.ViewModels.BindableBase`1<MVVMSidekick.ViewModels.CommandModel`2<MVVMSidekick.Reactive.ReactiveCommand, String>>"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 19:   //  MVVMSidekick.ViewModels.BindableBase`1<MVVMSidekick.ViewModels.CommandModel`2<MVVMSidekick.Reactive.ReactiveCommand, String>>
                userType = new global::NavDemo.NavDemo_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("MVVMSidekick.ViewModels.BindableBase"));
                xamlType = userType;
                break;

            case 20:   //  MVVMSidekick.Common.IDisposeGroup
                userType = new global::NavDemo.NavDemo_XamlTypeInfo.XamlUserType(this, typeName, type, null);
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 21:   //  Boolean
                xamlType = new global::NavDemo.NavDemo_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 22:   //  MVVMSidekick.Views.IStageManager
                userType = new global::NavDemo.NavDemo_XamlTypeInfo.XamlUserType(this, typeName, type, null);
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 23:   //  Windows.UI.Core.CoreDispatcher
                userType = new global::NavDemo.NavDemo_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 24:   //  MVVMSidekick.EventRouting.EventRouter
                userType = new global::NavDemo.NavDemo_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("MVVMSidekick.Common.InstanceCounableBase"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 25:   //  System.Collections.Generic.IList`1<MVVMSidekick.Common.DisposeEntry>
                userType = new global::NavDemo.NavDemo_XamlTypeInfo.XamlUserType(this, typeName, type, null);
                userType.CollectionAdd = VectorAdd_25_IList;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 26:   //  MVVMSidekick.Common.DisposeEntry
                userType = new global::NavDemo.NavDemo_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.ValueType"));
                userType.AddMemberName("CallingCodeContext");
                userType.AddMemberName("IsNeedCheckOnFinalizer");
                userType.AddMemberName("Exception");
                userType.AddMemberName("Action");
                xamlType = userType;
                break;

            case 27:   //  MVVMSidekick.Common.CallingCodeContext
                userType = new global::NavDemo.NavDemo_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.ValueType"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 28:   //  System.Exception
                userType = new global::NavDemo.NavDemo_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 29:   //  System.Action
                userType = new global::NavDemo.NavDemo_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.MulticastDelegate"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 30:   //  System.MulticastDelegate
                userType = new global::NavDemo.NavDemo_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Delegate"));
                xamlType = userType;
                break;

            case 31:   //  System.Delegate
                userType = new global::NavDemo.NavDemo_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                xamlType = userType;
                break;

            case 32:   //  NavDemo.ShowFriendPage
                userType = new global::NavDemo.NavDemo_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("MVVMSidekick.Views.MVVMPage"));
                userType.Activator = Activate_32_ShowFriendPage;
                userType.AddMemberName("StrongTypeViewModel");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 33:   //  NavDemo.ViewModels.AddFriendPage_Model
                userType = new global::NavDemo.NavDemo_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("MVVMSidekick.ViewModels.ViewModelBase`1<NavDemo.ViewModels.AddFriendPage_Model>"));
                userType.Activator = Activate_33_AddFriendPage_Model;
                userType.AddMemberName("Title");
                userType.AddMemberName("friend");
                userType.AddMemberName("CommandInsertFriend");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 34:   //  MVVMSidekick.ViewModels.ViewModelBase`1<NavDemo.ViewModels.AddFriendPage_Model>
                userType = new global::NavDemo.NavDemo_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("MVVMSidekick.ViewModels.BindableBase`1<NavDemo.ViewModels.AddFriendPage_Model>"));
                userType.AddMemberName("UnbindDisposeGroup");
                userType.AddMemberName("UnloadDisposeGroup");
                userType.AddMemberName("IsDisposingWhenUnbindRequired");
                userType.AddMemberName("IsDisposingWhenUnloadRequired");
                userType.AddMemberName("StageManager");
                userType.AddMemberName("HaveReturnValue");
                userType.AddMemberName("IsUIBusy");
                userType.AddMemberName("Dispatcher");
                xamlType = userType;
                break;

            case 35:   //  MVVMSidekick.ViewModels.BindableBase`1<NavDemo.ViewModels.AddFriendPage_Model>
                userType = new global::NavDemo.NavDemo_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("MVVMSidekick.ViewModels.BindableBase"));
                userType.AddMemberName("BindableInstanceId");
                userType.AddMemberName("Error");
                userType.AddMemberName("HasErrors");
                userType.AddMemberName("LocalEventRouter");
                xamlType = userType;
                break;

            case 36:   //  NavDemo.AddFriendPage
                userType = new global::NavDemo.NavDemo_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("MVVMSidekick.Views.MVVMPage"));
                userType.Activator = Activate_36_AddFriendPage;
                userType.AddMemberName("StrongTypeViewModel");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 37:   //  NavDemo.ViewModels.AboutPage_Model
                userType = new global::NavDemo.NavDemo_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("MVVMSidekick.ViewModels.ViewModelBase`1<NavDemo.ViewModels.AboutPage_Model>"));
                userType.Activator = Activate_37_AboutPage_Model;
                userType.AddMemberName("Title");
                userType.AddMemberName("currentDialog");
                userType.AddMemberName("listDialog");
                userType.AddMemberName("indexDialog");
                userType.AddMemberName("richEditBoxContent");
                userType.AddMemberName("CommandToLastPage");
                userType.AddMemberName("CommandToNextPage");
                userType.AddMemberName("CommandGetDialog");
                userType.AddMemberName("CommandDeleteDialog");
                userType.AddMemberName("CommandSaveDialog");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 38:   //  MVVMSidekick.ViewModels.ViewModelBase`1<NavDemo.ViewModels.AboutPage_Model>
                userType = new global::NavDemo.NavDemo_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("MVVMSidekick.ViewModels.BindableBase`1<NavDemo.ViewModels.AboutPage_Model>"));
                userType.AddMemberName("UnbindDisposeGroup");
                userType.AddMemberName("UnloadDisposeGroup");
                userType.AddMemberName("IsDisposingWhenUnbindRequired");
                userType.AddMemberName("IsDisposingWhenUnloadRequired");
                userType.AddMemberName("StageManager");
                userType.AddMemberName("HaveReturnValue");
                userType.AddMemberName("IsUIBusy");
                userType.AddMemberName("Dispatcher");
                xamlType = userType;
                break;

            case 39:   //  MVVMSidekick.ViewModels.BindableBase`1<NavDemo.ViewModels.AboutPage_Model>
                userType = new global::NavDemo.NavDemo_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("MVVMSidekick.ViewModels.BindableBase"));
                userType.AddMemberName("BindableInstanceId");
                userType.AddMemberName("Error");
                userType.AddMemberName("HasErrors");
                userType.AddMemberName("LocalEventRouter");
                xamlType = userType;
                break;

            case 40:   //  NavDemo.Dialog
                userType = new global::NavDemo.NavDemo_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_40_Dialog;
                userType.AddMemberName("idDialog");
                userType.AddMemberName("idFriend");
                userType.AddMemberName("nameFriend");
                userType.AddMemberName("nickNameFriend");
                userType.AddMemberName("imageDialog");
                userType.AddMemberName("describeDialog");
                userType.AddMemberName("textDialog");
                userType.AddMemberName("timeDialog");
                userType.AddMemberName("flagTime");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 41:   //  System.Collections.Generic.List`1<NavDemo.Dialog>
                userType = new global::NavDemo.NavDemo_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.CollectionAdd = VectorAdd_41_List;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 42:   //  NavDemo.AttachProps.RtfText
                userType = new global::NavDemo.NavDemo_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_42_RtfText;
                userType.AddMemberName("RichText");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 43:   //  Windows.UI.Xaml.DependencyObject
                xamlType = new global::NavDemo.NavDemo_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 44:   //  NavDemo.AboutPage
                userType = new global::NavDemo.NavDemo_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("MVVMSidekick.Views.MVVMPage"));
                userType.Activator = Activate_44_AboutPage;
                userType.AddMemberName("StrongTypeViewModel");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 45:   //  NavDemo.ViewModels.BlankPage1_Model
                userType = new global::NavDemo.NavDemo_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("MVVMSidekick.ViewModels.ViewModelBase`1<NavDemo.ViewModels.BlankPage1_Model>"));
                userType.Activator = Activate_45_BlankPage1_Model;
                userType.AddMemberName("Title");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 46:   //  MVVMSidekick.ViewModels.ViewModelBase`1<NavDemo.ViewModels.BlankPage1_Model>
                userType = new global::NavDemo.NavDemo_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("MVVMSidekick.ViewModels.BindableBase`1<NavDemo.ViewModels.BlankPage1_Model>"));
                userType.AddMemberName("UnbindDisposeGroup");
                userType.AddMemberName("UnloadDisposeGroup");
                userType.AddMemberName("IsDisposingWhenUnbindRequired");
                userType.AddMemberName("IsDisposingWhenUnloadRequired");
                userType.AddMemberName("StageManager");
                userType.AddMemberName("HaveReturnValue");
                userType.AddMemberName("IsUIBusy");
                userType.AddMemberName("Dispatcher");
                xamlType = userType;
                break;

            case 47:   //  MVVMSidekick.ViewModels.BindableBase`1<NavDemo.ViewModels.BlankPage1_Model>
                userType = new global::NavDemo.NavDemo_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("MVVMSidekick.ViewModels.BindableBase"));
                userType.AddMemberName("BindableInstanceId");
                userType.AddMemberName("Error");
                userType.AddMemberName("HasErrors");
                userType.AddMemberName("LocalEventRouter");
                xamlType = userType;
                break;

            case 48:   //  NavDemo.BlankPage1
                userType = new global::NavDemo.NavDemo_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("MVVMSidekick.Views.MVVMPage"));
                userType.Activator = Activate_48_BlankPage1;
                userType.AddMemberName("StrongTypeViewModel");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 49:   //  NavDemo.ViewModels.HomePage_Model
                userType = new global::NavDemo.NavDemo_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("MVVMSidekick.ViewModels.ViewModelBase`1<NavDemo.ViewModels.HomePage_Model>"));
                userType.Activator = Activate_49_HomePage_Model;
                userType.AddMemberName("Title");
                userType.AddMemberName("currentDialog");
                userType.AddMemberName("chosenFriend");
                userType.AddMemberName("friendItemList");
                userType.AddMemberName("suggest");
                userType.AddMemberName("fontFamily");
                userType.AddMemberName("suggestBoxText");
                userType.AddMemberName("currentIndex");
                userType.AddMemberName("richEditBoxContent");
                userType.AddMemberName("CommandChoseFriend");
                userType.AddMemberName("CommandInsertDialog");
                userType.AddMemberName("CommandChangeDate");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 50:   //  MVVMSidekick.ViewModels.ViewModelBase`1<NavDemo.ViewModels.HomePage_Model>
                userType = new global::NavDemo.NavDemo_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("MVVMSidekick.ViewModels.BindableBase`1<NavDemo.ViewModels.HomePage_Model>"));
                userType.AddMemberName("UnbindDisposeGroup");
                userType.AddMemberName("UnloadDisposeGroup");
                userType.AddMemberName("IsDisposingWhenUnbindRequired");
                userType.AddMemberName("IsDisposingWhenUnloadRequired");
                userType.AddMemberName("StageManager");
                userType.AddMemberName("HaveReturnValue");
                userType.AddMemberName("IsUIBusy");
                userType.AddMemberName("Dispatcher");
                xamlType = userType;
                break;

            case 51:   //  MVVMSidekick.ViewModels.BindableBase`1<NavDemo.ViewModels.HomePage_Model>
                userType = new global::NavDemo.NavDemo_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("MVVMSidekick.ViewModels.BindableBase"));
                userType.AddMemberName("BindableInstanceId");
                userType.AddMemberName("Error");
                userType.AddMemberName("HasErrors");
                userType.AddMemberName("LocalEventRouter");
                xamlType = userType;
                break;

            case 52:   //  NavDemo.Services.SuggestService
                userType = new global::NavDemo.NavDemo_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("NavDemo.Models.Singleton`1<NavDemo.Services.SuggestService>"));
                userType.SetIsReturnTypeStub();
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 53:   //  NavDemo.Models.Singleton`1<NavDemo.Services.SuggestService>
                userType = new global::NavDemo.NavDemo_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_53_Singleton;
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 54:   //  Windows.UI.Xaml.Media.FontFamily
                xamlType = new global::NavDemo.NavDemo_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 55:   //  Microsoft.Xaml.Interactivity.Interaction
                userType = new global::NavDemo.NavDemo_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.AddMemberName("Behaviors");
                xamlType = userType;
                break;

            case 56:   //  Microsoft.Xaml.Interactivity.BehaviorCollection
                userType = new global::NavDemo.NavDemo_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.DependencyObjectCollection"));
                userType.CollectionAdd = VectorAdd_56_BehaviorCollection;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 57:   //  Windows.UI.Xaml.DependencyObjectCollection
                xamlType = new global::NavDemo.NavDemo_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 58:   //  Microsoft.Xaml.Interactions.Core.EventTriggerBehavior
                userType = new global::NavDemo.NavDemo_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.DependencyObject"));
                userType.Activator = Activate_58_EventTriggerBehavior;
                userType.SetContentPropertyName("Microsoft.Xaml.Interactions.Core.EventTriggerBehavior.Actions");
                userType.AddMemberName("Actions");
                userType.AddMemberName("EventName");
                userType.AddMemberName("SourceObject");
                userType.AddMemberName("AssociatedObject");
                xamlType = userType;
                break;

            case 59:   //  Microsoft.Xaml.Interactivity.ActionCollection
                userType = new global::NavDemo.NavDemo_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.DependencyObjectCollection"));
                userType.CollectionAdd = VectorAdd_59_ActionCollection;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 60:   //  Microsoft.Xaml.Interactions.Core.InvokeCommandAction
                userType = new global::NavDemo.NavDemo_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.DependencyObject"));
                userType.Activator = Activate_60_InvokeCommandAction;
                userType.AddMemberName("Command");
                userType.AddMemberName("CommandParameter");
                userType.AddMemberName("InputConverter");
                userType.AddMemberName("InputConverterParameter");
                userType.AddMemberName("InputConverterLanguage");
                xamlType = userType;
                break;

            case 61:   //  System.Windows.Input.ICommand
                userType = new global::NavDemo.NavDemo_XamlTypeInfo.XamlUserType(this, typeName, type, null);
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 62:   //  Windows.UI.Xaml.Data.IValueConverter
                xamlType = new global::NavDemo.NavDemo_XamlTypeInfo.XamlSystemBaseType(typeName, type);
                break;

            case 63:   //  MVVMSidekick.Behaviors.SendToEventRouterAction
                userType = new global::NavDemo.NavDemo_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.DependencyObject"));
                userType.Activator = Activate_63_SendToEventRouterAction;
                userType.AddMemberName("EventData");
                userType.AddMemberName("IsEventFiringToAllBaseClassesChannels");
                userType.AddMemberName("EventRoutingName");
                userType.AddMemberName("EventRouter");
                userType.AddMemberName("EventDataType");
                userType.AddMemberName("IsEventFiringToAllImplementedInterfacesChannels");
                xamlType = userType;
                break;

            case 64:   //  System.Type
                userType = new global::NavDemo.NavDemo_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 65:   //  NavDemo.HomePage
                userType = new global::NavDemo.NavDemo_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("MVVMSidekick.Views.MVVMPage"));
                userType.Activator = Activate_65_HomePage;
                userType.AddMemberName("StrongTypeViewModel");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 66:   //  NavDemo.ViewModels.MainPage_Model
                userType = new global::NavDemo.NavDemo_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("MVVMSidekick.ViewModels.ViewModelBase`1<NavDemo.ViewModels.MainPage_Model>"));
                userType.Activator = Activate_66_MainPage_Model;
                userType.AddMemberName("Title");
                userType.AddMemberName("NavMenuItemList");
                userType.AddMemberName("IsPaneOpen");
                userType.AddMemberName("listViewBackGround");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 67:   //  MVVMSidekick.ViewModels.ViewModelBase`1<NavDemo.ViewModels.MainPage_Model>
                userType = new global::NavDemo.NavDemo_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("MVVMSidekick.ViewModels.BindableBase`1<NavDemo.ViewModels.MainPage_Model>"));
                userType.AddMemberName("UnbindDisposeGroup");
                userType.AddMemberName("UnloadDisposeGroup");
                userType.AddMemberName("IsDisposingWhenUnbindRequired");
                userType.AddMemberName("IsDisposingWhenUnloadRequired");
                userType.AddMemberName("StageManager");
                userType.AddMemberName("HaveReturnValue");
                userType.AddMemberName("IsUIBusy");
                userType.AddMemberName("Dispatcher");
                xamlType = userType;
                break;

            case 68:   //  MVVMSidekick.ViewModels.BindableBase`1<NavDemo.ViewModels.MainPage_Model>
                userType = new global::NavDemo.NavDemo_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("MVVMSidekick.ViewModels.BindableBase"));
                userType.AddMemberName("BindableInstanceId");
                userType.AddMemberName("Error");
                userType.AddMemberName("HasErrors");
                userType.AddMemberName("LocalEventRouter");
                xamlType = userType;
                break;

            case 69:   //  System.Collections.ObjectModel.ObservableCollection`1<NavDemo.Models.NavMenuItem>
                userType = new global::NavDemo.NavDemo_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("System.Collections.ObjectModel.Collection`1<NavDemo.Models.NavMenuItem>"));
                userType.CollectionAdd = VectorAdd_69_ObservableCollection;
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 70:   //  System.Collections.ObjectModel.Collection`1<NavDemo.Models.NavMenuItem>
                userType = new global::NavDemo.NavDemo_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Object"));
                userType.Activator = Activate_70_Collection;
                userType.CollectionAdd = VectorAdd_70_Collection;
                xamlType = userType;
                break;

            case 71:   //  NavDemo.Models.NavMenuItem
                userType = new global::NavDemo.NavDemo_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("MVVMSidekick.ViewModels.BindableBase`1<NavDemo.Models.NavMenuItem>"));
                userType.Activator = Activate_71_NavMenuItem;
                userType.AddMemberName("Glyph");
                userType.AddMemberName("Label");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 72:   //  MVVMSidekick.ViewModels.BindableBase`1<NavDemo.Models.NavMenuItem>
                userType = new global::NavDemo.NavDemo_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("MVVMSidekick.ViewModels.BindableBase"));
                userType.AddMemberName("BindableInstanceId");
                userType.AddMemberName("Error");
                userType.AddMemberName("HasErrors");
                userType.AddMemberName("LocalEventRouter");
                xamlType = userType;
                break;

            case 73:   //  MVVMSidekick.Views.StageManager
                userType = new global::NavDemo.NavDemo_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.DependencyObject"));
                userType.AddMemberName("CurrentBindingView");
                userType.AddMemberName("DefaultStage");
                userType.AddMemberName("Beacon");
                xamlType = userType;
                break;

            case 74:   //  MVVMSidekick.Views.IView
                userType = new global::NavDemo.NavDemo_XamlTypeInfo.XamlUserType(this, typeName, type, null);
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 75:   //  MVVMSidekick.Views.IStage
                userType = new global::NavDemo.NavDemo_XamlTypeInfo.XamlUserType(this, typeName, type, null);
                userType.SetIsReturnTypeStub();
                xamlType = userType;
                break;

            case 76:   //  NavDemo.MainPage
                userType = new global::NavDemo.NavDemo_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("MVVMSidekick.Views.MVVMPage"));
                userType.Activator = Activate_76_MainPage;
                userType.AddMemberName("StrongTypeViewModel");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 77:   //  NavDemo.ViewModels.SearchPage_Model
                userType = new global::NavDemo.NavDemo_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("MVVMSidekick.ViewModels.ViewModelBase`1<NavDemo.ViewModels.SearchPage_Model>"));
                userType.Activator = Activate_77_SearchPage_Model;
                userType.AddMemberName("Title");
                userType.AddMemberName("dateText");
                userType.AddMemberName("listDialog");
                userType.AddMemberName("chosenDialog");
                userType.AddMemberName("suggest");
                userType.AddMemberName("chosenFriend");
                userType.AddMemberName("friendItemList");
                userType.AddMemberName("suggestBoxText");
                userType.AddMemberName("CommandAddFriend");
                userType.AddMemberName("CommandGetFriends");
                userType.AddMemberName("CommandTableInit");
                userType.AddMemberName("CommandSubmitFriend");
                userType.AddMemberName("CommandSubmitDate");
                userType.AddMemberName("CommandChoseFriend");
                userType.AddMemberName("CommandChangeDate");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 78:   //  MVVMSidekick.ViewModels.ViewModelBase`1<NavDemo.ViewModels.SearchPage_Model>
                userType = new global::NavDemo.NavDemo_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("MVVMSidekick.ViewModels.BindableBase`1<NavDemo.ViewModels.SearchPage_Model>"));
                userType.AddMemberName("UnbindDisposeGroup");
                userType.AddMemberName("UnloadDisposeGroup");
                userType.AddMemberName("IsDisposingWhenUnbindRequired");
                userType.AddMemberName("IsDisposingWhenUnloadRequired");
                userType.AddMemberName("StageManager");
                userType.AddMemberName("HaveReturnValue");
                userType.AddMemberName("IsUIBusy");
                userType.AddMemberName("Dispatcher");
                xamlType = userType;
                break;

            case 79:   //  MVVMSidekick.ViewModels.BindableBase`1<NavDemo.ViewModels.SearchPage_Model>
                userType = new global::NavDemo.NavDemo_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("MVVMSidekick.ViewModels.BindableBase"));
                userType.AddMemberName("BindableInstanceId");
                userType.AddMemberName("Error");
                userType.AddMemberName("HasErrors");
                userType.AddMemberName("LocalEventRouter");
                xamlType = userType;
                break;

            case 80:   //  NavDemo.Behaviours.ListViewBehavior
                userType = new global::NavDemo.NavDemo_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("Windows.UI.Xaml.DependencyObject"));
                userType.Activator = Activate_80_ListViewBehavior;
                userType.AddMemberName("AssociatedObject");
                userType.SetIsLocalType();
                xamlType = userType;
                break;

            case 81:   //  NavDemo.SearchPage
                userType = new global::NavDemo.NavDemo_XamlTypeInfo.XamlUserType(this, typeName, type, GetXamlTypeByName("MVVMSidekick.Views.MVVMPage"));
                userType.Activator = Activate_81_SearchPage;
                userType.AddMemberName("StrongTypeViewModel");
                userType.SetIsLocalType();
                xamlType = userType;
                break;
            }
            return xamlType;
        }


        private object get_0_MVVMPage_ContentObject(object instance)
        {
            var that = (global::MVVMSidekick.Views.MVVMPage)instance;
            return that.ContentObject;
        }
        private void set_0_MVVMPage_ContentObject(object instance, object Value)
        {
            var that = (global::MVVMSidekick.Views.MVVMPage)instance;
            that.ContentObject = (global::System.Object)Value;
        }
        private object get_1_MVVMPage_ViewModel(object instance)
        {
            var that = (global::MVVMSidekick.Views.MVVMPage)instance;
            return that.ViewModel;
        }
        private void set_1_MVVMPage_ViewModel(object instance, object Value)
        {
            var that = (global::MVVMSidekick.Views.MVVMPage)instance;
            that.ViewModel = (global::MVVMSidekick.ViewModels.IViewModel)Value;
        }
        private object get_2_MVVMPage_ViewType(object instance)
        {
            var that = (global::MVVMSidekick.Views.MVVMPage)instance;
            return that.ViewType;
        }
        private object get_3_ShowFriendPage_Model_Title(object instance)
        {
            var that = (global::NavDemo.ViewModels.ShowFriendPage_Model)instance;
            return that.Title;
        }
        private void set_3_ShowFriendPage_Model_Title(object instance, object Value)
        {
            var that = (global::NavDemo.ViewModels.ShowFriendPage_Model)instance;
            that.Title = (global::System.String)Value;
        }
        private object get_4_ShowFriendPage_Model_currentFriend(object instance)
        {
            var that = (global::NavDemo.ViewModels.ShowFriendPage_Model)instance;
            return that.currentFriend;
        }
        private void set_4_ShowFriendPage_Model_currentFriend(object instance, object Value)
        {
            var that = (global::NavDemo.ViewModels.ShowFriendPage_Model)instance;
            that.currentFriend = (global::NavDemo.Friend)Value;
        }
        private object get_5_ShowFriendPage_Model_listFriend(object instance)
        {
            var that = (global::NavDemo.ViewModels.ShowFriendPage_Model)instance;
            return that.listFriend;
        }
        private void set_5_ShowFriendPage_Model_listFriend(object instance, object Value)
        {
            var that = (global::NavDemo.ViewModels.ShowFriendPage_Model)instance;
            that.listFriend = (global::System.Collections.Generic.List<global::NavDemo.Friend>)Value;
        }
        private object get_6_Friend_idFriend(object instance)
        {
            var that = (global::NavDemo.Friend)instance;
            return that.idFriend;
        }
        private void set_6_Friend_idFriend(object instance, object Value)
        {
            var that = (global::NavDemo.Friend)instance;
            that.idFriend = (global::System.Int32)Value;
        }
        private object get_7_Friend_nameFriend(object instance)
        {
            var that = (global::NavDemo.Friend)instance;
            return that.nameFriend;
        }
        private void set_7_Friend_nameFriend(object instance, object Value)
        {
            var that = (global::NavDemo.Friend)instance;
            that.nameFriend = (global::System.String)Value;
        }
        private object get_8_Friend_iconFriend(object instance)
        {
            var that = (global::NavDemo.Friend)instance;
            return that.iconFriend;
        }
        private void set_8_Friend_iconFriend(object instance, object Value)
        {
            var that = (global::NavDemo.Friend)instance;
            that.iconFriend = (global::System.String)Value;
        }
        private object get_9_Friend_nickNameFriend(object instance)
        {
            var that = (global::NavDemo.Friend)instance;
            return that.nickNameFriend;
        }
        private void set_9_Friend_nickNameFriend(object instance, object Value)
        {
            var that = (global::NavDemo.Friend)instance;
            that.nickNameFriend = (global::System.String)Value;
        }
        private object get_10_ShowFriendPage_Model_indexFriend(object instance)
        {
            var that = (global::NavDemo.ViewModels.ShowFriendPage_Model)instance;
            return that.indexFriend;
        }
        private void set_10_ShowFriendPage_Model_indexFriend(object instance, object Value)
        {
            var that = (global::NavDemo.ViewModels.ShowFriendPage_Model)instance;
            that.indexFriend = (global::System.Int32)Value;
        }
        private object get_11_ShowFriendPage_Model_CommandToLastFriend(object instance)
        {
            var that = (global::NavDemo.ViewModels.ShowFriendPage_Model)instance;
            return that.CommandToLastFriend;
        }
        private void set_11_ShowFriendPage_Model_CommandToLastFriend(object instance, object Value)
        {
            var that = (global::NavDemo.ViewModels.ShowFriendPage_Model)instance;
            that.CommandToLastFriend = (global::MVVMSidekick.ViewModels.CommandModel<global::MVVMSidekick.Reactive.ReactiveCommand, global::System.String>)Value;
        }
        private object get_12_ShowFriendPage_Model_CommandToNextFriend(object instance)
        {
            var that = (global::NavDemo.ViewModels.ShowFriendPage_Model)instance;
            return that.CommandToNextFriend;
        }
        private void set_12_ShowFriendPage_Model_CommandToNextFriend(object instance, object Value)
        {
            var that = (global::NavDemo.ViewModels.ShowFriendPage_Model)instance;
            that.CommandToNextFriend = (global::MVVMSidekick.ViewModels.CommandModel<global::MVVMSidekick.Reactive.ReactiveCommand, global::System.String>)Value;
        }
        private object get_13_ShowFriendPage_Model_CommandDeleteFriend(object instance)
        {
            var that = (global::NavDemo.ViewModels.ShowFriendPage_Model)instance;
            return that.CommandDeleteFriend;
        }
        private void set_13_ShowFriendPage_Model_CommandDeleteFriend(object instance, object Value)
        {
            var that = (global::NavDemo.ViewModels.ShowFriendPage_Model)instance;
            that.CommandDeleteFriend = (global::MVVMSidekick.ViewModels.CommandModel<global::MVVMSidekick.Reactive.ReactiveCommand, global::System.String>)Value;
        }
        private object get_14_ShowFriendPage_Model_CommandInsertFriend(object instance)
        {
            var that = (global::NavDemo.ViewModels.ShowFriendPage_Model)instance;
            return that.CommandInsertFriend;
        }
        private void set_14_ShowFriendPage_Model_CommandInsertFriend(object instance, object Value)
        {
            var that = (global::NavDemo.ViewModels.ShowFriendPage_Model)instance;
            that.CommandInsertFriend = (global::MVVMSidekick.ViewModels.CommandModel<global::MVVMSidekick.Reactive.ReactiveCommand, global::System.String>)Value;
        }
        private object get_15_ShowFriendPage_Model_CommandTest(object instance)
        {
            var that = (global::NavDemo.ViewModels.ShowFriendPage_Model)instance;
            return that.CommandTest;
        }
        private void set_15_ShowFriendPage_Model_CommandTest(object instance, object Value)
        {
            var that = (global::NavDemo.ViewModels.ShowFriendPage_Model)instance;
            that.CommandTest = (global::MVVMSidekick.ViewModels.CommandModel<global::MVVMSidekick.Reactive.ReactiveCommand, global::System.String>)Value;
        }
        private object get_16_ViewModelBase_UnbindDisposeGroup(object instance)
        {
            var that = (global::MVVMSidekick.ViewModels.ViewModelBase<global::NavDemo.ViewModels.ShowFriendPage_Model>)instance;
            return that.UnbindDisposeGroup;
        }
        private object get_17_ViewModelBase_UnloadDisposeGroup(object instance)
        {
            var that = (global::MVVMSidekick.ViewModels.ViewModelBase<global::NavDemo.ViewModels.ShowFriendPage_Model>)instance;
            return that.UnloadDisposeGroup;
        }
        private object get_18_ViewModelBase_IsDisposingWhenUnbindRequired(object instance)
        {
            var that = (global::MVVMSidekick.ViewModels.ViewModelBase<global::NavDemo.ViewModels.ShowFriendPage_Model>)instance;
            return that.IsDisposingWhenUnbindRequired;
        }
        private object get_19_ViewModelBase_IsDisposingWhenUnloadRequired(object instance)
        {
            var that = (global::MVVMSidekick.ViewModels.ViewModelBase<global::NavDemo.ViewModels.ShowFriendPage_Model>)instance;
            return that.IsDisposingWhenUnloadRequired;
        }
        private object get_20_ViewModelBase_StageManager(object instance)
        {
            var that = (global::MVVMSidekick.ViewModels.ViewModelBase<global::NavDemo.ViewModels.ShowFriendPage_Model>)instance;
            return that.StageManager;
        }
        private void set_20_ViewModelBase_StageManager(object instance, object Value)
        {
            var that = (global::MVVMSidekick.ViewModels.ViewModelBase<global::NavDemo.ViewModels.ShowFriendPage_Model>)instance;
            that.StageManager = (global::MVVMSidekick.Views.IStageManager)Value;
        }
        private object get_21_ViewModelBase_HaveReturnValue(object instance)
        {
            var that = (global::MVVMSidekick.ViewModels.ViewModelBase<global::NavDemo.ViewModels.ShowFriendPage_Model>)instance;
            return that.HaveReturnValue;
        }
        private object get_22_ViewModelBase_IsUIBusy(object instance)
        {
            var that = (global::MVVMSidekick.ViewModels.ViewModelBase<global::NavDemo.ViewModels.ShowFriendPage_Model>)instance;
            return that.IsUIBusy;
        }
        private void set_22_ViewModelBase_IsUIBusy(object instance, object Value)
        {
            var that = (global::MVVMSidekick.ViewModels.ViewModelBase<global::NavDemo.ViewModels.ShowFriendPage_Model>)instance;
            that.IsUIBusy = (global::System.Boolean)Value;
        }
        private object get_23_ViewModelBase_Dispatcher(object instance)
        {
            var that = (global::MVVMSidekick.ViewModels.ViewModelBase<global::NavDemo.ViewModels.ShowFriendPage_Model>)instance;
            return that.Dispatcher;
        }
        private object get_24_BindableBase_BindableInstanceId(object instance)
        {
            var that = (global::MVVMSidekick.ViewModels.BindableBase<global::NavDemo.ViewModels.ShowFriendPage_Model>)instance;
            return that.BindableInstanceId;
        }
        private object get_25_BindableBase_Error(object instance)
        {
            var that = (global::MVVMSidekick.ViewModels.BindableBase<global::NavDemo.ViewModels.ShowFriendPage_Model>)instance;
            return that.Error;
        }
        private object get_26_BindableBase_HasErrors(object instance)
        {
            var that = (global::MVVMSidekick.ViewModels.BindableBase<global::NavDemo.ViewModels.ShowFriendPage_Model>)instance;
            return that.HasErrors;
        }
        private object get_27_BindableBase_LocalEventRouter(object instance)
        {
            var that = (global::MVVMSidekick.ViewModels.BindableBase<global::NavDemo.ViewModels.ShowFriendPage_Model>)instance;
            return that.LocalEventRouter;
        }
        private void set_27_BindableBase_LocalEventRouter(object instance, object Value)
        {
            var that = (global::MVVMSidekick.ViewModels.BindableBase<global::NavDemo.ViewModels.ShowFriendPage_Model>)instance;
            that.LocalEventRouter = (global::MVVMSidekick.EventRouting.EventRouter)Value;
        }
        private object get_28_BindableBase_IsValidationActivated(object instance)
        {
            var that = (global::MVVMSidekick.ViewModels.BindableBase)instance;
            return that.IsValidationActivated;
        }
        private void set_28_BindableBase_IsValidationActivated(object instance, object Value)
        {
            var that = (global::MVVMSidekick.ViewModels.BindableBase)instance;
            that.IsValidationActivated = (global::System.Boolean)Value;
        }
        private object get_29_BindableBase_IsNotificationActivated(object instance)
        {
            var that = (global::MVVMSidekick.ViewModels.BindableBase)instance;
            return that.IsNotificationActivated;
        }
        private void set_29_BindableBase_IsNotificationActivated(object instance, object Value)
        {
            var that = (global::MVVMSidekick.ViewModels.BindableBase)instance;
            that.IsNotificationActivated = (global::System.Boolean)Value;
        }
        private object get_30_DisposeGroupBase_DisposeInfoList(object instance)
        {
            var that = (global::MVVMSidekick.ViewModels.DisposeGroupBase)instance;
            return that.DisposeInfoList;
        }
        private object get_31_DisposeEntry_CallingCodeContext(object instance)
        {
            var that = (global::MVVMSidekick.Common.DisposeEntry)instance;
            return that.CallingCodeContext;
        }
        private void set_31_DisposeEntry_CallingCodeContext(object instance, object Value)
        {
            var that = (global::MVVMSidekick.Common.DisposeEntry)instance;
            that.CallingCodeContext = (global::MVVMSidekick.Common.CallingCodeContext)Value;
        }
        private object get_32_DisposeEntry_IsNeedCheckOnFinalizer(object instance)
        {
            var that = (global::MVVMSidekick.Common.DisposeEntry)instance;
            return that.IsNeedCheckOnFinalizer;
        }
        private void set_32_DisposeEntry_IsNeedCheckOnFinalizer(object instance, object Value)
        {
            var that = (global::MVVMSidekick.Common.DisposeEntry)instance;
            that.IsNeedCheckOnFinalizer = (global::System.Boolean)Value;
        }
        private object get_33_DisposeEntry_Exception(object instance)
        {
            var that = (global::MVVMSidekick.Common.DisposeEntry)instance;
            return that.Exception;
        }
        private void set_33_DisposeEntry_Exception(object instance, object Value)
        {
            var that = (global::MVVMSidekick.Common.DisposeEntry)instance;
            that.Exception = (global::System.Exception)Value;
        }
        private object get_34_DisposeEntry_Action(object instance)
        {
            var that = (global::MVVMSidekick.Common.DisposeEntry)instance;
            return that.Action;
        }
        private void set_34_DisposeEntry_Action(object instance, object Value)
        {
            var that = (global::MVVMSidekick.Common.DisposeEntry)instance;
            that.Action = (global::System.Action)Value;
        }
        private object get_35_ShowFriendPage_StrongTypeViewModel(object instance)
        {
            var that = (global::NavDemo.ShowFriendPage)instance;
            return that.StrongTypeViewModel;
        }
        private void set_35_ShowFriendPage_StrongTypeViewModel(object instance, object Value)
        {
            var that = (global::NavDemo.ShowFriendPage)instance;
            that.StrongTypeViewModel = (global::NavDemo.ViewModels.ShowFriendPage_Model)Value;
        }
        private object get_36_AddFriendPage_Model_Title(object instance)
        {
            var that = (global::NavDemo.ViewModels.AddFriendPage_Model)instance;
            return that.Title;
        }
        private void set_36_AddFriendPage_Model_Title(object instance, object Value)
        {
            var that = (global::NavDemo.ViewModels.AddFriendPage_Model)instance;
            that.Title = (global::System.String)Value;
        }
        private object get_37_AddFriendPage_Model_friend(object instance)
        {
            var that = (global::NavDemo.ViewModels.AddFriendPage_Model)instance;
            return that.friend;
        }
        private void set_37_AddFriendPage_Model_friend(object instance, object Value)
        {
            var that = (global::NavDemo.ViewModels.AddFriendPage_Model)instance;
            that.friend = (global::NavDemo.Friend)Value;
        }
        private object get_38_AddFriendPage_Model_CommandInsertFriend(object instance)
        {
            var that = (global::NavDemo.ViewModels.AddFriendPage_Model)instance;
            return that.CommandInsertFriend;
        }
        private void set_38_AddFriendPage_Model_CommandInsertFriend(object instance, object Value)
        {
            var that = (global::NavDemo.ViewModels.AddFriendPage_Model)instance;
            that.CommandInsertFriend = (global::MVVMSidekick.ViewModels.CommandModel<global::MVVMSidekick.Reactive.ReactiveCommand, global::System.String>)Value;
        }
        private object get_39_ViewModelBase_UnbindDisposeGroup(object instance)
        {
            var that = (global::MVVMSidekick.ViewModels.ViewModelBase<global::NavDemo.ViewModels.AddFriendPage_Model>)instance;
            return that.UnbindDisposeGroup;
        }
        private object get_40_ViewModelBase_UnloadDisposeGroup(object instance)
        {
            var that = (global::MVVMSidekick.ViewModels.ViewModelBase<global::NavDemo.ViewModels.AddFriendPage_Model>)instance;
            return that.UnloadDisposeGroup;
        }
        private object get_41_ViewModelBase_IsDisposingWhenUnbindRequired(object instance)
        {
            var that = (global::MVVMSidekick.ViewModels.ViewModelBase<global::NavDemo.ViewModels.AddFriendPage_Model>)instance;
            return that.IsDisposingWhenUnbindRequired;
        }
        private object get_42_ViewModelBase_IsDisposingWhenUnloadRequired(object instance)
        {
            var that = (global::MVVMSidekick.ViewModels.ViewModelBase<global::NavDemo.ViewModels.AddFriendPage_Model>)instance;
            return that.IsDisposingWhenUnloadRequired;
        }
        private object get_43_ViewModelBase_StageManager(object instance)
        {
            var that = (global::MVVMSidekick.ViewModels.ViewModelBase<global::NavDemo.ViewModels.AddFriendPage_Model>)instance;
            return that.StageManager;
        }
        private void set_43_ViewModelBase_StageManager(object instance, object Value)
        {
            var that = (global::MVVMSidekick.ViewModels.ViewModelBase<global::NavDemo.ViewModels.AddFriendPage_Model>)instance;
            that.StageManager = (global::MVVMSidekick.Views.IStageManager)Value;
        }
        private object get_44_ViewModelBase_HaveReturnValue(object instance)
        {
            var that = (global::MVVMSidekick.ViewModels.ViewModelBase<global::NavDemo.ViewModels.AddFriendPage_Model>)instance;
            return that.HaveReturnValue;
        }
        private object get_45_ViewModelBase_IsUIBusy(object instance)
        {
            var that = (global::MVVMSidekick.ViewModels.ViewModelBase<global::NavDemo.ViewModels.AddFriendPage_Model>)instance;
            return that.IsUIBusy;
        }
        private void set_45_ViewModelBase_IsUIBusy(object instance, object Value)
        {
            var that = (global::MVVMSidekick.ViewModels.ViewModelBase<global::NavDemo.ViewModels.AddFriendPage_Model>)instance;
            that.IsUIBusy = (global::System.Boolean)Value;
        }
        private object get_46_ViewModelBase_Dispatcher(object instance)
        {
            var that = (global::MVVMSidekick.ViewModels.ViewModelBase<global::NavDemo.ViewModels.AddFriendPage_Model>)instance;
            return that.Dispatcher;
        }
        private object get_47_BindableBase_BindableInstanceId(object instance)
        {
            var that = (global::MVVMSidekick.ViewModels.BindableBase<global::NavDemo.ViewModels.AddFriendPage_Model>)instance;
            return that.BindableInstanceId;
        }
        private object get_48_BindableBase_Error(object instance)
        {
            var that = (global::MVVMSidekick.ViewModels.BindableBase<global::NavDemo.ViewModels.AddFriendPage_Model>)instance;
            return that.Error;
        }
        private object get_49_BindableBase_HasErrors(object instance)
        {
            var that = (global::MVVMSidekick.ViewModels.BindableBase<global::NavDemo.ViewModels.AddFriendPage_Model>)instance;
            return that.HasErrors;
        }
        private object get_50_BindableBase_LocalEventRouter(object instance)
        {
            var that = (global::MVVMSidekick.ViewModels.BindableBase<global::NavDemo.ViewModels.AddFriendPage_Model>)instance;
            return that.LocalEventRouter;
        }
        private void set_50_BindableBase_LocalEventRouter(object instance, object Value)
        {
            var that = (global::MVVMSidekick.ViewModels.BindableBase<global::NavDemo.ViewModels.AddFriendPage_Model>)instance;
            that.LocalEventRouter = (global::MVVMSidekick.EventRouting.EventRouter)Value;
        }
        private object get_51_AddFriendPage_StrongTypeViewModel(object instance)
        {
            var that = (global::NavDemo.AddFriendPage)instance;
            return that.StrongTypeViewModel;
        }
        private void set_51_AddFriendPage_StrongTypeViewModel(object instance, object Value)
        {
            var that = (global::NavDemo.AddFriendPage)instance;
            that.StrongTypeViewModel = (global::NavDemo.ViewModels.AddFriendPage_Model)Value;
        }
        private object get_52_AboutPage_Model_Title(object instance)
        {
            var that = (global::NavDemo.ViewModels.AboutPage_Model)instance;
            return that.Title;
        }
        private void set_52_AboutPage_Model_Title(object instance, object Value)
        {
            var that = (global::NavDemo.ViewModels.AboutPage_Model)instance;
            that.Title = (global::System.String)Value;
        }
        private object get_53_AboutPage_Model_currentDialog(object instance)
        {
            var that = (global::NavDemo.ViewModels.AboutPage_Model)instance;
            return that.currentDialog;
        }
        private void set_53_AboutPage_Model_currentDialog(object instance, object Value)
        {
            var that = (global::NavDemo.ViewModels.AboutPage_Model)instance;
            that.currentDialog = (global::NavDemo.Dialog)Value;
        }
        private object get_54_AboutPage_Model_listDialog(object instance)
        {
            var that = (global::NavDemo.ViewModels.AboutPage_Model)instance;
            return that.listDialog;
        }
        private void set_54_AboutPage_Model_listDialog(object instance, object Value)
        {
            var that = (global::NavDemo.ViewModels.AboutPage_Model)instance;
            that.listDialog = (global::System.Collections.Generic.List<global::NavDemo.Dialog>)Value;
        }
        private object get_55_Dialog_idDialog(object instance)
        {
            var that = (global::NavDemo.Dialog)instance;
            return that.idDialog;
        }
        private void set_55_Dialog_idDialog(object instance, object Value)
        {
            var that = (global::NavDemo.Dialog)instance;
            that.idDialog = (global::System.Int32)Value;
        }
        private object get_56_Dialog_idFriend(object instance)
        {
            var that = (global::NavDemo.Dialog)instance;
            return that.idFriend;
        }
        private void set_56_Dialog_idFriend(object instance, object Value)
        {
            var that = (global::NavDemo.Dialog)instance;
            that.idFriend = (global::System.Int32)Value;
        }
        private object get_57_Dialog_nameFriend(object instance)
        {
            var that = (global::NavDemo.Dialog)instance;
            return that.nameFriend;
        }
        private void set_57_Dialog_nameFriend(object instance, object Value)
        {
            var that = (global::NavDemo.Dialog)instance;
            that.nameFriend = (global::System.String)Value;
        }
        private object get_58_Dialog_nickNameFriend(object instance)
        {
            var that = (global::NavDemo.Dialog)instance;
            return that.nickNameFriend;
        }
        private void set_58_Dialog_nickNameFriend(object instance, object Value)
        {
            var that = (global::NavDemo.Dialog)instance;
            that.nickNameFriend = (global::System.String)Value;
        }
        private object get_59_Dialog_imageDialog(object instance)
        {
            var that = (global::NavDemo.Dialog)instance;
            return that.imageDialog;
        }
        private void set_59_Dialog_imageDialog(object instance, object Value)
        {
            var that = (global::NavDemo.Dialog)instance;
            that.imageDialog = (global::System.String)Value;
        }
        private object get_60_Dialog_describeDialog(object instance)
        {
            var that = (global::NavDemo.Dialog)instance;
            return that.describeDialog;
        }
        private void set_60_Dialog_describeDialog(object instance, object Value)
        {
            var that = (global::NavDemo.Dialog)instance;
            that.describeDialog = (global::System.String)Value;
        }
        private object get_61_Dialog_textDialog(object instance)
        {
            var that = (global::NavDemo.Dialog)instance;
            return that.textDialog;
        }
        private void set_61_Dialog_textDialog(object instance, object Value)
        {
            var that = (global::NavDemo.Dialog)instance;
            that.textDialog = (global::System.String)Value;
        }
        private object get_62_Dialog_timeDialog(object instance)
        {
            var that = (global::NavDemo.Dialog)instance;
            return that.timeDialog;
        }
        private void set_62_Dialog_timeDialog(object instance, object Value)
        {
            var that = (global::NavDemo.Dialog)instance;
            that.timeDialog = (global::System.String)Value;
        }
        private object get_63_Dialog_flagTime(object instance)
        {
            var that = (global::NavDemo.Dialog)instance;
            return that.flagTime;
        }
        private void set_63_Dialog_flagTime(object instance, object Value)
        {
            var that = (global::NavDemo.Dialog)instance;
            that.flagTime = (global::System.Int32)Value;
        }
        private object get_64_AboutPage_Model_indexDialog(object instance)
        {
            var that = (global::NavDemo.ViewModels.AboutPage_Model)instance;
            return that.indexDialog;
        }
        private void set_64_AboutPage_Model_indexDialog(object instance, object Value)
        {
            var that = (global::NavDemo.ViewModels.AboutPage_Model)instance;
            that.indexDialog = (global::System.Int32)Value;
        }
        private object get_65_AboutPage_Model_richEditBoxContent(object instance)
        {
            var that = (global::NavDemo.ViewModels.AboutPage_Model)instance;
            return that.richEditBoxContent;
        }
        private void set_65_AboutPage_Model_richEditBoxContent(object instance, object Value)
        {
            var that = (global::NavDemo.ViewModels.AboutPage_Model)instance;
            that.richEditBoxContent = (global::System.String)Value;
        }
        private object get_66_AboutPage_Model_CommandToLastPage(object instance)
        {
            var that = (global::NavDemo.ViewModels.AboutPage_Model)instance;
            return that.CommandToLastPage;
        }
        private void set_66_AboutPage_Model_CommandToLastPage(object instance, object Value)
        {
            var that = (global::NavDemo.ViewModels.AboutPage_Model)instance;
            that.CommandToLastPage = (global::MVVMSidekick.ViewModels.CommandModel<global::MVVMSidekick.Reactive.ReactiveCommand, global::System.String>)Value;
        }
        private object get_67_AboutPage_Model_CommandToNextPage(object instance)
        {
            var that = (global::NavDemo.ViewModels.AboutPage_Model)instance;
            return that.CommandToNextPage;
        }
        private void set_67_AboutPage_Model_CommandToNextPage(object instance, object Value)
        {
            var that = (global::NavDemo.ViewModels.AboutPage_Model)instance;
            that.CommandToNextPage = (global::MVVMSidekick.ViewModels.CommandModel<global::MVVMSidekick.Reactive.ReactiveCommand, global::System.String>)Value;
        }
        private object get_68_AboutPage_Model_CommandGetDialog(object instance)
        {
            var that = (global::NavDemo.ViewModels.AboutPage_Model)instance;
            return that.CommandGetDialog;
        }
        private void set_68_AboutPage_Model_CommandGetDialog(object instance, object Value)
        {
            var that = (global::NavDemo.ViewModels.AboutPage_Model)instance;
            that.CommandGetDialog = (global::MVVMSidekick.ViewModels.CommandModel<global::MVVMSidekick.Reactive.ReactiveCommand, global::System.String>)Value;
        }
        private object get_69_AboutPage_Model_CommandDeleteDialog(object instance)
        {
            var that = (global::NavDemo.ViewModels.AboutPage_Model)instance;
            return that.CommandDeleteDialog;
        }
        private void set_69_AboutPage_Model_CommandDeleteDialog(object instance, object Value)
        {
            var that = (global::NavDemo.ViewModels.AboutPage_Model)instance;
            that.CommandDeleteDialog = (global::MVVMSidekick.ViewModels.CommandModel<global::MVVMSidekick.Reactive.ReactiveCommand, global::System.String>)Value;
        }
        private object get_70_AboutPage_Model_CommandSaveDialog(object instance)
        {
            var that = (global::NavDemo.ViewModels.AboutPage_Model)instance;
            return that.CommandSaveDialog;
        }
        private void set_70_AboutPage_Model_CommandSaveDialog(object instance, object Value)
        {
            var that = (global::NavDemo.ViewModels.AboutPage_Model)instance;
            that.CommandSaveDialog = (global::MVVMSidekick.ViewModels.CommandModel<global::MVVMSidekick.Reactive.ReactiveCommand, global::System.String>)Value;
        }
        private object get_71_ViewModelBase_UnbindDisposeGroup(object instance)
        {
            var that = (global::MVVMSidekick.ViewModels.ViewModelBase<global::NavDemo.ViewModels.AboutPage_Model>)instance;
            return that.UnbindDisposeGroup;
        }
        private object get_72_ViewModelBase_UnloadDisposeGroup(object instance)
        {
            var that = (global::MVVMSidekick.ViewModels.ViewModelBase<global::NavDemo.ViewModels.AboutPage_Model>)instance;
            return that.UnloadDisposeGroup;
        }
        private object get_73_ViewModelBase_IsDisposingWhenUnbindRequired(object instance)
        {
            var that = (global::MVVMSidekick.ViewModels.ViewModelBase<global::NavDemo.ViewModels.AboutPage_Model>)instance;
            return that.IsDisposingWhenUnbindRequired;
        }
        private object get_74_ViewModelBase_IsDisposingWhenUnloadRequired(object instance)
        {
            var that = (global::MVVMSidekick.ViewModels.ViewModelBase<global::NavDemo.ViewModels.AboutPage_Model>)instance;
            return that.IsDisposingWhenUnloadRequired;
        }
        private object get_75_ViewModelBase_StageManager(object instance)
        {
            var that = (global::MVVMSidekick.ViewModels.ViewModelBase<global::NavDemo.ViewModels.AboutPage_Model>)instance;
            return that.StageManager;
        }
        private void set_75_ViewModelBase_StageManager(object instance, object Value)
        {
            var that = (global::MVVMSidekick.ViewModels.ViewModelBase<global::NavDemo.ViewModels.AboutPage_Model>)instance;
            that.StageManager = (global::MVVMSidekick.Views.IStageManager)Value;
        }
        private object get_76_ViewModelBase_HaveReturnValue(object instance)
        {
            var that = (global::MVVMSidekick.ViewModels.ViewModelBase<global::NavDemo.ViewModels.AboutPage_Model>)instance;
            return that.HaveReturnValue;
        }
        private object get_77_ViewModelBase_IsUIBusy(object instance)
        {
            var that = (global::MVVMSidekick.ViewModels.ViewModelBase<global::NavDemo.ViewModels.AboutPage_Model>)instance;
            return that.IsUIBusy;
        }
        private void set_77_ViewModelBase_IsUIBusy(object instance, object Value)
        {
            var that = (global::MVVMSidekick.ViewModels.ViewModelBase<global::NavDemo.ViewModels.AboutPage_Model>)instance;
            that.IsUIBusy = (global::System.Boolean)Value;
        }
        private object get_78_ViewModelBase_Dispatcher(object instance)
        {
            var that = (global::MVVMSidekick.ViewModels.ViewModelBase<global::NavDemo.ViewModels.AboutPage_Model>)instance;
            return that.Dispatcher;
        }
        private object get_79_BindableBase_BindableInstanceId(object instance)
        {
            var that = (global::MVVMSidekick.ViewModels.BindableBase<global::NavDemo.ViewModels.AboutPage_Model>)instance;
            return that.BindableInstanceId;
        }
        private object get_80_BindableBase_Error(object instance)
        {
            var that = (global::MVVMSidekick.ViewModels.BindableBase<global::NavDemo.ViewModels.AboutPage_Model>)instance;
            return that.Error;
        }
        private object get_81_BindableBase_HasErrors(object instance)
        {
            var that = (global::MVVMSidekick.ViewModels.BindableBase<global::NavDemo.ViewModels.AboutPage_Model>)instance;
            return that.HasErrors;
        }
        private object get_82_BindableBase_LocalEventRouter(object instance)
        {
            var that = (global::MVVMSidekick.ViewModels.BindableBase<global::NavDemo.ViewModels.AboutPage_Model>)instance;
            return that.LocalEventRouter;
        }
        private void set_82_BindableBase_LocalEventRouter(object instance, object Value)
        {
            var that = (global::MVVMSidekick.ViewModels.BindableBase<global::NavDemo.ViewModels.AboutPage_Model>)instance;
            that.LocalEventRouter = (global::MVVMSidekick.EventRouting.EventRouter)Value;
        }
        private object get_83_RtfText_RichText(object instance)
        {
            return global::NavDemo.AttachProps.RtfText.GetRichText((global::Windows.UI.Xaml.DependencyObject)instance);
        }
        private void set_83_RtfText_RichText(object instance, object Value)
        {
            global::NavDemo.AttachProps.RtfText.SetRichText((global::Windows.UI.Xaml.DependencyObject)instance, (global::System.String)Value);
        }
        private object get_84_AboutPage_StrongTypeViewModel(object instance)
        {
            var that = (global::NavDemo.AboutPage)instance;
            return that.StrongTypeViewModel;
        }
        private void set_84_AboutPage_StrongTypeViewModel(object instance, object Value)
        {
            var that = (global::NavDemo.AboutPage)instance;
            that.StrongTypeViewModel = (global::NavDemo.ViewModels.AboutPage_Model)Value;
        }
        private object get_85_BlankPage1_Model_Title(object instance)
        {
            var that = (global::NavDemo.ViewModels.BlankPage1_Model)instance;
            return that.Title;
        }
        private void set_85_BlankPage1_Model_Title(object instance, object Value)
        {
            var that = (global::NavDemo.ViewModels.BlankPage1_Model)instance;
            that.Title = (global::System.String)Value;
        }
        private object get_86_ViewModelBase_UnbindDisposeGroup(object instance)
        {
            var that = (global::MVVMSidekick.ViewModels.ViewModelBase<global::NavDemo.ViewModels.BlankPage1_Model>)instance;
            return that.UnbindDisposeGroup;
        }
        private object get_87_ViewModelBase_UnloadDisposeGroup(object instance)
        {
            var that = (global::MVVMSidekick.ViewModels.ViewModelBase<global::NavDemo.ViewModels.BlankPage1_Model>)instance;
            return that.UnloadDisposeGroup;
        }
        private object get_88_ViewModelBase_IsDisposingWhenUnbindRequired(object instance)
        {
            var that = (global::MVVMSidekick.ViewModels.ViewModelBase<global::NavDemo.ViewModels.BlankPage1_Model>)instance;
            return that.IsDisposingWhenUnbindRequired;
        }
        private object get_89_ViewModelBase_IsDisposingWhenUnloadRequired(object instance)
        {
            var that = (global::MVVMSidekick.ViewModels.ViewModelBase<global::NavDemo.ViewModels.BlankPage1_Model>)instance;
            return that.IsDisposingWhenUnloadRequired;
        }
        private object get_90_ViewModelBase_StageManager(object instance)
        {
            var that = (global::MVVMSidekick.ViewModels.ViewModelBase<global::NavDemo.ViewModels.BlankPage1_Model>)instance;
            return that.StageManager;
        }
        private void set_90_ViewModelBase_StageManager(object instance, object Value)
        {
            var that = (global::MVVMSidekick.ViewModels.ViewModelBase<global::NavDemo.ViewModels.BlankPage1_Model>)instance;
            that.StageManager = (global::MVVMSidekick.Views.IStageManager)Value;
        }
        private object get_91_ViewModelBase_HaveReturnValue(object instance)
        {
            var that = (global::MVVMSidekick.ViewModels.ViewModelBase<global::NavDemo.ViewModels.BlankPage1_Model>)instance;
            return that.HaveReturnValue;
        }
        private object get_92_ViewModelBase_IsUIBusy(object instance)
        {
            var that = (global::MVVMSidekick.ViewModels.ViewModelBase<global::NavDemo.ViewModels.BlankPage1_Model>)instance;
            return that.IsUIBusy;
        }
        private void set_92_ViewModelBase_IsUIBusy(object instance, object Value)
        {
            var that = (global::MVVMSidekick.ViewModels.ViewModelBase<global::NavDemo.ViewModels.BlankPage1_Model>)instance;
            that.IsUIBusy = (global::System.Boolean)Value;
        }
        private object get_93_ViewModelBase_Dispatcher(object instance)
        {
            var that = (global::MVVMSidekick.ViewModels.ViewModelBase<global::NavDemo.ViewModels.BlankPage1_Model>)instance;
            return that.Dispatcher;
        }
        private object get_94_BindableBase_BindableInstanceId(object instance)
        {
            var that = (global::MVVMSidekick.ViewModels.BindableBase<global::NavDemo.ViewModels.BlankPage1_Model>)instance;
            return that.BindableInstanceId;
        }
        private object get_95_BindableBase_Error(object instance)
        {
            var that = (global::MVVMSidekick.ViewModels.BindableBase<global::NavDemo.ViewModels.BlankPage1_Model>)instance;
            return that.Error;
        }
        private object get_96_BindableBase_HasErrors(object instance)
        {
            var that = (global::MVVMSidekick.ViewModels.BindableBase<global::NavDemo.ViewModels.BlankPage1_Model>)instance;
            return that.HasErrors;
        }
        private object get_97_BindableBase_LocalEventRouter(object instance)
        {
            var that = (global::MVVMSidekick.ViewModels.BindableBase<global::NavDemo.ViewModels.BlankPage1_Model>)instance;
            return that.LocalEventRouter;
        }
        private void set_97_BindableBase_LocalEventRouter(object instance, object Value)
        {
            var that = (global::MVVMSidekick.ViewModels.BindableBase<global::NavDemo.ViewModels.BlankPage1_Model>)instance;
            that.LocalEventRouter = (global::MVVMSidekick.EventRouting.EventRouter)Value;
        }
        private object get_98_BlankPage1_StrongTypeViewModel(object instance)
        {
            var that = (global::NavDemo.BlankPage1)instance;
            return that.StrongTypeViewModel;
        }
        private void set_98_BlankPage1_StrongTypeViewModel(object instance, object Value)
        {
            var that = (global::NavDemo.BlankPage1)instance;
            that.StrongTypeViewModel = (global::NavDemo.ViewModels.BlankPage1_Model)Value;
        }
        private object get_99_HomePage_Model_Title(object instance)
        {
            var that = (global::NavDemo.ViewModels.HomePage_Model)instance;
            return that.Title;
        }
        private void set_99_HomePage_Model_Title(object instance, object Value)
        {
            var that = (global::NavDemo.ViewModels.HomePage_Model)instance;
            that.Title = (global::System.String)Value;
        }
        private object get_100_HomePage_Model_currentDialog(object instance)
        {
            var that = (global::NavDemo.ViewModels.HomePage_Model)instance;
            return that.currentDialog;
        }
        private void set_100_HomePage_Model_currentDialog(object instance, object Value)
        {
            var that = (global::NavDemo.ViewModels.HomePage_Model)instance;
            that.currentDialog = (global::NavDemo.Dialog)Value;
        }
        private object get_101_HomePage_Model_chosenFriend(object instance)
        {
            var that = (global::NavDemo.ViewModels.HomePage_Model)instance;
            return that.chosenFriend;
        }
        private void set_101_HomePage_Model_chosenFriend(object instance, object Value)
        {
            var that = (global::NavDemo.ViewModels.HomePage_Model)instance;
            that.chosenFriend = (global::NavDemo.Friend)Value;
        }
        private object get_102_HomePage_Model_friendItemList(object instance)
        {
            var that = (global::NavDemo.ViewModels.HomePage_Model)instance;
            return that.friendItemList;
        }
        private void set_102_HomePage_Model_friendItemList(object instance, object Value)
        {
            var that = (global::NavDemo.ViewModels.HomePage_Model)instance;
            that.friendItemList = (global::System.Collections.Generic.List<global::NavDemo.Friend>)Value;
        }
        private object get_103_HomePage_Model_suggest(object instance)
        {
            var that = (global::NavDemo.ViewModels.HomePage_Model)instance;
            return that.suggest;
        }
        private void set_103_HomePage_Model_suggest(object instance, object Value)
        {
            var that = (global::NavDemo.ViewModels.HomePage_Model)instance;
            that.suggest = (global::NavDemo.Services.SuggestService)Value;
        }
        private object get_104_HomePage_Model_fontFamily(object instance)
        {
            var that = (global::NavDemo.ViewModels.HomePage_Model)instance;
            return that.fontFamily;
        }
        private void set_104_HomePage_Model_fontFamily(object instance, object Value)
        {
            var that = (global::NavDemo.ViewModels.HomePage_Model)instance;
            that.fontFamily = (global::Windows.UI.Xaml.Media.FontFamily)Value;
        }
        private object get_105_HomePage_Model_suggestBoxText(object instance)
        {
            var that = (global::NavDemo.ViewModels.HomePage_Model)instance;
            return that.suggestBoxText;
        }
        private void set_105_HomePage_Model_suggestBoxText(object instance, object Value)
        {
            var that = (global::NavDemo.ViewModels.HomePage_Model)instance;
            that.suggestBoxText = (global::System.String)Value;
        }
        private object get_106_HomePage_Model_currentIndex(object instance)
        {
            var that = (global::NavDemo.ViewModels.HomePage_Model)instance;
            return that.currentIndex;
        }
        private void set_106_HomePage_Model_currentIndex(object instance, object Value)
        {
            var that = (global::NavDemo.ViewModels.HomePage_Model)instance;
            that.currentIndex = (global::System.Int32)Value;
        }
        private object get_107_HomePage_Model_richEditBoxContent(object instance)
        {
            var that = (global::NavDemo.ViewModels.HomePage_Model)instance;
            return that.richEditBoxContent;
        }
        private void set_107_HomePage_Model_richEditBoxContent(object instance, object Value)
        {
            var that = (global::NavDemo.ViewModels.HomePage_Model)instance;
            that.richEditBoxContent = (global::System.String)Value;
        }
        private object get_108_HomePage_Model_CommandChoseFriend(object instance)
        {
            var that = (global::NavDemo.ViewModels.HomePage_Model)instance;
            return that.CommandChoseFriend;
        }
        private void set_108_HomePage_Model_CommandChoseFriend(object instance, object Value)
        {
            var that = (global::NavDemo.ViewModels.HomePage_Model)instance;
            that.CommandChoseFriend = (global::MVVMSidekick.ViewModels.CommandModel<global::MVVMSidekick.Reactive.ReactiveCommand, global::System.String>)Value;
        }
        private object get_109_HomePage_Model_CommandInsertDialog(object instance)
        {
            var that = (global::NavDemo.ViewModels.HomePage_Model)instance;
            return that.CommandInsertDialog;
        }
        private void set_109_HomePage_Model_CommandInsertDialog(object instance, object Value)
        {
            var that = (global::NavDemo.ViewModels.HomePage_Model)instance;
            that.CommandInsertDialog = (global::MVVMSidekick.ViewModels.CommandModel<global::MVVMSidekick.Reactive.ReactiveCommand, global::System.String>)Value;
        }
        private object get_110_HomePage_Model_CommandChangeDate(object instance)
        {
            var that = (global::NavDemo.ViewModels.HomePage_Model)instance;
            return that.CommandChangeDate;
        }
        private void set_110_HomePage_Model_CommandChangeDate(object instance, object Value)
        {
            var that = (global::NavDemo.ViewModels.HomePage_Model)instance;
            that.CommandChangeDate = (global::MVVMSidekick.ViewModels.CommandModel<global::MVVMSidekick.Reactive.ReactiveCommand, global::System.String>)Value;
        }
        private object get_111_ViewModelBase_UnbindDisposeGroup(object instance)
        {
            var that = (global::MVVMSidekick.ViewModels.ViewModelBase<global::NavDemo.ViewModels.HomePage_Model>)instance;
            return that.UnbindDisposeGroup;
        }
        private object get_112_ViewModelBase_UnloadDisposeGroup(object instance)
        {
            var that = (global::MVVMSidekick.ViewModels.ViewModelBase<global::NavDemo.ViewModels.HomePage_Model>)instance;
            return that.UnloadDisposeGroup;
        }
        private object get_113_ViewModelBase_IsDisposingWhenUnbindRequired(object instance)
        {
            var that = (global::MVVMSidekick.ViewModels.ViewModelBase<global::NavDemo.ViewModels.HomePage_Model>)instance;
            return that.IsDisposingWhenUnbindRequired;
        }
        private object get_114_ViewModelBase_IsDisposingWhenUnloadRequired(object instance)
        {
            var that = (global::MVVMSidekick.ViewModels.ViewModelBase<global::NavDemo.ViewModels.HomePage_Model>)instance;
            return that.IsDisposingWhenUnloadRequired;
        }
        private object get_115_ViewModelBase_StageManager(object instance)
        {
            var that = (global::MVVMSidekick.ViewModels.ViewModelBase<global::NavDemo.ViewModels.HomePage_Model>)instance;
            return that.StageManager;
        }
        private void set_115_ViewModelBase_StageManager(object instance, object Value)
        {
            var that = (global::MVVMSidekick.ViewModels.ViewModelBase<global::NavDemo.ViewModels.HomePage_Model>)instance;
            that.StageManager = (global::MVVMSidekick.Views.IStageManager)Value;
        }
        private object get_116_ViewModelBase_HaveReturnValue(object instance)
        {
            var that = (global::MVVMSidekick.ViewModels.ViewModelBase<global::NavDemo.ViewModels.HomePage_Model>)instance;
            return that.HaveReturnValue;
        }
        private object get_117_ViewModelBase_IsUIBusy(object instance)
        {
            var that = (global::MVVMSidekick.ViewModels.ViewModelBase<global::NavDemo.ViewModels.HomePage_Model>)instance;
            return that.IsUIBusy;
        }
        private void set_117_ViewModelBase_IsUIBusy(object instance, object Value)
        {
            var that = (global::MVVMSidekick.ViewModels.ViewModelBase<global::NavDemo.ViewModels.HomePage_Model>)instance;
            that.IsUIBusy = (global::System.Boolean)Value;
        }
        private object get_118_ViewModelBase_Dispatcher(object instance)
        {
            var that = (global::MVVMSidekick.ViewModels.ViewModelBase<global::NavDemo.ViewModels.HomePage_Model>)instance;
            return that.Dispatcher;
        }
        private object get_119_BindableBase_BindableInstanceId(object instance)
        {
            var that = (global::MVVMSidekick.ViewModels.BindableBase<global::NavDemo.ViewModels.HomePage_Model>)instance;
            return that.BindableInstanceId;
        }
        private object get_120_BindableBase_Error(object instance)
        {
            var that = (global::MVVMSidekick.ViewModels.BindableBase<global::NavDemo.ViewModels.HomePage_Model>)instance;
            return that.Error;
        }
        private object get_121_BindableBase_HasErrors(object instance)
        {
            var that = (global::MVVMSidekick.ViewModels.BindableBase<global::NavDemo.ViewModels.HomePage_Model>)instance;
            return that.HasErrors;
        }
        private object get_122_BindableBase_LocalEventRouter(object instance)
        {
            var that = (global::MVVMSidekick.ViewModels.BindableBase<global::NavDemo.ViewModels.HomePage_Model>)instance;
            return that.LocalEventRouter;
        }
        private void set_122_BindableBase_LocalEventRouter(object instance, object Value)
        {
            var that = (global::MVVMSidekick.ViewModels.BindableBase<global::NavDemo.ViewModels.HomePage_Model>)instance;
            that.LocalEventRouter = (global::MVVMSidekick.EventRouting.EventRouter)Value;
        }
        private object get_123_Interaction_Behaviors(object instance)
        {
            return global::Microsoft.Xaml.Interactivity.Interaction.GetBehaviors((global::Windows.UI.Xaml.DependencyObject)instance);
        }
        private void set_123_Interaction_Behaviors(object instance, object Value)
        {
            global::Microsoft.Xaml.Interactivity.Interaction.SetBehaviors((global::Windows.UI.Xaml.DependencyObject)instance, (global::Microsoft.Xaml.Interactivity.BehaviorCollection)Value);
        }
        private object get_124_EventTriggerBehavior_Actions(object instance)
        {
            var that = (global::Microsoft.Xaml.Interactions.Core.EventTriggerBehavior)instance;
            return that.Actions;
        }
        private object get_125_EventTriggerBehavior_EventName(object instance)
        {
            var that = (global::Microsoft.Xaml.Interactions.Core.EventTriggerBehavior)instance;
            return that.EventName;
        }
        private void set_125_EventTriggerBehavior_EventName(object instance, object Value)
        {
            var that = (global::Microsoft.Xaml.Interactions.Core.EventTriggerBehavior)instance;
            that.EventName = (global::System.String)Value;
        }
        private object get_126_EventTriggerBehavior_SourceObject(object instance)
        {
            var that = (global::Microsoft.Xaml.Interactions.Core.EventTriggerBehavior)instance;
            return that.SourceObject;
        }
        private void set_126_EventTriggerBehavior_SourceObject(object instance, object Value)
        {
            var that = (global::Microsoft.Xaml.Interactions.Core.EventTriggerBehavior)instance;
            that.SourceObject = (global::System.Object)Value;
        }
        private object get_127_EventTriggerBehavior_AssociatedObject(object instance)
        {
            var that = (global::Microsoft.Xaml.Interactions.Core.EventTriggerBehavior)instance;
            return that.AssociatedObject;
        }
        private object get_128_InvokeCommandAction_Command(object instance)
        {
            var that = (global::Microsoft.Xaml.Interactions.Core.InvokeCommandAction)instance;
            return that.Command;
        }
        private void set_128_InvokeCommandAction_Command(object instance, object Value)
        {
            var that = (global::Microsoft.Xaml.Interactions.Core.InvokeCommandAction)instance;
            that.Command = (global::System.Windows.Input.ICommand)Value;
        }
        private object get_129_InvokeCommandAction_CommandParameter(object instance)
        {
            var that = (global::Microsoft.Xaml.Interactions.Core.InvokeCommandAction)instance;
            return that.CommandParameter;
        }
        private void set_129_InvokeCommandAction_CommandParameter(object instance, object Value)
        {
            var that = (global::Microsoft.Xaml.Interactions.Core.InvokeCommandAction)instance;
            that.CommandParameter = (global::System.Object)Value;
        }
        private object get_130_InvokeCommandAction_InputConverter(object instance)
        {
            var that = (global::Microsoft.Xaml.Interactions.Core.InvokeCommandAction)instance;
            return that.InputConverter;
        }
        private void set_130_InvokeCommandAction_InputConverter(object instance, object Value)
        {
            var that = (global::Microsoft.Xaml.Interactions.Core.InvokeCommandAction)instance;
            that.InputConverter = (global::Windows.UI.Xaml.Data.IValueConverter)Value;
        }
        private object get_131_InvokeCommandAction_InputConverterParameter(object instance)
        {
            var that = (global::Microsoft.Xaml.Interactions.Core.InvokeCommandAction)instance;
            return that.InputConverterParameter;
        }
        private void set_131_InvokeCommandAction_InputConverterParameter(object instance, object Value)
        {
            var that = (global::Microsoft.Xaml.Interactions.Core.InvokeCommandAction)instance;
            that.InputConverterParameter = (global::System.Object)Value;
        }
        private object get_132_InvokeCommandAction_InputConverterLanguage(object instance)
        {
            var that = (global::Microsoft.Xaml.Interactions.Core.InvokeCommandAction)instance;
            return that.InputConverterLanguage;
        }
        private void set_132_InvokeCommandAction_InputConverterLanguage(object instance, object Value)
        {
            var that = (global::Microsoft.Xaml.Interactions.Core.InvokeCommandAction)instance;
            that.InputConverterLanguage = (global::System.String)Value;
        }
        private object get_133_SendToEventRouterAction_EventData(object instance)
        {
            var that = (global::MVVMSidekick.Behaviors.SendToEventRouterAction)instance;
            return that.EventData;
        }
        private void set_133_SendToEventRouterAction_EventData(object instance, object Value)
        {
            var that = (global::MVVMSidekick.Behaviors.SendToEventRouterAction)instance;
            that.EventData = (global::System.Object)Value;
        }
        private object get_134_SendToEventRouterAction_IsEventFiringToAllBaseClassesChannels(object instance)
        {
            var that = (global::MVVMSidekick.Behaviors.SendToEventRouterAction)instance;
            return that.IsEventFiringToAllBaseClassesChannels;
        }
        private void set_134_SendToEventRouterAction_IsEventFiringToAllBaseClassesChannels(object instance, object Value)
        {
            var that = (global::MVVMSidekick.Behaviors.SendToEventRouterAction)instance;
            that.IsEventFiringToAllBaseClassesChannels = (global::System.Boolean)Value;
        }
        private object get_135_SendToEventRouterAction_EventRoutingName(object instance)
        {
            var that = (global::MVVMSidekick.Behaviors.SendToEventRouterAction)instance;
            return that.EventRoutingName;
        }
        private void set_135_SendToEventRouterAction_EventRoutingName(object instance, object Value)
        {
            var that = (global::MVVMSidekick.Behaviors.SendToEventRouterAction)instance;
            that.EventRoutingName = (global::System.String)Value;
        }
        private object get_136_SendToEventRouterAction_EventRouter(object instance)
        {
            var that = (global::MVVMSidekick.Behaviors.SendToEventRouterAction)instance;
            return that.EventRouter;
        }
        private void set_136_SendToEventRouterAction_EventRouter(object instance, object Value)
        {
            var that = (global::MVVMSidekick.Behaviors.SendToEventRouterAction)instance;
            that.EventRouter = (global::MVVMSidekick.EventRouting.EventRouter)Value;
        }
        private object get_137_SendToEventRouterAction_EventDataType(object instance)
        {
            var that = (global::MVVMSidekick.Behaviors.SendToEventRouterAction)instance;
            return that.EventDataType;
        }
        private void set_137_SendToEventRouterAction_EventDataType(object instance, object Value)
        {
            var that = (global::MVVMSidekick.Behaviors.SendToEventRouterAction)instance;
            that.EventDataType = (global::System.Type)Value;
        }
        private object get_138_SendToEventRouterAction_IsEventFiringToAllImplementedInterfacesChannels(object instance)
        {
            var that = (global::MVVMSidekick.Behaviors.SendToEventRouterAction)instance;
            return that.IsEventFiringToAllImplementedInterfacesChannels;
        }
        private void set_138_SendToEventRouterAction_IsEventFiringToAllImplementedInterfacesChannels(object instance, object Value)
        {
            var that = (global::MVVMSidekick.Behaviors.SendToEventRouterAction)instance;
            that.IsEventFiringToAllImplementedInterfacesChannels = (global::System.Boolean)Value;
        }
        private object get_139_HomePage_StrongTypeViewModel(object instance)
        {
            var that = (global::NavDemo.HomePage)instance;
            return that.StrongTypeViewModel;
        }
        private void set_139_HomePage_StrongTypeViewModel(object instance, object Value)
        {
            var that = (global::NavDemo.HomePage)instance;
            that.StrongTypeViewModel = (global::NavDemo.ViewModels.HomePage_Model)Value;
        }
        private object get_140_MainPage_Model_Title(object instance)
        {
            var that = (global::NavDemo.ViewModels.MainPage_Model)instance;
            return that.Title;
        }
        private void set_140_MainPage_Model_Title(object instance, object Value)
        {
            var that = (global::NavDemo.ViewModels.MainPage_Model)instance;
            that.Title = (global::System.String)Value;
        }
        private object get_141_MainPage_Model_NavMenuItemList(object instance)
        {
            var that = (global::NavDemo.ViewModels.MainPage_Model)instance;
            return that.NavMenuItemList;
        }
        private void set_141_MainPage_Model_NavMenuItemList(object instance, object Value)
        {
            var that = (global::NavDemo.ViewModels.MainPage_Model)instance;
            that.NavMenuItemList = (global::System.Collections.ObjectModel.ObservableCollection<global::NavDemo.Models.NavMenuItem>)Value;
        }
        private object get_142_NavMenuItem_Glyph(object instance)
        {
            var that = (global::NavDemo.Models.NavMenuItem)instance;
            return that.Glyph;
        }
        private void set_142_NavMenuItem_Glyph(object instance, object Value)
        {
            var that = (global::NavDemo.Models.NavMenuItem)instance;
            that.Glyph = (global::System.String)Value;
        }
        private object get_143_NavMenuItem_Label(object instance)
        {
            var that = (global::NavDemo.Models.NavMenuItem)instance;
            return that.Label;
        }
        private void set_143_NavMenuItem_Label(object instance, object Value)
        {
            var that = (global::NavDemo.Models.NavMenuItem)instance;
            that.Label = (global::System.String)Value;
        }
        private object get_144_BindableBase_BindableInstanceId(object instance)
        {
            var that = (global::MVVMSidekick.ViewModels.BindableBase<global::NavDemo.Models.NavMenuItem>)instance;
            return that.BindableInstanceId;
        }
        private object get_145_BindableBase_Error(object instance)
        {
            var that = (global::MVVMSidekick.ViewModels.BindableBase<global::NavDemo.Models.NavMenuItem>)instance;
            return that.Error;
        }
        private object get_146_BindableBase_HasErrors(object instance)
        {
            var that = (global::MVVMSidekick.ViewModels.BindableBase<global::NavDemo.Models.NavMenuItem>)instance;
            return that.HasErrors;
        }
        private object get_147_BindableBase_LocalEventRouter(object instance)
        {
            var that = (global::MVVMSidekick.ViewModels.BindableBase<global::NavDemo.Models.NavMenuItem>)instance;
            return that.LocalEventRouter;
        }
        private void set_147_BindableBase_LocalEventRouter(object instance, object Value)
        {
            var that = (global::MVVMSidekick.ViewModels.BindableBase<global::NavDemo.Models.NavMenuItem>)instance;
            that.LocalEventRouter = (global::MVVMSidekick.EventRouting.EventRouter)Value;
        }
        private object get_148_MainPage_Model_IsPaneOpen(object instance)
        {
            var that = (global::NavDemo.ViewModels.MainPage_Model)instance;
            return that.IsPaneOpen;
        }
        private void set_148_MainPage_Model_IsPaneOpen(object instance, object Value)
        {
            var that = (global::NavDemo.ViewModels.MainPage_Model)instance;
            that.IsPaneOpen = (global::System.Boolean)Value;
        }
        private object get_149_MainPage_Model_listViewBackGround(object instance)
        {
            var that = (global::NavDemo.ViewModels.MainPage_Model)instance;
            return that.listViewBackGround;
        }
        private void set_149_MainPage_Model_listViewBackGround(object instance, object Value)
        {
            var that = (global::NavDemo.ViewModels.MainPage_Model)instance;
            that.listViewBackGround = (global::System.String)Value;
        }
        private object get_150_ViewModelBase_UnbindDisposeGroup(object instance)
        {
            var that = (global::MVVMSidekick.ViewModels.ViewModelBase<global::NavDemo.ViewModels.MainPage_Model>)instance;
            return that.UnbindDisposeGroup;
        }
        private object get_151_ViewModelBase_UnloadDisposeGroup(object instance)
        {
            var that = (global::MVVMSidekick.ViewModels.ViewModelBase<global::NavDemo.ViewModels.MainPage_Model>)instance;
            return that.UnloadDisposeGroup;
        }
        private object get_152_ViewModelBase_IsDisposingWhenUnbindRequired(object instance)
        {
            var that = (global::MVVMSidekick.ViewModels.ViewModelBase<global::NavDemo.ViewModels.MainPage_Model>)instance;
            return that.IsDisposingWhenUnbindRequired;
        }
        private object get_153_ViewModelBase_IsDisposingWhenUnloadRequired(object instance)
        {
            var that = (global::MVVMSidekick.ViewModels.ViewModelBase<global::NavDemo.ViewModels.MainPage_Model>)instance;
            return that.IsDisposingWhenUnloadRequired;
        }
        private object get_154_ViewModelBase_StageManager(object instance)
        {
            var that = (global::MVVMSidekick.ViewModels.ViewModelBase<global::NavDemo.ViewModels.MainPage_Model>)instance;
            return that.StageManager;
        }
        private void set_154_ViewModelBase_StageManager(object instance, object Value)
        {
            var that = (global::MVVMSidekick.ViewModels.ViewModelBase<global::NavDemo.ViewModels.MainPage_Model>)instance;
            that.StageManager = (global::MVVMSidekick.Views.IStageManager)Value;
        }
        private object get_155_ViewModelBase_HaveReturnValue(object instance)
        {
            var that = (global::MVVMSidekick.ViewModels.ViewModelBase<global::NavDemo.ViewModels.MainPage_Model>)instance;
            return that.HaveReturnValue;
        }
        private object get_156_ViewModelBase_IsUIBusy(object instance)
        {
            var that = (global::MVVMSidekick.ViewModels.ViewModelBase<global::NavDemo.ViewModels.MainPage_Model>)instance;
            return that.IsUIBusy;
        }
        private void set_156_ViewModelBase_IsUIBusy(object instance, object Value)
        {
            var that = (global::MVVMSidekick.ViewModels.ViewModelBase<global::NavDemo.ViewModels.MainPage_Model>)instance;
            that.IsUIBusy = (global::System.Boolean)Value;
        }
        private object get_157_ViewModelBase_Dispatcher(object instance)
        {
            var that = (global::MVVMSidekick.ViewModels.ViewModelBase<global::NavDemo.ViewModels.MainPage_Model>)instance;
            return that.Dispatcher;
        }
        private object get_158_BindableBase_BindableInstanceId(object instance)
        {
            var that = (global::MVVMSidekick.ViewModels.BindableBase<global::NavDemo.ViewModels.MainPage_Model>)instance;
            return that.BindableInstanceId;
        }
        private object get_159_BindableBase_Error(object instance)
        {
            var that = (global::MVVMSidekick.ViewModels.BindableBase<global::NavDemo.ViewModels.MainPage_Model>)instance;
            return that.Error;
        }
        private object get_160_BindableBase_HasErrors(object instance)
        {
            var that = (global::MVVMSidekick.ViewModels.BindableBase<global::NavDemo.ViewModels.MainPage_Model>)instance;
            return that.HasErrors;
        }
        private object get_161_BindableBase_LocalEventRouter(object instance)
        {
            var that = (global::MVVMSidekick.ViewModels.BindableBase<global::NavDemo.ViewModels.MainPage_Model>)instance;
            return that.LocalEventRouter;
        }
        private void set_161_BindableBase_LocalEventRouter(object instance, object Value)
        {
            var that = (global::MVVMSidekick.ViewModels.BindableBase<global::NavDemo.ViewModels.MainPage_Model>)instance;
            that.LocalEventRouter = (global::MVVMSidekick.EventRouting.EventRouter)Value;
        }
        private object get_162_StageManager_CurrentBindingView(object instance)
        {
            var that = (global::MVVMSidekick.Views.StageManager)instance;
            return that.CurrentBindingView;
        }
        private object get_163_StageManager_DefaultStage(object instance)
        {
            var that = (global::MVVMSidekick.Views.StageManager)instance;
            return that.DefaultStage;
        }
        private void set_163_StageManager_DefaultStage(object instance, object Value)
        {
            var that = (global::MVVMSidekick.Views.StageManager)instance;
            that.DefaultStage = (global::MVVMSidekick.Views.IStage)Value;
        }
        private object get_164_StageManager_Beacon(object instance)
        {
            return global::MVVMSidekick.Views.StageManager.GetBeacon((global::Windows.UI.Xaml.DependencyObject)instance);
        }
        private void set_164_StageManager_Beacon(object instance, object Value)
        {
            global::MVVMSidekick.Views.StageManager.SetBeacon((global::Windows.UI.Xaml.DependencyObject)instance, (global::System.String)Value);
        }
        private object get_165_MainPage_StrongTypeViewModel(object instance)
        {
            var that = (global::NavDemo.MainPage)instance;
            return that.StrongTypeViewModel;
        }
        private void set_165_MainPage_StrongTypeViewModel(object instance, object Value)
        {
            var that = (global::NavDemo.MainPage)instance;
            that.StrongTypeViewModel = (global::NavDemo.ViewModels.MainPage_Model)Value;
        }
        private object get_166_SearchPage_Model_Title(object instance)
        {
            var that = (global::NavDemo.ViewModels.SearchPage_Model)instance;
            return that.Title;
        }
        private void set_166_SearchPage_Model_Title(object instance, object Value)
        {
            var that = (global::NavDemo.ViewModels.SearchPage_Model)instance;
            that.Title = (global::System.String)Value;
        }
        private object get_167_SearchPage_Model_dateText(object instance)
        {
            var that = (global::NavDemo.ViewModels.SearchPage_Model)instance;
            return that.dateText;
        }
        private void set_167_SearchPage_Model_dateText(object instance, object Value)
        {
            var that = (global::NavDemo.ViewModels.SearchPage_Model)instance;
            that.dateText = (global::System.String)Value;
        }
        private object get_168_SearchPage_Model_listDialog(object instance)
        {
            var that = (global::NavDemo.ViewModels.SearchPage_Model)instance;
            return that.listDialog;
        }
        private void set_168_SearchPage_Model_listDialog(object instance, object Value)
        {
            var that = (global::NavDemo.ViewModels.SearchPage_Model)instance;
            that.listDialog = (global::System.Collections.Generic.List<global::NavDemo.Dialog>)Value;
        }
        private object get_169_SearchPage_Model_chosenDialog(object instance)
        {
            var that = (global::NavDemo.ViewModels.SearchPage_Model)instance;
            return that.chosenDialog;
        }
        private void set_169_SearchPage_Model_chosenDialog(object instance, object Value)
        {
            var that = (global::NavDemo.ViewModels.SearchPage_Model)instance;
            that.chosenDialog = (global::NavDemo.Dialog)Value;
        }
        private object get_170_SearchPage_Model_suggest(object instance)
        {
            var that = (global::NavDemo.ViewModels.SearchPage_Model)instance;
            return that.suggest;
        }
        private void set_170_SearchPage_Model_suggest(object instance, object Value)
        {
            var that = (global::NavDemo.ViewModels.SearchPage_Model)instance;
            that.suggest = (global::NavDemo.Services.SuggestService)Value;
        }
        private object get_171_SearchPage_Model_chosenFriend(object instance)
        {
            var that = (global::NavDemo.ViewModels.SearchPage_Model)instance;
            return that.chosenFriend;
        }
        private void set_171_SearchPage_Model_chosenFriend(object instance, object Value)
        {
            var that = (global::NavDemo.ViewModels.SearchPage_Model)instance;
            that.chosenFriend = (global::NavDemo.Friend)Value;
        }
        private object get_172_SearchPage_Model_friendItemList(object instance)
        {
            var that = (global::NavDemo.ViewModels.SearchPage_Model)instance;
            return that.friendItemList;
        }
        private void set_172_SearchPage_Model_friendItemList(object instance, object Value)
        {
            var that = (global::NavDemo.ViewModels.SearchPage_Model)instance;
            that.friendItemList = (global::System.Collections.Generic.List<global::NavDemo.Friend>)Value;
        }
        private object get_173_SearchPage_Model_suggestBoxText(object instance)
        {
            var that = (global::NavDemo.ViewModels.SearchPage_Model)instance;
            return that.suggestBoxText;
        }
        private void set_173_SearchPage_Model_suggestBoxText(object instance, object Value)
        {
            var that = (global::NavDemo.ViewModels.SearchPage_Model)instance;
            that.suggestBoxText = (global::System.String)Value;
        }
        private object get_174_SearchPage_Model_CommandAddFriend(object instance)
        {
            var that = (global::NavDemo.ViewModels.SearchPage_Model)instance;
            return that.CommandAddFriend;
        }
        private void set_174_SearchPage_Model_CommandAddFriend(object instance, object Value)
        {
            var that = (global::NavDemo.ViewModels.SearchPage_Model)instance;
            that.CommandAddFriend = (global::MVVMSidekick.ViewModels.CommandModel<global::MVVMSidekick.Reactive.ReactiveCommand, global::System.String>)Value;
        }
        private object get_175_SearchPage_Model_CommandGetFriends(object instance)
        {
            var that = (global::NavDemo.ViewModels.SearchPage_Model)instance;
            return that.CommandGetFriends;
        }
        private void set_175_SearchPage_Model_CommandGetFriends(object instance, object Value)
        {
            var that = (global::NavDemo.ViewModels.SearchPage_Model)instance;
            that.CommandGetFriends = (global::MVVMSidekick.ViewModels.CommandModel<global::MVVMSidekick.Reactive.ReactiveCommand, global::System.String>)Value;
        }
        private object get_176_SearchPage_Model_CommandTableInit(object instance)
        {
            var that = (global::NavDemo.ViewModels.SearchPage_Model)instance;
            return that.CommandTableInit;
        }
        private void set_176_SearchPage_Model_CommandTableInit(object instance, object Value)
        {
            var that = (global::NavDemo.ViewModels.SearchPage_Model)instance;
            that.CommandTableInit = (global::MVVMSidekick.ViewModels.CommandModel<global::MVVMSidekick.Reactive.ReactiveCommand, global::System.String>)Value;
        }
        private object get_177_SearchPage_Model_CommandSubmitFriend(object instance)
        {
            var that = (global::NavDemo.ViewModels.SearchPage_Model)instance;
            return that.CommandSubmitFriend;
        }
        private void set_177_SearchPage_Model_CommandSubmitFriend(object instance, object Value)
        {
            var that = (global::NavDemo.ViewModels.SearchPage_Model)instance;
            that.CommandSubmitFriend = (global::MVVMSidekick.ViewModels.CommandModel<global::MVVMSidekick.Reactive.ReactiveCommand, global::System.String>)Value;
        }
        private object get_178_SearchPage_Model_CommandSubmitDate(object instance)
        {
            var that = (global::NavDemo.ViewModels.SearchPage_Model)instance;
            return that.CommandSubmitDate;
        }
        private void set_178_SearchPage_Model_CommandSubmitDate(object instance, object Value)
        {
            var that = (global::NavDemo.ViewModels.SearchPage_Model)instance;
            that.CommandSubmitDate = (global::MVVMSidekick.ViewModels.CommandModel<global::MVVMSidekick.Reactive.ReactiveCommand, global::System.String>)Value;
        }
        private object get_179_SearchPage_Model_CommandChoseFriend(object instance)
        {
            var that = (global::NavDemo.ViewModels.SearchPage_Model)instance;
            return that.CommandChoseFriend;
        }
        private void set_179_SearchPage_Model_CommandChoseFriend(object instance, object Value)
        {
            var that = (global::NavDemo.ViewModels.SearchPage_Model)instance;
            that.CommandChoseFriend = (global::MVVMSidekick.ViewModels.CommandModel<global::MVVMSidekick.Reactive.ReactiveCommand, global::System.String>)Value;
        }
        private object get_180_SearchPage_Model_CommandChangeDate(object instance)
        {
            var that = (global::NavDemo.ViewModels.SearchPage_Model)instance;
            return that.CommandChangeDate;
        }
        private void set_180_SearchPage_Model_CommandChangeDate(object instance, object Value)
        {
            var that = (global::NavDemo.ViewModels.SearchPage_Model)instance;
            that.CommandChangeDate = (global::MVVMSidekick.ViewModels.CommandModel<global::MVVMSidekick.Reactive.ReactiveCommand, global::System.String>)Value;
        }
        private object get_181_ViewModelBase_UnbindDisposeGroup(object instance)
        {
            var that = (global::MVVMSidekick.ViewModels.ViewModelBase<global::NavDemo.ViewModels.SearchPage_Model>)instance;
            return that.UnbindDisposeGroup;
        }
        private object get_182_ViewModelBase_UnloadDisposeGroup(object instance)
        {
            var that = (global::MVVMSidekick.ViewModels.ViewModelBase<global::NavDemo.ViewModels.SearchPage_Model>)instance;
            return that.UnloadDisposeGroup;
        }
        private object get_183_ViewModelBase_IsDisposingWhenUnbindRequired(object instance)
        {
            var that = (global::MVVMSidekick.ViewModels.ViewModelBase<global::NavDemo.ViewModels.SearchPage_Model>)instance;
            return that.IsDisposingWhenUnbindRequired;
        }
        private object get_184_ViewModelBase_IsDisposingWhenUnloadRequired(object instance)
        {
            var that = (global::MVVMSidekick.ViewModels.ViewModelBase<global::NavDemo.ViewModels.SearchPage_Model>)instance;
            return that.IsDisposingWhenUnloadRequired;
        }
        private object get_185_ViewModelBase_StageManager(object instance)
        {
            var that = (global::MVVMSidekick.ViewModels.ViewModelBase<global::NavDemo.ViewModels.SearchPage_Model>)instance;
            return that.StageManager;
        }
        private void set_185_ViewModelBase_StageManager(object instance, object Value)
        {
            var that = (global::MVVMSidekick.ViewModels.ViewModelBase<global::NavDemo.ViewModels.SearchPage_Model>)instance;
            that.StageManager = (global::MVVMSidekick.Views.IStageManager)Value;
        }
        private object get_186_ViewModelBase_HaveReturnValue(object instance)
        {
            var that = (global::MVVMSidekick.ViewModels.ViewModelBase<global::NavDemo.ViewModels.SearchPage_Model>)instance;
            return that.HaveReturnValue;
        }
        private object get_187_ViewModelBase_IsUIBusy(object instance)
        {
            var that = (global::MVVMSidekick.ViewModels.ViewModelBase<global::NavDemo.ViewModels.SearchPage_Model>)instance;
            return that.IsUIBusy;
        }
        private void set_187_ViewModelBase_IsUIBusy(object instance, object Value)
        {
            var that = (global::MVVMSidekick.ViewModels.ViewModelBase<global::NavDemo.ViewModels.SearchPage_Model>)instance;
            that.IsUIBusy = (global::System.Boolean)Value;
        }
        private object get_188_ViewModelBase_Dispatcher(object instance)
        {
            var that = (global::MVVMSidekick.ViewModels.ViewModelBase<global::NavDemo.ViewModels.SearchPage_Model>)instance;
            return that.Dispatcher;
        }
        private object get_189_BindableBase_BindableInstanceId(object instance)
        {
            var that = (global::MVVMSidekick.ViewModels.BindableBase<global::NavDemo.ViewModels.SearchPage_Model>)instance;
            return that.BindableInstanceId;
        }
        private object get_190_BindableBase_Error(object instance)
        {
            var that = (global::MVVMSidekick.ViewModels.BindableBase<global::NavDemo.ViewModels.SearchPage_Model>)instance;
            return that.Error;
        }
        private object get_191_BindableBase_HasErrors(object instance)
        {
            var that = (global::MVVMSidekick.ViewModels.BindableBase<global::NavDemo.ViewModels.SearchPage_Model>)instance;
            return that.HasErrors;
        }
        private object get_192_BindableBase_LocalEventRouter(object instance)
        {
            var that = (global::MVVMSidekick.ViewModels.BindableBase<global::NavDemo.ViewModels.SearchPage_Model>)instance;
            return that.LocalEventRouter;
        }
        private void set_192_BindableBase_LocalEventRouter(object instance, object Value)
        {
            var that = (global::MVVMSidekick.ViewModels.BindableBase<global::NavDemo.ViewModels.SearchPage_Model>)instance;
            that.LocalEventRouter = (global::MVVMSidekick.EventRouting.EventRouter)Value;
        }
        private object get_193_ListViewBehavior_AssociatedObject(object instance)
        {
            var that = (global::NavDemo.Behaviours.ListViewBehavior)instance;
            return that.AssociatedObject;
        }
        private void set_193_ListViewBehavior_AssociatedObject(object instance, object Value)
        {
            var that = (global::NavDemo.Behaviours.ListViewBehavior)instance;
            that.AssociatedObject = (global::Windows.UI.Xaml.DependencyObject)Value;
        }
        private object get_194_SearchPage_StrongTypeViewModel(object instance)
        {
            var that = (global::NavDemo.SearchPage)instance;
            return that.StrongTypeViewModel;
        }
        private void set_194_SearchPage_StrongTypeViewModel(object instance, object Value)
        {
            var that = (global::NavDemo.SearchPage)instance;
            that.StrongTypeViewModel = (global::NavDemo.ViewModels.SearchPage_Model)Value;
        }

        private global::Windows.UI.Xaml.Markup.IXamlMember CreateXamlMember(string longMemberName)
        {
            global::NavDemo.NavDemo_XamlTypeInfo.XamlMember xamlMember = null;
            global::NavDemo.NavDemo_XamlTypeInfo.XamlUserType userType;

            switch (longMemberName)
            {
            case "MVVMSidekick.Views.MVVMPage.ContentObject":
                userType = (global::NavDemo.NavDemo_XamlTypeInfo.XamlUserType)GetXamlTypeByName("MVVMSidekick.Views.MVVMPage");
                xamlMember = new global::NavDemo.NavDemo_XamlTypeInfo.XamlMember(this, "ContentObject", "Object");
                xamlMember.Getter = get_0_MVVMPage_ContentObject;
                xamlMember.Setter = set_0_MVVMPage_ContentObject;
                break;
            case "MVVMSidekick.Views.MVVMPage.ViewModel":
                userType = (global::NavDemo.NavDemo_XamlTypeInfo.XamlUserType)GetXamlTypeByName("MVVMSidekick.Views.MVVMPage");
                xamlMember = new global::NavDemo.NavDemo_XamlTypeInfo.XamlMember(this, "ViewModel", "MVVMSidekick.ViewModels.IViewModel");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_1_MVVMPage_ViewModel;
                xamlMember.Setter = set_1_MVVMPage_ViewModel;
                break;
            case "MVVMSidekick.Views.MVVMPage.ViewType":
                userType = (global::NavDemo.NavDemo_XamlTypeInfo.XamlUserType)GetXamlTypeByName("MVVMSidekick.Views.MVVMPage");
                xamlMember = new global::NavDemo.NavDemo_XamlTypeInfo.XamlMember(this, "ViewType", "MVVMSidekick.Views.ViewType");
                xamlMember.Getter = get_2_MVVMPage_ViewType;
                xamlMember.SetIsReadOnly();
                break;
            case "NavDemo.ViewModels.ShowFriendPage_Model.Title":
                userType = (global::NavDemo.NavDemo_XamlTypeInfo.XamlUserType)GetXamlTypeByName("NavDemo.ViewModels.ShowFriendPage_Model");
                xamlMember = new global::NavDemo.NavDemo_XamlTypeInfo.XamlMember(this, "Title", "String");
                xamlMember.Getter = get_3_ShowFriendPage_Model_Title;
                xamlMember.Setter = set_3_ShowFriendPage_Model_Title;
                break;
            case "NavDemo.ViewModels.ShowFriendPage_Model.currentFriend":
                userType = (global::NavDemo.NavDemo_XamlTypeInfo.XamlUserType)GetXamlTypeByName("NavDemo.ViewModels.ShowFriendPage_Model");
                xamlMember = new global::NavDemo.NavDemo_XamlTypeInfo.XamlMember(this, "currentFriend", "NavDemo.Friend");
                xamlMember.Getter = get_4_ShowFriendPage_Model_currentFriend;
                xamlMember.Setter = set_4_ShowFriendPage_Model_currentFriend;
                break;
            case "NavDemo.ViewModels.ShowFriendPage_Model.listFriend":
                userType = (global::NavDemo.NavDemo_XamlTypeInfo.XamlUserType)GetXamlTypeByName("NavDemo.ViewModels.ShowFriendPage_Model");
                xamlMember = new global::NavDemo.NavDemo_XamlTypeInfo.XamlMember(this, "listFriend", "System.Collections.Generic.List`1<NavDemo.Friend>");
                xamlMember.Getter = get_5_ShowFriendPage_Model_listFriend;
                xamlMember.Setter = set_5_ShowFriendPage_Model_listFriend;
                break;
            case "NavDemo.Friend.idFriend":
                userType = (global::NavDemo.NavDemo_XamlTypeInfo.XamlUserType)GetXamlTypeByName("NavDemo.Friend");
                xamlMember = new global::NavDemo.NavDemo_XamlTypeInfo.XamlMember(this, "idFriend", "Int32");
                xamlMember.Getter = get_6_Friend_idFriend;
                xamlMember.Setter = set_6_Friend_idFriend;
                break;
            case "NavDemo.Friend.nameFriend":
                userType = (global::NavDemo.NavDemo_XamlTypeInfo.XamlUserType)GetXamlTypeByName("NavDemo.Friend");
                xamlMember = new global::NavDemo.NavDemo_XamlTypeInfo.XamlMember(this, "nameFriend", "String");
                xamlMember.Getter = get_7_Friend_nameFriend;
                xamlMember.Setter = set_7_Friend_nameFriend;
                break;
            case "NavDemo.Friend.iconFriend":
                userType = (global::NavDemo.NavDemo_XamlTypeInfo.XamlUserType)GetXamlTypeByName("NavDemo.Friend");
                xamlMember = new global::NavDemo.NavDemo_XamlTypeInfo.XamlMember(this, "iconFriend", "String");
                xamlMember.Getter = get_8_Friend_iconFriend;
                xamlMember.Setter = set_8_Friend_iconFriend;
                break;
            case "NavDemo.Friend.nickNameFriend":
                userType = (global::NavDemo.NavDemo_XamlTypeInfo.XamlUserType)GetXamlTypeByName("NavDemo.Friend");
                xamlMember = new global::NavDemo.NavDemo_XamlTypeInfo.XamlMember(this, "nickNameFriend", "String");
                xamlMember.Getter = get_9_Friend_nickNameFriend;
                xamlMember.Setter = set_9_Friend_nickNameFriend;
                break;
            case "NavDemo.ViewModels.ShowFriendPage_Model.indexFriend":
                userType = (global::NavDemo.NavDemo_XamlTypeInfo.XamlUserType)GetXamlTypeByName("NavDemo.ViewModels.ShowFriendPage_Model");
                xamlMember = new global::NavDemo.NavDemo_XamlTypeInfo.XamlMember(this, "indexFriend", "Int32");
                xamlMember.Getter = get_10_ShowFriendPage_Model_indexFriend;
                xamlMember.Setter = set_10_ShowFriendPage_Model_indexFriend;
                break;
            case "NavDemo.ViewModels.ShowFriendPage_Model.CommandToLastFriend":
                userType = (global::NavDemo.NavDemo_XamlTypeInfo.XamlUserType)GetXamlTypeByName("NavDemo.ViewModels.ShowFriendPage_Model");
                xamlMember = new global::NavDemo.NavDemo_XamlTypeInfo.XamlMember(this, "CommandToLastFriend", "MVVMSidekick.ViewModels.CommandModel`2<MVVMSidekick.Reactive.ReactiveCommand, String>");
                xamlMember.Getter = get_11_ShowFriendPage_Model_CommandToLastFriend;
                xamlMember.Setter = set_11_ShowFriendPage_Model_CommandToLastFriend;
                break;
            case "NavDemo.ViewModels.ShowFriendPage_Model.CommandToNextFriend":
                userType = (global::NavDemo.NavDemo_XamlTypeInfo.XamlUserType)GetXamlTypeByName("NavDemo.ViewModels.ShowFriendPage_Model");
                xamlMember = new global::NavDemo.NavDemo_XamlTypeInfo.XamlMember(this, "CommandToNextFriend", "MVVMSidekick.ViewModels.CommandModel`2<MVVMSidekick.Reactive.ReactiveCommand, String>");
                xamlMember.Getter = get_12_ShowFriendPage_Model_CommandToNextFriend;
                xamlMember.Setter = set_12_ShowFriendPage_Model_CommandToNextFriend;
                break;
            case "NavDemo.ViewModels.ShowFriendPage_Model.CommandDeleteFriend":
                userType = (global::NavDemo.NavDemo_XamlTypeInfo.XamlUserType)GetXamlTypeByName("NavDemo.ViewModels.ShowFriendPage_Model");
                xamlMember = new global::NavDemo.NavDemo_XamlTypeInfo.XamlMember(this, "CommandDeleteFriend", "MVVMSidekick.ViewModels.CommandModel`2<MVVMSidekick.Reactive.ReactiveCommand, String>");
                xamlMember.Getter = get_13_ShowFriendPage_Model_CommandDeleteFriend;
                xamlMember.Setter = set_13_ShowFriendPage_Model_CommandDeleteFriend;
                break;
            case "NavDemo.ViewModels.ShowFriendPage_Model.CommandInsertFriend":
                userType = (global::NavDemo.NavDemo_XamlTypeInfo.XamlUserType)GetXamlTypeByName("NavDemo.ViewModels.ShowFriendPage_Model");
                xamlMember = new global::NavDemo.NavDemo_XamlTypeInfo.XamlMember(this, "CommandInsertFriend", "MVVMSidekick.ViewModels.CommandModel`2<MVVMSidekick.Reactive.ReactiveCommand, String>");
                xamlMember.Getter = get_14_ShowFriendPage_Model_CommandInsertFriend;
                xamlMember.Setter = set_14_ShowFriendPage_Model_CommandInsertFriend;
                break;
            case "NavDemo.ViewModels.ShowFriendPage_Model.CommandTest":
                userType = (global::NavDemo.NavDemo_XamlTypeInfo.XamlUserType)GetXamlTypeByName("NavDemo.ViewModels.ShowFriendPage_Model");
                xamlMember = new global::NavDemo.NavDemo_XamlTypeInfo.XamlMember(this, "CommandTest", "MVVMSidekick.ViewModels.CommandModel`2<MVVMSidekick.Reactive.ReactiveCommand, String>");
                xamlMember.Getter = get_15_ShowFriendPage_Model_CommandTest;
                xamlMember.Setter = set_15_ShowFriendPage_Model_CommandTest;
                break;
            case "MVVMSidekick.ViewModels.ViewModelBase`1<NavDemo.ViewModels.ShowFriendPage_Model>.UnbindDisposeGroup":
                userType = (global::NavDemo.NavDemo_XamlTypeInfo.XamlUserType)GetXamlTypeByName("MVVMSidekick.ViewModels.ViewModelBase`1<NavDemo.ViewModels.ShowFriendPage_Model>");
                xamlMember = new global::NavDemo.NavDemo_XamlTypeInfo.XamlMember(this, "UnbindDisposeGroup", "MVVMSidekick.Common.IDisposeGroup");
                xamlMember.Getter = get_16_ViewModelBase_UnbindDisposeGroup;
                xamlMember.SetIsReadOnly();
                break;
            case "MVVMSidekick.ViewModels.ViewModelBase`1<NavDemo.ViewModels.ShowFriendPage_Model>.UnloadDisposeGroup":
                userType = (global::NavDemo.NavDemo_XamlTypeInfo.XamlUserType)GetXamlTypeByName("MVVMSidekick.ViewModels.ViewModelBase`1<NavDemo.ViewModels.ShowFriendPage_Model>");
                xamlMember = new global::NavDemo.NavDemo_XamlTypeInfo.XamlMember(this, "UnloadDisposeGroup", "MVVMSidekick.Common.IDisposeGroup");
                xamlMember.Getter = get_17_ViewModelBase_UnloadDisposeGroup;
                xamlMember.SetIsReadOnly();
                break;
            case "MVVMSidekick.ViewModels.ViewModelBase`1<NavDemo.ViewModels.ShowFriendPage_Model>.IsDisposingWhenUnbindRequired":
                userType = (global::NavDemo.NavDemo_XamlTypeInfo.XamlUserType)GetXamlTypeByName("MVVMSidekick.ViewModels.ViewModelBase`1<NavDemo.ViewModels.ShowFriendPage_Model>");
                xamlMember = new global::NavDemo.NavDemo_XamlTypeInfo.XamlMember(this, "IsDisposingWhenUnbindRequired", "Boolean");
                xamlMember.Getter = get_18_ViewModelBase_IsDisposingWhenUnbindRequired;
                xamlMember.SetIsReadOnly();
                break;
            case "MVVMSidekick.ViewModels.ViewModelBase`1<NavDemo.ViewModels.ShowFriendPage_Model>.IsDisposingWhenUnloadRequired":
                userType = (global::NavDemo.NavDemo_XamlTypeInfo.XamlUserType)GetXamlTypeByName("MVVMSidekick.ViewModels.ViewModelBase`1<NavDemo.ViewModels.ShowFriendPage_Model>");
                xamlMember = new global::NavDemo.NavDemo_XamlTypeInfo.XamlMember(this, "IsDisposingWhenUnloadRequired", "Boolean");
                xamlMember.Getter = get_19_ViewModelBase_IsDisposingWhenUnloadRequired;
                xamlMember.SetIsReadOnly();
                break;
            case "MVVMSidekick.ViewModels.ViewModelBase`1<NavDemo.ViewModels.ShowFriendPage_Model>.StageManager":
                userType = (global::NavDemo.NavDemo_XamlTypeInfo.XamlUserType)GetXamlTypeByName("MVVMSidekick.ViewModels.ViewModelBase`1<NavDemo.ViewModels.ShowFriendPage_Model>");
                xamlMember = new global::NavDemo.NavDemo_XamlTypeInfo.XamlMember(this, "StageManager", "MVVMSidekick.Views.IStageManager");
                xamlMember.Getter = get_20_ViewModelBase_StageManager;
                xamlMember.Setter = set_20_ViewModelBase_StageManager;
                break;
            case "MVVMSidekick.ViewModels.ViewModelBase`1<NavDemo.ViewModels.ShowFriendPage_Model>.HaveReturnValue":
                userType = (global::NavDemo.NavDemo_XamlTypeInfo.XamlUserType)GetXamlTypeByName("MVVMSidekick.ViewModels.ViewModelBase`1<NavDemo.ViewModels.ShowFriendPage_Model>");
                xamlMember = new global::NavDemo.NavDemo_XamlTypeInfo.XamlMember(this, "HaveReturnValue", "Boolean");
                xamlMember.Getter = get_21_ViewModelBase_HaveReturnValue;
                xamlMember.SetIsReadOnly();
                break;
            case "MVVMSidekick.ViewModels.ViewModelBase`1<NavDemo.ViewModels.ShowFriendPage_Model>.IsUIBusy":
                userType = (global::NavDemo.NavDemo_XamlTypeInfo.XamlUserType)GetXamlTypeByName("MVVMSidekick.ViewModels.ViewModelBase`1<NavDemo.ViewModels.ShowFriendPage_Model>");
                xamlMember = new global::NavDemo.NavDemo_XamlTypeInfo.XamlMember(this, "IsUIBusy", "Boolean");
                xamlMember.Getter = get_22_ViewModelBase_IsUIBusy;
                xamlMember.Setter = set_22_ViewModelBase_IsUIBusy;
                break;
            case "MVVMSidekick.ViewModels.ViewModelBase`1<NavDemo.ViewModels.ShowFriendPage_Model>.Dispatcher":
                userType = (global::NavDemo.NavDemo_XamlTypeInfo.XamlUserType)GetXamlTypeByName("MVVMSidekick.ViewModels.ViewModelBase`1<NavDemo.ViewModels.ShowFriendPage_Model>");
                xamlMember = new global::NavDemo.NavDemo_XamlTypeInfo.XamlMember(this, "Dispatcher", "Windows.UI.Core.CoreDispatcher");
                xamlMember.Getter = get_23_ViewModelBase_Dispatcher;
                xamlMember.SetIsReadOnly();
                break;
            case "MVVMSidekick.ViewModels.BindableBase`1<NavDemo.ViewModels.ShowFriendPage_Model>.BindableInstanceId":
                userType = (global::NavDemo.NavDemo_XamlTypeInfo.XamlUserType)GetXamlTypeByName("MVVMSidekick.ViewModels.BindableBase`1<NavDemo.ViewModels.ShowFriendPage_Model>");
                xamlMember = new global::NavDemo.NavDemo_XamlTypeInfo.XamlMember(this, "BindableInstanceId", "String");
                xamlMember.Getter = get_24_BindableBase_BindableInstanceId;
                xamlMember.SetIsReadOnly();
                break;
            case "MVVMSidekick.ViewModels.BindableBase`1<NavDemo.ViewModels.ShowFriendPage_Model>.Error":
                userType = (global::NavDemo.NavDemo_XamlTypeInfo.XamlUserType)GetXamlTypeByName("MVVMSidekick.ViewModels.BindableBase`1<NavDemo.ViewModels.ShowFriendPage_Model>");
                xamlMember = new global::NavDemo.NavDemo_XamlTypeInfo.XamlMember(this, "Error", "String");
                xamlMember.Getter = get_25_BindableBase_Error;
                xamlMember.SetIsReadOnly();
                break;
            case "MVVMSidekick.ViewModels.BindableBase`1<NavDemo.ViewModels.ShowFriendPage_Model>.HasErrors":
                userType = (global::NavDemo.NavDemo_XamlTypeInfo.XamlUserType)GetXamlTypeByName("MVVMSidekick.ViewModels.BindableBase`1<NavDemo.ViewModels.ShowFriendPage_Model>");
                xamlMember = new global::NavDemo.NavDemo_XamlTypeInfo.XamlMember(this, "HasErrors", "Boolean");
                xamlMember.Getter = get_26_BindableBase_HasErrors;
                xamlMember.SetIsReadOnly();
                break;
            case "MVVMSidekick.ViewModels.BindableBase`1<NavDemo.ViewModels.ShowFriendPage_Model>.LocalEventRouter":
                userType = (global::NavDemo.NavDemo_XamlTypeInfo.XamlUserType)GetXamlTypeByName("MVVMSidekick.ViewModels.BindableBase`1<NavDemo.ViewModels.ShowFriendPage_Model>");
                xamlMember = new global::NavDemo.NavDemo_XamlTypeInfo.XamlMember(this, "LocalEventRouter", "MVVMSidekick.EventRouting.EventRouter");
                xamlMember.Getter = get_27_BindableBase_LocalEventRouter;
                xamlMember.Setter = set_27_BindableBase_LocalEventRouter;
                break;
            case "MVVMSidekick.ViewModels.BindableBase.IsValidationActivated":
                userType = (global::NavDemo.NavDemo_XamlTypeInfo.XamlUserType)GetXamlTypeByName("MVVMSidekick.ViewModels.BindableBase");
                xamlMember = new global::NavDemo.NavDemo_XamlTypeInfo.XamlMember(this, "IsValidationActivated", "Boolean");
                xamlMember.Getter = get_28_BindableBase_IsValidationActivated;
                xamlMember.Setter = set_28_BindableBase_IsValidationActivated;
                break;
            case "MVVMSidekick.ViewModels.BindableBase.IsNotificationActivated":
                userType = (global::NavDemo.NavDemo_XamlTypeInfo.XamlUserType)GetXamlTypeByName("MVVMSidekick.ViewModels.BindableBase");
                xamlMember = new global::NavDemo.NavDemo_XamlTypeInfo.XamlMember(this, "IsNotificationActivated", "Boolean");
                xamlMember.Getter = get_29_BindableBase_IsNotificationActivated;
                xamlMember.Setter = set_29_BindableBase_IsNotificationActivated;
                break;
            case "MVVMSidekick.ViewModels.DisposeGroupBase.DisposeInfoList":
                userType = (global::NavDemo.NavDemo_XamlTypeInfo.XamlUserType)GetXamlTypeByName("MVVMSidekick.ViewModels.DisposeGroupBase");
                xamlMember = new global::NavDemo.NavDemo_XamlTypeInfo.XamlMember(this, "DisposeInfoList", "System.Collections.Generic.IList`1<MVVMSidekick.Common.DisposeEntry>");
                xamlMember.Getter = get_30_DisposeGroupBase_DisposeInfoList;
                xamlMember.SetIsReadOnly();
                break;
            case "MVVMSidekick.Common.DisposeEntry.CallingCodeContext":
                userType = (global::NavDemo.NavDemo_XamlTypeInfo.XamlUserType)GetXamlTypeByName("MVVMSidekick.Common.DisposeEntry");
                xamlMember = new global::NavDemo.NavDemo_XamlTypeInfo.XamlMember(this, "CallingCodeContext", "MVVMSidekick.Common.CallingCodeContext");
                xamlMember.Getter = get_31_DisposeEntry_CallingCodeContext;
                xamlMember.Setter = set_31_DisposeEntry_CallingCodeContext;
                break;
            case "MVVMSidekick.Common.DisposeEntry.IsNeedCheckOnFinalizer":
                userType = (global::NavDemo.NavDemo_XamlTypeInfo.XamlUserType)GetXamlTypeByName("MVVMSidekick.Common.DisposeEntry");
                xamlMember = new global::NavDemo.NavDemo_XamlTypeInfo.XamlMember(this, "IsNeedCheckOnFinalizer", "Boolean");
                xamlMember.Getter = get_32_DisposeEntry_IsNeedCheckOnFinalizer;
                xamlMember.Setter = set_32_DisposeEntry_IsNeedCheckOnFinalizer;
                break;
            case "MVVMSidekick.Common.DisposeEntry.Exception":
                userType = (global::NavDemo.NavDemo_XamlTypeInfo.XamlUserType)GetXamlTypeByName("MVVMSidekick.Common.DisposeEntry");
                xamlMember = new global::NavDemo.NavDemo_XamlTypeInfo.XamlMember(this, "Exception", "System.Exception");
                xamlMember.Getter = get_33_DisposeEntry_Exception;
                xamlMember.Setter = set_33_DisposeEntry_Exception;
                break;
            case "MVVMSidekick.Common.DisposeEntry.Action":
                userType = (global::NavDemo.NavDemo_XamlTypeInfo.XamlUserType)GetXamlTypeByName("MVVMSidekick.Common.DisposeEntry");
                xamlMember = new global::NavDemo.NavDemo_XamlTypeInfo.XamlMember(this, "Action", "System.Action");
                xamlMember.Getter = get_34_DisposeEntry_Action;
                xamlMember.Setter = set_34_DisposeEntry_Action;
                break;
            case "NavDemo.ShowFriendPage.StrongTypeViewModel":
                userType = (global::NavDemo.NavDemo_XamlTypeInfo.XamlUserType)GetXamlTypeByName("NavDemo.ShowFriendPage");
                xamlMember = new global::NavDemo.NavDemo_XamlTypeInfo.XamlMember(this, "StrongTypeViewModel", "NavDemo.ViewModels.ShowFriendPage_Model");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_35_ShowFriendPage_StrongTypeViewModel;
                xamlMember.Setter = set_35_ShowFriendPage_StrongTypeViewModel;
                break;
            case "NavDemo.ViewModels.AddFriendPage_Model.Title":
                userType = (global::NavDemo.NavDemo_XamlTypeInfo.XamlUserType)GetXamlTypeByName("NavDemo.ViewModels.AddFriendPage_Model");
                xamlMember = new global::NavDemo.NavDemo_XamlTypeInfo.XamlMember(this, "Title", "String");
                xamlMember.Getter = get_36_AddFriendPage_Model_Title;
                xamlMember.Setter = set_36_AddFriendPage_Model_Title;
                break;
            case "NavDemo.ViewModels.AddFriendPage_Model.friend":
                userType = (global::NavDemo.NavDemo_XamlTypeInfo.XamlUserType)GetXamlTypeByName("NavDemo.ViewModels.AddFriendPage_Model");
                xamlMember = new global::NavDemo.NavDemo_XamlTypeInfo.XamlMember(this, "friend", "NavDemo.Friend");
                xamlMember.Getter = get_37_AddFriendPage_Model_friend;
                xamlMember.Setter = set_37_AddFriendPage_Model_friend;
                break;
            case "NavDemo.ViewModels.AddFriendPage_Model.CommandInsertFriend":
                userType = (global::NavDemo.NavDemo_XamlTypeInfo.XamlUserType)GetXamlTypeByName("NavDemo.ViewModels.AddFriendPage_Model");
                xamlMember = new global::NavDemo.NavDemo_XamlTypeInfo.XamlMember(this, "CommandInsertFriend", "MVVMSidekick.ViewModels.CommandModel`2<MVVMSidekick.Reactive.ReactiveCommand, String>");
                xamlMember.Getter = get_38_AddFriendPage_Model_CommandInsertFriend;
                xamlMember.Setter = set_38_AddFriendPage_Model_CommandInsertFriend;
                break;
            case "MVVMSidekick.ViewModels.ViewModelBase`1<NavDemo.ViewModels.AddFriendPage_Model>.UnbindDisposeGroup":
                userType = (global::NavDemo.NavDemo_XamlTypeInfo.XamlUserType)GetXamlTypeByName("MVVMSidekick.ViewModels.ViewModelBase`1<NavDemo.ViewModels.AddFriendPage_Model>");
                xamlMember = new global::NavDemo.NavDemo_XamlTypeInfo.XamlMember(this, "UnbindDisposeGroup", "MVVMSidekick.Common.IDisposeGroup");
                xamlMember.Getter = get_39_ViewModelBase_UnbindDisposeGroup;
                xamlMember.SetIsReadOnly();
                break;
            case "MVVMSidekick.ViewModels.ViewModelBase`1<NavDemo.ViewModels.AddFriendPage_Model>.UnloadDisposeGroup":
                userType = (global::NavDemo.NavDemo_XamlTypeInfo.XamlUserType)GetXamlTypeByName("MVVMSidekick.ViewModels.ViewModelBase`1<NavDemo.ViewModels.AddFriendPage_Model>");
                xamlMember = new global::NavDemo.NavDemo_XamlTypeInfo.XamlMember(this, "UnloadDisposeGroup", "MVVMSidekick.Common.IDisposeGroup");
                xamlMember.Getter = get_40_ViewModelBase_UnloadDisposeGroup;
                xamlMember.SetIsReadOnly();
                break;
            case "MVVMSidekick.ViewModels.ViewModelBase`1<NavDemo.ViewModels.AddFriendPage_Model>.IsDisposingWhenUnbindRequired":
                userType = (global::NavDemo.NavDemo_XamlTypeInfo.XamlUserType)GetXamlTypeByName("MVVMSidekick.ViewModels.ViewModelBase`1<NavDemo.ViewModels.AddFriendPage_Model>");
                xamlMember = new global::NavDemo.NavDemo_XamlTypeInfo.XamlMember(this, "IsDisposingWhenUnbindRequired", "Boolean");
                xamlMember.Getter = get_41_ViewModelBase_IsDisposingWhenUnbindRequired;
                xamlMember.SetIsReadOnly();
                break;
            case "MVVMSidekick.ViewModels.ViewModelBase`1<NavDemo.ViewModels.AddFriendPage_Model>.IsDisposingWhenUnloadRequired":
                userType = (global::NavDemo.NavDemo_XamlTypeInfo.XamlUserType)GetXamlTypeByName("MVVMSidekick.ViewModels.ViewModelBase`1<NavDemo.ViewModels.AddFriendPage_Model>");
                xamlMember = new global::NavDemo.NavDemo_XamlTypeInfo.XamlMember(this, "IsDisposingWhenUnloadRequired", "Boolean");
                xamlMember.Getter = get_42_ViewModelBase_IsDisposingWhenUnloadRequired;
                xamlMember.SetIsReadOnly();
                break;
            case "MVVMSidekick.ViewModels.ViewModelBase`1<NavDemo.ViewModels.AddFriendPage_Model>.StageManager":
                userType = (global::NavDemo.NavDemo_XamlTypeInfo.XamlUserType)GetXamlTypeByName("MVVMSidekick.ViewModels.ViewModelBase`1<NavDemo.ViewModels.AddFriendPage_Model>");
                xamlMember = new global::NavDemo.NavDemo_XamlTypeInfo.XamlMember(this, "StageManager", "MVVMSidekick.Views.IStageManager");
                xamlMember.Getter = get_43_ViewModelBase_StageManager;
                xamlMember.Setter = set_43_ViewModelBase_StageManager;
                break;
            case "MVVMSidekick.ViewModels.ViewModelBase`1<NavDemo.ViewModels.AddFriendPage_Model>.HaveReturnValue":
                userType = (global::NavDemo.NavDemo_XamlTypeInfo.XamlUserType)GetXamlTypeByName("MVVMSidekick.ViewModels.ViewModelBase`1<NavDemo.ViewModels.AddFriendPage_Model>");
                xamlMember = new global::NavDemo.NavDemo_XamlTypeInfo.XamlMember(this, "HaveReturnValue", "Boolean");
                xamlMember.Getter = get_44_ViewModelBase_HaveReturnValue;
                xamlMember.SetIsReadOnly();
                break;
            case "MVVMSidekick.ViewModels.ViewModelBase`1<NavDemo.ViewModels.AddFriendPage_Model>.IsUIBusy":
                userType = (global::NavDemo.NavDemo_XamlTypeInfo.XamlUserType)GetXamlTypeByName("MVVMSidekick.ViewModels.ViewModelBase`1<NavDemo.ViewModels.AddFriendPage_Model>");
                xamlMember = new global::NavDemo.NavDemo_XamlTypeInfo.XamlMember(this, "IsUIBusy", "Boolean");
                xamlMember.Getter = get_45_ViewModelBase_IsUIBusy;
                xamlMember.Setter = set_45_ViewModelBase_IsUIBusy;
                break;
            case "MVVMSidekick.ViewModels.ViewModelBase`1<NavDemo.ViewModels.AddFriendPage_Model>.Dispatcher":
                userType = (global::NavDemo.NavDemo_XamlTypeInfo.XamlUserType)GetXamlTypeByName("MVVMSidekick.ViewModels.ViewModelBase`1<NavDemo.ViewModels.AddFriendPage_Model>");
                xamlMember = new global::NavDemo.NavDemo_XamlTypeInfo.XamlMember(this, "Dispatcher", "Windows.UI.Core.CoreDispatcher");
                xamlMember.Getter = get_46_ViewModelBase_Dispatcher;
                xamlMember.SetIsReadOnly();
                break;
            case "MVVMSidekick.ViewModels.BindableBase`1<NavDemo.ViewModels.AddFriendPage_Model>.BindableInstanceId":
                userType = (global::NavDemo.NavDemo_XamlTypeInfo.XamlUserType)GetXamlTypeByName("MVVMSidekick.ViewModels.BindableBase`1<NavDemo.ViewModels.AddFriendPage_Model>");
                xamlMember = new global::NavDemo.NavDemo_XamlTypeInfo.XamlMember(this, "BindableInstanceId", "String");
                xamlMember.Getter = get_47_BindableBase_BindableInstanceId;
                xamlMember.SetIsReadOnly();
                break;
            case "MVVMSidekick.ViewModels.BindableBase`1<NavDemo.ViewModels.AddFriendPage_Model>.Error":
                userType = (global::NavDemo.NavDemo_XamlTypeInfo.XamlUserType)GetXamlTypeByName("MVVMSidekick.ViewModels.BindableBase`1<NavDemo.ViewModels.AddFriendPage_Model>");
                xamlMember = new global::NavDemo.NavDemo_XamlTypeInfo.XamlMember(this, "Error", "String");
                xamlMember.Getter = get_48_BindableBase_Error;
                xamlMember.SetIsReadOnly();
                break;
            case "MVVMSidekick.ViewModels.BindableBase`1<NavDemo.ViewModels.AddFriendPage_Model>.HasErrors":
                userType = (global::NavDemo.NavDemo_XamlTypeInfo.XamlUserType)GetXamlTypeByName("MVVMSidekick.ViewModels.BindableBase`1<NavDemo.ViewModels.AddFriendPage_Model>");
                xamlMember = new global::NavDemo.NavDemo_XamlTypeInfo.XamlMember(this, "HasErrors", "Boolean");
                xamlMember.Getter = get_49_BindableBase_HasErrors;
                xamlMember.SetIsReadOnly();
                break;
            case "MVVMSidekick.ViewModels.BindableBase`1<NavDemo.ViewModels.AddFriendPage_Model>.LocalEventRouter":
                userType = (global::NavDemo.NavDemo_XamlTypeInfo.XamlUserType)GetXamlTypeByName("MVVMSidekick.ViewModels.BindableBase`1<NavDemo.ViewModels.AddFriendPage_Model>");
                xamlMember = new global::NavDemo.NavDemo_XamlTypeInfo.XamlMember(this, "LocalEventRouter", "MVVMSidekick.EventRouting.EventRouter");
                xamlMember.Getter = get_50_BindableBase_LocalEventRouter;
                xamlMember.Setter = set_50_BindableBase_LocalEventRouter;
                break;
            case "NavDemo.AddFriendPage.StrongTypeViewModel":
                userType = (global::NavDemo.NavDemo_XamlTypeInfo.XamlUserType)GetXamlTypeByName("NavDemo.AddFriendPage");
                xamlMember = new global::NavDemo.NavDemo_XamlTypeInfo.XamlMember(this, "StrongTypeViewModel", "NavDemo.ViewModels.AddFriendPage_Model");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_51_AddFriendPage_StrongTypeViewModel;
                xamlMember.Setter = set_51_AddFriendPage_StrongTypeViewModel;
                break;
            case "NavDemo.ViewModels.AboutPage_Model.Title":
                userType = (global::NavDemo.NavDemo_XamlTypeInfo.XamlUserType)GetXamlTypeByName("NavDemo.ViewModels.AboutPage_Model");
                xamlMember = new global::NavDemo.NavDemo_XamlTypeInfo.XamlMember(this, "Title", "String");
                xamlMember.Getter = get_52_AboutPage_Model_Title;
                xamlMember.Setter = set_52_AboutPage_Model_Title;
                break;
            case "NavDemo.ViewModels.AboutPage_Model.currentDialog":
                userType = (global::NavDemo.NavDemo_XamlTypeInfo.XamlUserType)GetXamlTypeByName("NavDemo.ViewModels.AboutPage_Model");
                xamlMember = new global::NavDemo.NavDemo_XamlTypeInfo.XamlMember(this, "currentDialog", "NavDemo.Dialog");
                xamlMember.Getter = get_53_AboutPage_Model_currentDialog;
                xamlMember.Setter = set_53_AboutPage_Model_currentDialog;
                break;
            case "NavDemo.ViewModels.AboutPage_Model.listDialog":
                userType = (global::NavDemo.NavDemo_XamlTypeInfo.XamlUserType)GetXamlTypeByName("NavDemo.ViewModels.AboutPage_Model");
                xamlMember = new global::NavDemo.NavDemo_XamlTypeInfo.XamlMember(this, "listDialog", "System.Collections.Generic.List`1<NavDemo.Dialog>");
                xamlMember.Getter = get_54_AboutPage_Model_listDialog;
                xamlMember.Setter = set_54_AboutPage_Model_listDialog;
                break;
            case "NavDemo.Dialog.idDialog":
                userType = (global::NavDemo.NavDemo_XamlTypeInfo.XamlUserType)GetXamlTypeByName("NavDemo.Dialog");
                xamlMember = new global::NavDemo.NavDemo_XamlTypeInfo.XamlMember(this, "idDialog", "Int32");
                xamlMember.Getter = get_55_Dialog_idDialog;
                xamlMember.Setter = set_55_Dialog_idDialog;
                break;
            case "NavDemo.Dialog.idFriend":
                userType = (global::NavDemo.NavDemo_XamlTypeInfo.XamlUserType)GetXamlTypeByName("NavDemo.Dialog");
                xamlMember = new global::NavDemo.NavDemo_XamlTypeInfo.XamlMember(this, "idFriend", "Int32");
                xamlMember.Getter = get_56_Dialog_idFriend;
                xamlMember.Setter = set_56_Dialog_idFriend;
                break;
            case "NavDemo.Dialog.nameFriend":
                userType = (global::NavDemo.NavDemo_XamlTypeInfo.XamlUserType)GetXamlTypeByName("NavDemo.Dialog");
                xamlMember = new global::NavDemo.NavDemo_XamlTypeInfo.XamlMember(this, "nameFriend", "String");
                xamlMember.Getter = get_57_Dialog_nameFriend;
                xamlMember.Setter = set_57_Dialog_nameFriend;
                break;
            case "NavDemo.Dialog.nickNameFriend":
                userType = (global::NavDemo.NavDemo_XamlTypeInfo.XamlUserType)GetXamlTypeByName("NavDemo.Dialog");
                xamlMember = new global::NavDemo.NavDemo_XamlTypeInfo.XamlMember(this, "nickNameFriend", "String");
                xamlMember.Getter = get_58_Dialog_nickNameFriend;
                xamlMember.Setter = set_58_Dialog_nickNameFriend;
                break;
            case "NavDemo.Dialog.imageDialog":
                userType = (global::NavDemo.NavDemo_XamlTypeInfo.XamlUserType)GetXamlTypeByName("NavDemo.Dialog");
                xamlMember = new global::NavDemo.NavDemo_XamlTypeInfo.XamlMember(this, "imageDialog", "String");
                xamlMember.Getter = get_59_Dialog_imageDialog;
                xamlMember.Setter = set_59_Dialog_imageDialog;
                break;
            case "NavDemo.Dialog.describeDialog":
                userType = (global::NavDemo.NavDemo_XamlTypeInfo.XamlUserType)GetXamlTypeByName("NavDemo.Dialog");
                xamlMember = new global::NavDemo.NavDemo_XamlTypeInfo.XamlMember(this, "describeDialog", "String");
                xamlMember.Getter = get_60_Dialog_describeDialog;
                xamlMember.Setter = set_60_Dialog_describeDialog;
                break;
            case "NavDemo.Dialog.textDialog":
                userType = (global::NavDemo.NavDemo_XamlTypeInfo.XamlUserType)GetXamlTypeByName("NavDemo.Dialog");
                xamlMember = new global::NavDemo.NavDemo_XamlTypeInfo.XamlMember(this, "textDialog", "String");
                xamlMember.Getter = get_61_Dialog_textDialog;
                xamlMember.Setter = set_61_Dialog_textDialog;
                break;
            case "NavDemo.Dialog.timeDialog":
                userType = (global::NavDemo.NavDemo_XamlTypeInfo.XamlUserType)GetXamlTypeByName("NavDemo.Dialog");
                xamlMember = new global::NavDemo.NavDemo_XamlTypeInfo.XamlMember(this, "timeDialog", "String");
                xamlMember.Getter = get_62_Dialog_timeDialog;
                xamlMember.Setter = set_62_Dialog_timeDialog;
                break;
            case "NavDemo.Dialog.flagTime":
                userType = (global::NavDemo.NavDemo_XamlTypeInfo.XamlUserType)GetXamlTypeByName("NavDemo.Dialog");
                xamlMember = new global::NavDemo.NavDemo_XamlTypeInfo.XamlMember(this, "flagTime", "Int32");
                xamlMember.Getter = get_63_Dialog_flagTime;
                xamlMember.Setter = set_63_Dialog_flagTime;
                break;
            case "NavDemo.ViewModels.AboutPage_Model.indexDialog":
                userType = (global::NavDemo.NavDemo_XamlTypeInfo.XamlUserType)GetXamlTypeByName("NavDemo.ViewModels.AboutPage_Model");
                xamlMember = new global::NavDemo.NavDemo_XamlTypeInfo.XamlMember(this, "indexDialog", "Int32");
                xamlMember.Getter = get_64_AboutPage_Model_indexDialog;
                xamlMember.Setter = set_64_AboutPage_Model_indexDialog;
                break;
            case "NavDemo.ViewModels.AboutPage_Model.richEditBoxContent":
                userType = (global::NavDemo.NavDemo_XamlTypeInfo.XamlUserType)GetXamlTypeByName("NavDemo.ViewModels.AboutPage_Model");
                xamlMember = new global::NavDemo.NavDemo_XamlTypeInfo.XamlMember(this, "richEditBoxContent", "String");
                xamlMember.Getter = get_65_AboutPage_Model_richEditBoxContent;
                xamlMember.Setter = set_65_AboutPage_Model_richEditBoxContent;
                break;
            case "NavDemo.ViewModels.AboutPage_Model.CommandToLastPage":
                userType = (global::NavDemo.NavDemo_XamlTypeInfo.XamlUserType)GetXamlTypeByName("NavDemo.ViewModels.AboutPage_Model");
                xamlMember = new global::NavDemo.NavDemo_XamlTypeInfo.XamlMember(this, "CommandToLastPage", "MVVMSidekick.ViewModels.CommandModel`2<MVVMSidekick.Reactive.ReactiveCommand, String>");
                xamlMember.Getter = get_66_AboutPage_Model_CommandToLastPage;
                xamlMember.Setter = set_66_AboutPage_Model_CommandToLastPage;
                break;
            case "NavDemo.ViewModels.AboutPage_Model.CommandToNextPage":
                userType = (global::NavDemo.NavDemo_XamlTypeInfo.XamlUserType)GetXamlTypeByName("NavDemo.ViewModels.AboutPage_Model");
                xamlMember = new global::NavDemo.NavDemo_XamlTypeInfo.XamlMember(this, "CommandToNextPage", "MVVMSidekick.ViewModels.CommandModel`2<MVVMSidekick.Reactive.ReactiveCommand, String>");
                xamlMember.Getter = get_67_AboutPage_Model_CommandToNextPage;
                xamlMember.Setter = set_67_AboutPage_Model_CommandToNextPage;
                break;
            case "NavDemo.ViewModels.AboutPage_Model.CommandGetDialog":
                userType = (global::NavDemo.NavDemo_XamlTypeInfo.XamlUserType)GetXamlTypeByName("NavDemo.ViewModels.AboutPage_Model");
                xamlMember = new global::NavDemo.NavDemo_XamlTypeInfo.XamlMember(this, "CommandGetDialog", "MVVMSidekick.ViewModels.CommandModel`2<MVVMSidekick.Reactive.ReactiveCommand, String>");
                xamlMember.Getter = get_68_AboutPage_Model_CommandGetDialog;
                xamlMember.Setter = set_68_AboutPage_Model_CommandGetDialog;
                break;
            case "NavDemo.ViewModels.AboutPage_Model.CommandDeleteDialog":
                userType = (global::NavDemo.NavDemo_XamlTypeInfo.XamlUserType)GetXamlTypeByName("NavDemo.ViewModels.AboutPage_Model");
                xamlMember = new global::NavDemo.NavDemo_XamlTypeInfo.XamlMember(this, "CommandDeleteDialog", "MVVMSidekick.ViewModels.CommandModel`2<MVVMSidekick.Reactive.ReactiveCommand, String>");
                xamlMember.Getter = get_69_AboutPage_Model_CommandDeleteDialog;
                xamlMember.Setter = set_69_AboutPage_Model_CommandDeleteDialog;
                break;
            case "NavDemo.ViewModels.AboutPage_Model.CommandSaveDialog":
                userType = (global::NavDemo.NavDemo_XamlTypeInfo.XamlUserType)GetXamlTypeByName("NavDemo.ViewModels.AboutPage_Model");
                xamlMember = new global::NavDemo.NavDemo_XamlTypeInfo.XamlMember(this, "CommandSaveDialog", "MVVMSidekick.ViewModels.CommandModel`2<MVVMSidekick.Reactive.ReactiveCommand, String>");
                xamlMember.Getter = get_70_AboutPage_Model_CommandSaveDialog;
                xamlMember.Setter = set_70_AboutPage_Model_CommandSaveDialog;
                break;
            case "MVVMSidekick.ViewModels.ViewModelBase`1<NavDemo.ViewModels.AboutPage_Model>.UnbindDisposeGroup":
                userType = (global::NavDemo.NavDemo_XamlTypeInfo.XamlUserType)GetXamlTypeByName("MVVMSidekick.ViewModels.ViewModelBase`1<NavDemo.ViewModels.AboutPage_Model>");
                xamlMember = new global::NavDemo.NavDemo_XamlTypeInfo.XamlMember(this, "UnbindDisposeGroup", "MVVMSidekick.Common.IDisposeGroup");
                xamlMember.Getter = get_71_ViewModelBase_UnbindDisposeGroup;
                xamlMember.SetIsReadOnly();
                break;
            case "MVVMSidekick.ViewModels.ViewModelBase`1<NavDemo.ViewModels.AboutPage_Model>.UnloadDisposeGroup":
                userType = (global::NavDemo.NavDemo_XamlTypeInfo.XamlUserType)GetXamlTypeByName("MVVMSidekick.ViewModels.ViewModelBase`1<NavDemo.ViewModels.AboutPage_Model>");
                xamlMember = new global::NavDemo.NavDemo_XamlTypeInfo.XamlMember(this, "UnloadDisposeGroup", "MVVMSidekick.Common.IDisposeGroup");
                xamlMember.Getter = get_72_ViewModelBase_UnloadDisposeGroup;
                xamlMember.SetIsReadOnly();
                break;
            case "MVVMSidekick.ViewModels.ViewModelBase`1<NavDemo.ViewModels.AboutPage_Model>.IsDisposingWhenUnbindRequired":
                userType = (global::NavDemo.NavDemo_XamlTypeInfo.XamlUserType)GetXamlTypeByName("MVVMSidekick.ViewModels.ViewModelBase`1<NavDemo.ViewModels.AboutPage_Model>");
                xamlMember = new global::NavDemo.NavDemo_XamlTypeInfo.XamlMember(this, "IsDisposingWhenUnbindRequired", "Boolean");
                xamlMember.Getter = get_73_ViewModelBase_IsDisposingWhenUnbindRequired;
                xamlMember.SetIsReadOnly();
                break;
            case "MVVMSidekick.ViewModels.ViewModelBase`1<NavDemo.ViewModels.AboutPage_Model>.IsDisposingWhenUnloadRequired":
                userType = (global::NavDemo.NavDemo_XamlTypeInfo.XamlUserType)GetXamlTypeByName("MVVMSidekick.ViewModels.ViewModelBase`1<NavDemo.ViewModels.AboutPage_Model>");
                xamlMember = new global::NavDemo.NavDemo_XamlTypeInfo.XamlMember(this, "IsDisposingWhenUnloadRequired", "Boolean");
                xamlMember.Getter = get_74_ViewModelBase_IsDisposingWhenUnloadRequired;
                xamlMember.SetIsReadOnly();
                break;
            case "MVVMSidekick.ViewModels.ViewModelBase`1<NavDemo.ViewModels.AboutPage_Model>.StageManager":
                userType = (global::NavDemo.NavDemo_XamlTypeInfo.XamlUserType)GetXamlTypeByName("MVVMSidekick.ViewModels.ViewModelBase`1<NavDemo.ViewModels.AboutPage_Model>");
                xamlMember = new global::NavDemo.NavDemo_XamlTypeInfo.XamlMember(this, "StageManager", "MVVMSidekick.Views.IStageManager");
                xamlMember.Getter = get_75_ViewModelBase_StageManager;
                xamlMember.Setter = set_75_ViewModelBase_StageManager;
                break;
            case "MVVMSidekick.ViewModels.ViewModelBase`1<NavDemo.ViewModels.AboutPage_Model>.HaveReturnValue":
                userType = (global::NavDemo.NavDemo_XamlTypeInfo.XamlUserType)GetXamlTypeByName("MVVMSidekick.ViewModels.ViewModelBase`1<NavDemo.ViewModels.AboutPage_Model>");
                xamlMember = new global::NavDemo.NavDemo_XamlTypeInfo.XamlMember(this, "HaveReturnValue", "Boolean");
                xamlMember.Getter = get_76_ViewModelBase_HaveReturnValue;
                xamlMember.SetIsReadOnly();
                break;
            case "MVVMSidekick.ViewModels.ViewModelBase`1<NavDemo.ViewModels.AboutPage_Model>.IsUIBusy":
                userType = (global::NavDemo.NavDemo_XamlTypeInfo.XamlUserType)GetXamlTypeByName("MVVMSidekick.ViewModels.ViewModelBase`1<NavDemo.ViewModels.AboutPage_Model>");
                xamlMember = new global::NavDemo.NavDemo_XamlTypeInfo.XamlMember(this, "IsUIBusy", "Boolean");
                xamlMember.Getter = get_77_ViewModelBase_IsUIBusy;
                xamlMember.Setter = set_77_ViewModelBase_IsUIBusy;
                break;
            case "MVVMSidekick.ViewModels.ViewModelBase`1<NavDemo.ViewModels.AboutPage_Model>.Dispatcher":
                userType = (global::NavDemo.NavDemo_XamlTypeInfo.XamlUserType)GetXamlTypeByName("MVVMSidekick.ViewModels.ViewModelBase`1<NavDemo.ViewModels.AboutPage_Model>");
                xamlMember = new global::NavDemo.NavDemo_XamlTypeInfo.XamlMember(this, "Dispatcher", "Windows.UI.Core.CoreDispatcher");
                xamlMember.Getter = get_78_ViewModelBase_Dispatcher;
                xamlMember.SetIsReadOnly();
                break;
            case "MVVMSidekick.ViewModels.BindableBase`1<NavDemo.ViewModels.AboutPage_Model>.BindableInstanceId":
                userType = (global::NavDemo.NavDemo_XamlTypeInfo.XamlUserType)GetXamlTypeByName("MVVMSidekick.ViewModels.BindableBase`1<NavDemo.ViewModels.AboutPage_Model>");
                xamlMember = new global::NavDemo.NavDemo_XamlTypeInfo.XamlMember(this, "BindableInstanceId", "String");
                xamlMember.Getter = get_79_BindableBase_BindableInstanceId;
                xamlMember.SetIsReadOnly();
                break;
            case "MVVMSidekick.ViewModels.BindableBase`1<NavDemo.ViewModels.AboutPage_Model>.Error":
                userType = (global::NavDemo.NavDemo_XamlTypeInfo.XamlUserType)GetXamlTypeByName("MVVMSidekick.ViewModels.BindableBase`1<NavDemo.ViewModels.AboutPage_Model>");
                xamlMember = new global::NavDemo.NavDemo_XamlTypeInfo.XamlMember(this, "Error", "String");
                xamlMember.Getter = get_80_BindableBase_Error;
                xamlMember.SetIsReadOnly();
                break;
            case "MVVMSidekick.ViewModels.BindableBase`1<NavDemo.ViewModels.AboutPage_Model>.HasErrors":
                userType = (global::NavDemo.NavDemo_XamlTypeInfo.XamlUserType)GetXamlTypeByName("MVVMSidekick.ViewModels.BindableBase`1<NavDemo.ViewModels.AboutPage_Model>");
                xamlMember = new global::NavDemo.NavDemo_XamlTypeInfo.XamlMember(this, "HasErrors", "Boolean");
                xamlMember.Getter = get_81_BindableBase_HasErrors;
                xamlMember.SetIsReadOnly();
                break;
            case "MVVMSidekick.ViewModels.BindableBase`1<NavDemo.ViewModels.AboutPage_Model>.LocalEventRouter":
                userType = (global::NavDemo.NavDemo_XamlTypeInfo.XamlUserType)GetXamlTypeByName("MVVMSidekick.ViewModels.BindableBase`1<NavDemo.ViewModels.AboutPage_Model>");
                xamlMember = new global::NavDemo.NavDemo_XamlTypeInfo.XamlMember(this, "LocalEventRouter", "MVVMSidekick.EventRouting.EventRouter");
                xamlMember.Getter = get_82_BindableBase_LocalEventRouter;
                xamlMember.Setter = set_82_BindableBase_LocalEventRouter;
                break;
            case "NavDemo.AttachProps.RtfText.RichText":
                userType = (global::NavDemo.NavDemo_XamlTypeInfo.XamlUserType)GetXamlTypeByName("NavDemo.AttachProps.RtfText");
                xamlMember = new global::NavDemo.NavDemo_XamlTypeInfo.XamlMember(this, "RichText", "String");
                xamlMember.SetTargetTypeName("Windows.UI.Xaml.DependencyObject");
                xamlMember.SetIsAttachable();
                xamlMember.Getter = get_83_RtfText_RichText;
                xamlMember.Setter = set_83_RtfText_RichText;
                break;
            case "NavDemo.AboutPage.StrongTypeViewModel":
                userType = (global::NavDemo.NavDemo_XamlTypeInfo.XamlUserType)GetXamlTypeByName("NavDemo.AboutPage");
                xamlMember = new global::NavDemo.NavDemo_XamlTypeInfo.XamlMember(this, "StrongTypeViewModel", "NavDemo.ViewModels.AboutPage_Model");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_84_AboutPage_StrongTypeViewModel;
                xamlMember.Setter = set_84_AboutPage_StrongTypeViewModel;
                break;
            case "NavDemo.ViewModels.BlankPage1_Model.Title":
                userType = (global::NavDemo.NavDemo_XamlTypeInfo.XamlUserType)GetXamlTypeByName("NavDemo.ViewModels.BlankPage1_Model");
                xamlMember = new global::NavDemo.NavDemo_XamlTypeInfo.XamlMember(this, "Title", "String");
                xamlMember.Getter = get_85_BlankPage1_Model_Title;
                xamlMember.Setter = set_85_BlankPage1_Model_Title;
                break;
            case "MVVMSidekick.ViewModels.ViewModelBase`1<NavDemo.ViewModels.BlankPage1_Model>.UnbindDisposeGroup":
                userType = (global::NavDemo.NavDemo_XamlTypeInfo.XamlUserType)GetXamlTypeByName("MVVMSidekick.ViewModels.ViewModelBase`1<NavDemo.ViewModels.BlankPage1_Model>");
                xamlMember = new global::NavDemo.NavDemo_XamlTypeInfo.XamlMember(this, "UnbindDisposeGroup", "MVVMSidekick.Common.IDisposeGroup");
                xamlMember.Getter = get_86_ViewModelBase_UnbindDisposeGroup;
                xamlMember.SetIsReadOnly();
                break;
            case "MVVMSidekick.ViewModels.ViewModelBase`1<NavDemo.ViewModels.BlankPage1_Model>.UnloadDisposeGroup":
                userType = (global::NavDemo.NavDemo_XamlTypeInfo.XamlUserType)GetXamlTypeByName("MVVMSidekick.ViewModels.ViewModelBase`1<NavDemo.ViewModels.BlankPage1_Model>");
                xamlMember = new global::NavDemo.NavDemo_XamlTypeInfo.XamlMember(this, "UnloadDisposeGroup", "MVVMSidekick.Common.IDisposeGroup");
                xamlMember.Getter = get_87_ViewModelBase_UnloadDisposeGroup;
                xamlMember.SetIsReadOnly();
                break;
            case "MVVMSidekick.ViewModels.ViewModelBase`1<NavDemo.ViewModels.BlankPage1_Model>.IsDisposingWhenUnbindRequired":
                userType = (global::NavDemo.NavDemo_XamlTypeInfo.XamlUserType)GetXamlTypeByName("MVVMSidekick.ViewModels.ViewModelBase`1<NavDemo.ViewModels.BlankPage1_Model>");
                xamlMember = new global::NavDemo.NavDemo_XamlTypeInfo.XamlMember(this, "IsDisposingWhenUnbindRequired", "Boolean");
                xamlMember.Getter = get_88_ViewModelBase_IsDisposingWhenUnbindRequired;
                xamlMember.SetIsReadOnly();
                break;
            case "MVVMSidekick.ViewModels.ViewModelBase`1<NavDemo.ViewModels.BlankPage1_Model>.IsDisposingWhenUnloadRequired":
                userType = (global::NavDemo.NavDemo_XamlTypeInfo.XamlUserType)GetXamlTypeByName("MVVMSidekick.ViewModels.ViewModelBase`1<NavDemo.ViewModels.BlankPage1_Model>");
                xamlMember = new global::NavDemo.NavDemo_XamlTypeInfo.XamlMember(this, "IsDisposingWhenUnloadRequired", "Boolean");
                xamlMember.Getter = get_89_ViewModelBase_IsDisposingWhenUnloadRequired;
                xamlMember.SetIsReadOnly();
                break;
            case "MVVMSidekick.ViewModels.ViewModelBase`1<NavDemo.ViewModels.BlankPage1_Model>.StageManager":
                userType = (global::NavDemo.NavDemo_XamlTypeInfo.XamlUserType)GetXamlTypeByName("MVVMSidekick.ViewModels.ViewModelBase`1<NavDemo.ViewModels.BlankPage1_Model>");
                xamlMember = new global::NavDemo.NavDemo_XamlTypeInfo.XamlMember(this, "StageManager", "MVVMSidekick.Views.IStageManager");
                xamlMember.Getter = get_90_ViewModelBase_StageManager;
                xamlMember.Setter = set_90_ViewModelBase_StageManager;
                break;
            case "MVVMSidekick.ViewModels.ViewModelBase`1<NavDemo.ViewModels.BlankPage1_Model>.HaveReturnValue":
                userType = (global::NavDemo.NavDemo_XamlTypeInfo.XamlUserType)GetXamlTypeByName("MVVMSidekick.ViewModels.ViewModelBase`1<NavDemo.ViewModels.BlankPage1_Model>");
                xamlMember = new global::NavDemo.NavDemo_XamlTypeInfo.XamlMember(this, "HaveReturnValue", "Boolean");
                xamlMember.Getter = get_91_ViewModelBase_HaveReturnValue;
                xamlMember.SetIsReadOnly();
                break;
            case "MVVMSidekick.ViewModels.ViewModelBase`1<NavDemo.ViewModels.BlankPage1_Model>.IsUIBusy":
                userType = (global::NavDemo.NavDemo_XamlTypeInfo.XamlUserType)GetXamlTypeByName("MVVMSidekick.ViewModels.ViewModelBase`1<NavDemo.ViewModels.BlankPage1_Model>");
                xamlMember = new global::NavDemo.NavDemo_XamlTypeInfo.XamlMember(this, "IsUIBusy", "Boolean");
                xamlMember.Getter = get_92_ViewModelBase_IsUIBusy;
                xamlMember.Setter = set_92_ViewModelBase_IsUIBusy;
                break;
            case "MVVMSidekick.ViewModels.ViewModelBase`1<NavDemo.ViewModels.BlankPage1_Model>.Dispatcher":
                userType = (global::NavDemo.NavDemo_XamlTypeInfo.XamlUserType)GetXamlTypeByName("MVVMSidekick.ViewModels.ViewModelBase`1<NavDemo.ViewModels.BlankPage1_Model>");
                xamlMember = new global::NavDemo.NavDemo_XamlTypeInfo.XamlMember(this, "Dispatcher", "Windows.UI.Core.CoreDispatcher");
                xamlMember.Getter = get_93_ViewModelBase_Dispatcher;
                xamlMember.SetIsReadOnly();
                break;
            case "MVVMSidekick.ViewModels.BindableBase`1<NavDemo.ViewModels.BlankPage1_Model>.BindableInstanceId":
                userType = (global::NavDemo.NavDemo_XamlTypeInfo.XamlUserType)GetXamlTypeByName("MVVMSidekick.ViewModels.BindableBase`1<NavDemo.ViewModels.BlankPage1_Model>");
                xamlMember = new global::NavDemo.NavDemo_XamlTypeInfo.XamlMember(this, "BindableInstanceId", "String");
                xamlMember.Getter = get_94_BindableBase_BindableInstanceId;
                xamlMember.SetIsReadOnly();
                break;
            case "MVVMSidekick.ViewModels.BindableBase`1<NavDemo.ViewModels.BlankPage1_Model>.Error":
                userType = (global::NavDemo.NavDemo_XamlTypeInfo.XamlUserType)GetXamlTypeByName("MVVMSidekick.ViewModels.BindableBase`1<NavDemo.ViewModels.BlankPage1_Model>");
                xamlMember = new global::NavDemo.NavDemo_XamlTypeInfo.XamlMember(this, "Error", "String");
                xamlMember.Getter = get_95_BindableBase_Error;
                xamlMember.SetIsReadOnly();
                break;
            case "MVVMSidekick.ViewModels.BindableBase`1<NavDemo.ViewModels.BlankPage1_Model>.HasErrors":
                userType = (global::NavDemo.NavDemo_XamlTypeInfo.XamlUserType)GetXamlTypeByName("MVVMSidekick.ViewModels.BindableBase`1<NavDemo.ViewModels.BlankPage1_Model>");
                xamlMember = new global::NavDemo.NavDemo_XamlTypeInfo.XamlMember(this, "HasErrors", "Boolean");
                xamlMember.Getter = get_96_BindableBase_HasErrors;
                xamlMember.SetIsReadOnly();
                break;
            case "MVVMSidekick.ViewModels.BindableBase`1<NavDemo.ViewModels.BlankPage1_Model>.LocalEventRouter":
                userType = (global::NavDemo.NavDemo_XamlTypeInfo.XamlUserType)GetXamlTypeByName("MVVMSidekick.ViewModels.BindableBase`1<NavDemo.ViewModels.BlankPage1_Model>");
                xamlMember = new global::NavDemo.NavDemo_XamlTypeInfo.XamlMember(this, "LocalEventRouter", "MVVMSidekick.EventRouting.EventRouter");
                xamlMember.Getter = get_97_BindableBase_LocalEventRouter;
                xamlMember.Setter = set_97_BindableBase_LocalEventRouter;
                break;
            case "NavDemo.BlankPage1.StrongTypeViewModel":
                userType = (global::NavDemo.NavDemo_XamlTypeInfo.XamlUserType)GetXamlTypeByName("NavDemo.BlankPage1");
                xamlMember = new global::NavDemo.NavDemo_XamlTypeInfo.XamlMember(this, "StrongTypeViewModel", "NavDemo.ViewModels.BlankPage1_Model");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_98_BlankPage1_StrongTypeViewModel;
                xamlMember.Setter = set_98_BlankPage1_StrongTypeViewModel;
                break;
            case "NavDemo.ViewModels.HomePage_Model.Title":
                userType = (global::NavDemo.NavDemo_XamlTypeInfo.XamlUserType)GetXamlTypeByName("NavDemo.ViewModels.HomePage_Model");
                xamlMember = new global::NavDemo.NavDemo_XamlTypeInfo.XamlMember(this, "Title", "String");
                xamlMember.Getter = get_99_HomePage_Model_Title;
                xamlMember.Setter = set_99_HomePage_Model_Title;
                break;
            case "NavDemo.ViewModels.HomePage_Model.currentDialog":
                userType = (global::NavDemo.NavDemo_XamlTypeInfo.XamlUserType)GetXamlTypeByName("NavDemo.ViewModels.HomePage_Model");
                xamlMember = new global::NavDemo.NavDemo_XamlTypeInfo.XamlMember(this, "currentDialog", "NavDemo.Dialog");
                xamlMember.Getter = get_100_HomePage_Model_currentDialog;
                xamlMember.Setter = set_100_HomePage_Model_currentDialog;
                break;
            case "NavDemo.ViewModels.HomePage_Model.chosenFriend":
                userType = (global::NavDemo.NavDemo_XamlTypeInfo.XamlUserType)GetXamlTypeByName("NavDemo.ViewModels.HomePage_Model");
                xamlMember = new global::NavDemo.NavDemo_XamlTypeInfo.XamlMember(this, "chosenFriend", "NavDemo.Friend");
                xamlMember.Getter = get_101_HomePage_Model_chosenFriend;
                xamlMember.Setter = set_101_HomePage_Model_chosenFriend;
                break;
            case "NavDemo.ViewModels.HomePage_Model.friendItemList":
                userType = (global::NavDemo.NavDemo_XamlTypeInfo.XamlUserType)GetXamlTypeByName("NavDemo.ViewModels.HomePage_Model");
                xamlMember = new global::NavDemo.NavDemo_XamlTypeInfo.XamlMember(this, "friendItemList", "System.Collections.Generic.List`1<NavDemo.Friend>");
                xamlMember.Getter = get_102_HomePage_Model_friendItemList;
                xamlMember.Setter = set_102_HomePage_Model_friendItemList;
                break;
            case "NavDemo.ViewModels.HomePage_Model.suggest":
                userType = (global::NavDemo.NavDemo_XamlTypeInfo.XamlUserType)GetXamlTypeByName("NavDemo.ViewModels.HomePage_Model");
                xamlMember = new global::NavDemo.NavDemo_XamlTypeInfo.XamlMember(this, "suggest", "NavDemo.Services.SuggestService");
                xamlMember.Getter = get_103_HomePage_Model_suggest;
                xamlMember.Setter = set_103_HomePage_Model_suggest;
                break;
            case "NavDemo.ViewModels.HomePage_Model.fontFamily":
                userType = (global::NavDemo.NavDemo_XamlTypeInfo.XamlUserType)GetXamlTypeByName("NavDemo.ViewModels.HomePage_Model");
                xamlMember = new global::NavDemo.NavDemo_XamlTypeInfo.XamlMember(this, "fontFamily", "Windows.UI.Xaml.Media.FontFamily");
                xamlMember.Getter = get_104_HomePage_Model_fontFamily;
                xamlMember.Setter = set_104_HomePage_Model_fontFamily;
                break;
            case "NavDemo.ViewModels.HomePage_Model.suggestBoxText":
                userType = (global::NavDemo.NavDemo_XamlTypeInfo.XamlUserType)GetXamlTypeByName("NavDemo.ViewModels.HomePage_Model");
                xamlMember = new global::NavDemo.NavDemo_XamlTypeInfo.XamlMember(this, "suggestBoxText", "String");
                xamlMember.Getter = get_105_HomePage_Model_suggestBoxText;
                xamlMember.Setter = set_105_HomePage_Model_suggestBoxText;
                break;
            case "NavDemo.ViewModels.HomePage_Model.currentIndex":
                userType = (global::NavDemo.NavDemo_XamlTypeInfo.XamlUserType)GetXamlTypeByName("NavDemo.ViewModels.HomePage_Model");
                xamlMember = new global::NavDemo.NavDemo_XamlTypeInfo.XamlMember(this, "currentIndex", "Int32");
                xamlMember.Getter = get_106_HomePage_Model_currentIndex;
                xamlMember.Setter = set_106_HomePage_Model_currentIndex;
                break;
            case "NavDemo.ViewModels.HomePage_Model.richEditBoxContent":
                userType = (global::NavDemo.NavDemo_XamlTypeInfo.XamlUserType)GetXamlTypeByName("NavDemo.ViewModels.HomePage_Model");
                xamlMember = new global::NavDemo.NavDemo_XamlTypeInfo.XamlMember(this, "richEditBoxContent", "String");
                xamlMember.Getter = get_107_HomePage_Model_richEditBoxContent;
                xamlMember.Setter = set_107_HomePage_Model_richEditBoxContent;
                break;
            case "NavDemo.ViewModels.HomePage_Model.CommandChoseFriend":
                userType = (global::NavDemo.NavDemo_XamlTypeInfo.XamlUserType)GetXamlTypeByName("NavDemo.ViewModels.HomePage_Model");
                xamlMember = new global::NavDemo.NavDemo_XamlTypeInfo.XamlMember(this, "CommandChoseFriend", "MVVMSidekick.ViewModels.CommandModel`2<MVVMSidekick.Reactive.ReactiveCommand, String>");
                xamlMember.Getter = get_108_HomePage_Model_CommandChoseFriend;
                xamlMember.Setter = set_108_HomePage_Model_CommandChoseFriend;
                break;
            case "NavDemo.ViewModels.HomePage_Model.CommandInsertDialog":
                userType = (global::NavDemo.NavDemo_XamlTypeInfo.XamlUserType)GetXamlTypeByName("NavDemo.ViewModels.HomePage_Model");
                xamlMember = new global::NavDemo.NavDemo_XamlTypeInfo.XamlMember(this, "CommandInsertDialog", "MVVMSidekick.ViewModels.CommandModel`2<MVVMSidekick.Reactive.ReactiveCommand, String>");
                xamlMember.Getter = get_109_HomePage_Model_CommandInsertDialog;
                xamlMember.Setter = set_109_HomePage_Model_CommandInsertDialog;
                break;
            case "NavDemo.ViewModels.HomePage_Model.CommandChangeDate":
                userType = (global::NavDemo.NavDemo_XamlTypeInfo.XamlUserType)GetXamlTypeByName("NavDemo.ViewModels.HomePage_Model");
                xamlMember = new global::NavDemo.NavDemo_XamlTypeInfo.XamlMember(this, "CommandChangeDate", "MVVMSidekick.ViewModels.CommandModel`2<MVVMSidekick.Reactive.ReactiveCommand, String>");
                xamlMember.Getter = get_110_HomePage_Model_CommandChangeDate;
                xamlMember.Setter = set_110_HomePage_Model_CommandChangeDate;
                break;
            case "MVVMSidekick.ViewModels.ViewModelBase`1<NavDemo.ViewModels.HomePage_Model>.UnbindDisposeGroup":
                userType = (global::NavDemo.NavDemo_XamlTypeInfo.XamlUserType)GetXamlTypeByName("MVVMSidekick.ViewModels.ViewModelBase`1<NavDemo.ViewModels.HomePage_Model>");
                xamlMember = new global::NavDemo.NavDemo_XamlTypeInfo.XamlMember(this, "UnbindDisposeGroup", "MVVMSidekick.Common.IDisposeGroup");
                xamlMember.Getter = get_111_ViewModelBase_UnbindDisposeGroup;
                xamlMember.SetIsReadOnly();
                break;
            case "MVVMSidekick.ViewModels.ViewModelBase`1<NavDemo.ViewModels.HomePage_Model>.UnloadDisposeGroup":
                userType = (global::NavDemo.NavDemo_XamlTypeInfo.XamlUserType)GetXamlTypeByName("MVVMSidekick.ViewModels.ViewModelBase`1<NavDemo.ViewModels.HomePage_Model>");
                xamlMember = new global::NavDemo.NavDemo_XamlTypeInfo.XamlMember(this, "UnloadDisposeGroup", "MVVMSidekick.Common.IDisposeGroup");
                xamlMember.Getter = get_112_ViewModelBase_UnloadDisposeGroup;
                xamlMember.SetIsReadOnly();
                break;
            case "MVVMSidekick.ViewModels.ViewModelBase`1<NavDemo.ViewModels.HomePage_Model>.IsDisposingWhenUnbindRequired":
                userType = (global::NavDemo.NavDemo_XamlTypeInfo.XamlUserType)GetXamlTypeByName("MVVMSidekick.ViewModels.ViewModelBase`1<NavDemo.ViewModels.HomePage_Model>");
                xamlMember = new global::NavDemo.NavDemo_XamlTypeInfo.XamlMember(this, "IsDisposingWhenUnbindRequired", "Boolean");
                xamlMember.Getter = get_113_ViewModelBase_IsDisposingWhenUnbindRequired;
                xamlMember.SetIsReadOnly();
                break;
            case "MVVMSidekick.ViewModels.ViewModelBase`1<NavDemo.ViewModels.HomePage_Model>.IsDisposingWhenUnloadRequired":
                userType = (global::NavDemo.NavDemo_XamlTypeInfo.XamlUserType)GetXamlTypeByName("MVVMSidekick.ViewModels.ViewModelBase`1<NavDemo.ViewModels.HomePage_Model>");
                xamlMember = new global::NavDemo.NavDemo_XamlTypeInfo.XamlMember(this, "IsDisposingWhenUnloadRequired", "Boolean");
                xamlMember.Getter = get_114_ViewModelBase_IsDisposingWhenUnloadRequired;
                xamlMember.SetIsReadOnly();
                break;
            case "MVVMSidekick.ViewModels.ViewModelBase`1<NavDemo.ViewModels.HomePage_Model>.StageManager":
                userType = (global::NavDemo.NavDemo_XamlTypeInfo.XamlUserType)GetXamlTypeByName("MVVMSidekick.ViewModels.ViewModelBase`1<NavDemo.ViewModels.HomePage_Model>");
                xamlMember = new global::NavDemo.NavDemo_XamlTypeInfo.XamlMember(this, "StageManager", "MVVMSidekick.Views.IStageManager");
                xamlMember.Getter = get_115_ViewModelBase_StageManager;
                xamlMember.Setter = set_115_ViewModelBase_StageManager;
                break;
            case "MVVMSidekick.ViewModels.ViewModelBase`1<NavDemo.ViewModels.HomePage_Model>.HaveReturnValue":
                userType = (global::NavDemo.NavDemo_XamlTypeInfo.XamlUserType)GetXamlTypeByName("MVVMSidekick.ViewModels.ViewModelBase`1<NavDemo.ViewModels.HomePage_Model>");
                xamlMember = new global::NavDemo.NavDemo_XamlTypeInfo.XamlMember(this, "HaveReturnValue", "Boolean");
                xamlMember.Getter = get_116_ViewModelBase_HaveReturnValue;
                xamlMember.SetIsReadOnly();
                break;
            case "MVVMSidekick.ViewModels.ViewModelBase`1<NavDemo.ViewModels.HomePage_Model>.IsUIBusy":
                userType = (global::NavDemo.NavDemo_XamlTypeInfo.XamlUserType)GetXamlTypeByName("MVVMSidekick.ViewModels.ViewModelBase`1<NavDemo.ViewModels.HomePage_Model>");
                xamlMember = new global::NavDemo.NavDemo_XamlTypeInfo.XamlMember(this, "IsUIBusy", "Boolean");
                xamlMember.Getter = get_117_ViewModelBase_IsUIBusy;
                xamlMember.Setter = set_117_ViewModelBase_IsUIBusy;
                break;
            case "MVVMSidekick.ViewModels.ViewModelBase`1<NavDemo.ViewModels.HomePage_Model>.Dispatcher":
                userType = (global::NavDemo.NavDemo_XamlTypeInfo.XamlUserType)GetXamlTypeByName("MVVMSidekick.ViewModels.ViewModelBase`1<NavDemo.ViewModels.HomePage_Model>");
                xamlMember = new global::NavDemo.NavDemo_XamlTypeInfo.XamlMember(this, "Dispatcher", "Windows.UI.Core.CoreDispatcher");
                xamlMember.Getter = get_118_ViewModelBase_Dispatcher;
                xamlMember.SetIsReadOnly();
                break;
            case "MVVMSidekick.ViewModels.BindableBase`1<NavDemo.ViewModels.HomePage_Model>.BindableInstanceId":
                userType = (global::NavDemo.NavDemo_XamlTypeInfo.XamlUserType)GetXamlTypeByName("MVVMSidekick.ViewModels.BindableBase`1<NavDemo.ViewModels.HomePage_Model>");
                xamlMember = new global::NavDemo.NavDemo_XamlTypeInfo.XamlMember(this, "BindableInstanceId", "String");
                xamlMember.Getter = get_119_BindableBase_BindableInstanceId;
                xamlMember.SetIsReadOnly();
                break;
            case "MVVMSidekick.ViewModels.BindableBase`1<NavDemo.ViewModels.HomePage_Model>.Error":
                userType = (global::NavDemo.NavDemo_XamlTypeInfo.XamlUserType)GetXamlTypeByName("MVVMSidekick.ViewModels.BindableBase`1<NavDemo.ViewModels.HomePage_Model>");
                xamlMember = new global::NavDemo.NavDemo_XamlTypeInfo.XamlMember(this, "Error", "String");
                xamlMember.Getter = get_120_BindableBase_Error;
                xamlMember.SetIsReadOnly();
                break;
            case "MVVMSidekick.ViewModels.BindableBase`1<NavDemo.ViewModels.HomePage_Model>.HasErrors":
                userType = (global::NavDemo.NavDemo_XamlTypeInfo.XamlUserType)GetXamlTypeByName("MVVMSidekick.ViewModels.BindableBase`1<NavDemo.ViewModels.HomePage_Model>");
                xamlMember = new global::NavDemo.NavDemo_XamlTypeInfo.XamlMember(this, "HasErrors", "Boolean");
                xamlMember.Getter = get_121_BindableBase_HasErrors;
                xamlMember.SetIsReadOnly();
                break;
            case "MVVMSidekick.ViewModels.BindableBase`1<NavDemo.ViewModels.HomePage_Model>.LocalEventRouter":
                userType = (global::NavDemo.NavDemo_XamlTypeInfo.XamlUserType)GetXamlTypeByName("MVVMSidekick.ViewModels.BindableBase`1<NavDemo.ViewModels.HomePage_Model>");
                xamlMember = new global::NavDemo.NavDemo_XamlTypeInfo.XamlMember(this, "LocalEventRouter", "MVVMSidekick.EventRouting.EventRouter");
                xamlMember.Getter = get_122_BindableBase_LocalEventRouter;
                xamlMember.Setter = set_122_BindableBase_LocalEventRouter;
                break;
            case "Microsoft.Xaml.Interactivity.Interaction.Behaviors":
                userType = (global::NavDemo.NavDemo_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.Xaml.Interactivity.Interaction");
                xamlMember = new global::NavDemo.NavDemo_XamlTypeInfo.XamlMember(this, "Behaviors", "Microsoft.Xaml.Interactivity.BehaviorCollection");
                xamlMember.SetTargetTypeName("Windows.UI.Xaml.DependencyObject");
                xamlMember.SetIsAttachable();
                xamlMember.Getter = get_123_Interaction_Behaviors;
                xamlMember.Setter = set_123_Interaction_Behaviors;
                break;
            case "Microsoft.Xaml.Interactions.Core.EventTriggerBehavior.Actions":
                userType = (global::NavDemo.NavDemo_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.Xaml.Interactions.Core.EventTriggerBehavior");
                xamlMember = new global::NavDemo.NavDemo_XamlTypeInfo.XamlMember(this, "Actions", "Microsoft.Xaml.Interactivity.ActionCollection");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_124_EventTriggerBehavior_Actions;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.Xaml.Interactions.Core.EventTriggerBehavior.EventName":
                userType = (global::NavDemo.NavDemo_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.Xaml.Interactions.Core.EventTriggerBehavior");
                xamlMember = new global::NavDemo.NavDemo_XamlTypeInfo.XamlMember(this, "EventName", "String");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_125_EventTriggerBehavior_EventName;
                xamlMember.Setter = set_125_EventTriggerBehavior_EventName;
                break;
            case "Microsoft.Xaml.Interactions.Core.EventTriggerBehavior.SourceObject":
                userType = (global::NavDemo.NavDemo_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.Xaml.Interactions.Core.EventTriggerBehavior");
                xamlMember = new global::NavDemo.NavDemo_XamlTypeInfo.XamlMember(this, "SourceObject", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_126_EventTriggerBehavior_SourceObject;
                xamlMember.Setter = set_126_EventTriggerBehavior_SourceObject;
                break;
            case "Microsoft.Xaml.Interactions.Core.EventTriggerBehavior.AssociatedObject":
                userType = (global::NavDemo.NavDemo_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.Xaml.Interactions.Core.EventTriggerBehavior");
                xamlMember = new global::NavDemo.NavDemo_XamlTypeInfo.XamlMember(this, "AssociatedObject", "Windows.UI.Xaml.DependencyObject");
                xamlMember.Getter = get_127_EventTriggerBehavior_AssociatedObject;
                xamlMember.SetIsReadOnly();
                break;
            case "Microsoft.Xaml.Interactions.Core.InvokeCommandAction.Command":
                userType = (global::NavDemo.NavDemo_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.Xaml.Interactions.Core.InvokeCommandAction");
                xamlMember = new global::NavDemo.NavDemo_XamlTypeInfo.XamlMember(this, "Command", "System.Windows.Input.ICommand");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_128_InvokeCommandAction_Command;
                xamlMember.Setter = set_128_InvokeCommandAction_Command;
                break;
            case "Microsoft.Xaml.Interactions.Core.InvokeCommandAction.CommandParameter":
                userType = (global::NavDemo.NavDemo_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.Xaml.Interactions.Core.InvokeCommandAction");
                xamlMember = new global::NavDemo.NavDemo_XamlTypeInfo.XamlMember(this, "CommandParameter", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_129_InvokeCommandAction_CommandParameter;
                xamlMember.Setter = set_129_InvokeCommandAction_CommandParameter;
                break;
            case "Microsoft.Xaml.Interactions.Core.InvokeCommandAction.InputConverter":
                userType = (global::NavDemo.NavDemo_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.Xaml.Interactions.Core.InvokeCommandAction");
                xamlMember = new global::NavDemo.NavDemo_XamlTypeInfo.XamlMember(this, "InputConverter", "Windows.UI.Xaml.Data.IValueConverter");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_130_InvokeCommandAction_InputConverter;
                xamlMember.Setter = set_130_InvokeCommandAction_InputConverter;
                break;
            case "Microsoft.Xaml.Interactions.Core.InvokeCommandAction.InputConverterParameter":
                userType = (global::NavDemo.NavDemo_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.Xaml.Interactions.Core.InvokeCommandAction");
                xamlMember = new global::NavDemo.NavDemo_XamlTypeInfo.XamlMember(this, "InputConverterParameter", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_131_InvokeCommandAction_InputConverterParameter;
                xamlMember.Setter = set_131_InvokeCommandAction_InputConverterParameter;
                break;
            case "Microsoft.Xaml.Interactions.Core.InvokeCommandAction.InputConverterLanguage":
                userType = (global::NavDemo.NavDemo_XamlTypeInfo.XamlUserType)GetXamlTypeByName("Microsoft.Xaml.Interactions.Core.InvokeCommandAction");
                xamlMember = new global::NavDemo.NavDemo_XamlTypeInfo.XamlMember(this, "InputConverterLanguage", "String");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_132_InvokeCommandAction_InputConverterLanguage;
                xamlMember.Setter = set_132_InvokeCommandAction_InputConverterLanguage;
                break;
            case "MVVMSidekick.Behaviors.SendToEventRouterAction.EventData":
                userType = (global::NavDemo.NavDemo_XamlTypeInfo.XamlUserType)GetXamlTypeByName("MVVMSidekick.Behaviors.SendToEventRouterAction");
                xamlMember = new global::NavDemo.NavDemo_XamlTypeInfo.XamlMember(this, "EventData", "Object");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_133_SendToEventRouterAction_EventData;
                xamlMember.Setter = set_133_SendToEventRouterAction_EventData;
                break;
            case "MVVMSidekick.Behaviors.SendToEventRouterAction.IsEventFiringToAllBaseClassesChannels":
                userType = (global::NavDemo.NavDemo_XamlTypeInfo.XamlUserType)GetXamlTypeByName("MVVMSidekick.Behaviors.SendToEventRouterAction");
                xamlMember = new global::NavDemo.NavDemo_XamlTypeInfo.XamlMember(this, "IsEventFiringToAllBaseClassesChannels", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_134_SendToEventRouterAction_IsEventFiringToAllBaseClassesChannels;
                xamlMember.Setter = set_134_SendToEventRouterAction_IsEventFiringToAllBaseClassesChannels;
                break;
            case "MVVMSidekick.Behaviors.SendToEventRouterAction.EventRoutingName":
                userType = (global::NavDemo.NavDemo_XamlTypeInfo.XamlUserType)GetXamlTypeByName("MVVMSidekick.Behaviors.SendToEventRouterAction");
                xamlMember = new global::NavDemo.NavDemo_XamlTypeInfo.XamlMember(this, "EventRoutingName", "String");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_135_SendToEventRouterAction_EventRoutingName;
                xamlMember.Setter = set_135_SendToEventRouterAction_EventRoutingName;
                break;
            case "MVVMSidekick.Behaviors.SendToEventRouterAction.EventRouter":
                userType = (global::NavDemo.NavDemo_XamlTypeInfo.XamlUserType)GetXamlTypeByName("MVVMSidekick.Behaviors.SendToEventRouterAction");
                xamlMember = new global::NavDemo.NavDemo_XamlTypeInfo.XamlMember(this, "EventRouter", "MVVMSidekick.EventRouting.EventRouter");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_136_SendToEventRouterAction_EventRouter;
                xamlMember.Setter = set_136_SendToEventRouterAction_EventRouter;
                break;
            case "MVVMSidekick.Behaviors.SendToEventRouterAction.EventDataType":
                userType = (global::NavDemo.NavDemo_XamlTypeInfo.XamlUserType)GetXamlTypeByName("MVVMSidekick.Behaviors.SendToEventRouterAction");
                xamlMember = new global::NavDemo.NavDemo_XamlTypeInfo.XamlMember(this, "EventDataType", "System.Type");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_137_SendToEventRouterAction_EventDataType;
                xamlMember.Setter = set_137_SendToEventRouterAction_EventDataType;
                break;
            case "MVVMSidekick.Behaviors.SendToEventRouterAction.IsEventFiringToAllImplementedInterfacesChannels":
                userType = (global::NavDemo.NavDemo_XamlTypeInfo.XamlUserType)GetXamlTypeByName("MVVMSidekick.Behaviors.SendToEventRouterAction");
                xamlMember = new global::NavDemo.NavDemo_XamlTypeInfo.XamlMember(this, "IsEventFiringToAllImplementedInterfacesChannels", "Boolean");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_138_SendToEventRouterAction_IsEventFiringToAllImplementedInterfacesChannels;
                xamlMember.Setter = set_138_SendToEventRouterAction_IsEventFiringToAllImplementedInterfacesChannels;
                break;
            case "NavDemo.HomePage.StrongTypeViewModel":
                userType = (global::NavDemo.NavDemo_XamlTypeInfo.XamlUserType)GetXamlTypeByName("NavDemo.HomePage");
                xamlMember = new global::NavDemo.NavDemo_XamlTypeInfo.XamlMember(this, "StrongTypeViewModel", "NavDemo.ViewModels.HomePage_Model");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_139_HomePage_StrongTypeViewModel;
                xamlMember.Setter = set_139_HomePage_StrongTypeViewModel;
                break;
            case "NavDemo.ViewModels.MainPage_Model.Title":
                userType = (global::NavDemo.NavDemo_XamlTypeInfo.XamlUserType)GetXamlTypeByName("NavDemo.ViewModels.MainPage_Model");
                xamlMember = new global::NavDemo.NavDemo_XamlTypeInfo.XamlMember(this, "Title", "String");
                xamlMember.Getter = get_140_MainPage_Model_Title;
                xamlMember.Setter = set_140_MainPage_Model_Title;
                break;
            case "NavDemo.ViewModels.MainPage_Model.NavMenuItemList":
                userType = (global::NavDemo.NavDemo_XamlTypeInfo.XamlUserType)GetXamlTypeByName("NavDemo.ViewModels.MainPage_Model");
                xamlMember = new global::NavDemo.NavDemo_XamlTypeInfo.XamlMember(this, "NavMenuItemList", "System.Collections.ObjectModel.ObservableCollection`1<NavDemo.Models.NavMenuItem>");
                xamlMember.Getter = get_141_MainPage_Model_NavMenuItemList;
                xamlMember.Setter = set_141_MainPage_Model_NavMenuItemList;
                break;
            case "NavDemo.Models.NavMenuItem.Glyph":
                userType = (global::NavDemo.NavDemo_XamlTypeInfo.XamlUserType)GetXamlTypeByName("NavDemo.Models.NavMenuItem");
                xamlMember = new global::NavDemo.NavDemo_XamlTypeInfo.XamlMember(this, "Glyph", "String");
                xamlMember.Getter = get_142_NavMenuItem_Glyph;
                xamlMember.Setter = set_142_NavMenuItem_Glyph;
                break;
            case "NavDemo.Models.NavMenuItem.Label":
                userType = (global::NavDemo.NavDemo_XamlTypeInfo.XamlUserType)GetXamlTypeByName("NavDemo.Models.NavMenuItem");
                xamlMember = new global::NavDemo.NavDemo_XamlTypeInfo.XamlMember(this, "Label", "String");
                xamlMember.Getter = get_143_NavMenuItem_Label;
                xamlMember.Setter = set_143_NavMenuItem_Label;
                break;
            case "MVVMSidekick.ViewModels.BindableBase`1<NavDemo.Models.NavMenuItem>.BindableInstanceId":
                userType = (global::NavDemo.NavDemo_XamlTypeInfo.XamlUserType)GetXamlTypeByName("MVVMSidekick.ViewModels.BindableBase`1<NavDemo.Models.NavMenuItem>");
                xamlMember = new global::NavDemo.NavDemo_XamlTypeInfo.XamlMember(this, "BindableInstanceId", "String");
                xamlMember.Getter = get_144_BindableBase_BindableInstanceId;
                xamlMember.SetIsReadOnly();
                break;
            case "MVVMSidekick.ViewModels.BindableBase`1<NavDemo.Models.NavMenuItem>.Error":
                userType = (global::NavDemo.NavDemo_XamlTypeInfo.XamlUserType)GetXamlTypeByName("MVVMSidekick.ViewModels.BindableBase`1<NavDemo.Models.NavMenuItem>");
                xamlMember = new global::NavDemo.NavDemo_XamlTypeInfo.XamlMember(this, "Error", "String");
                xamlMember.Getter = get_145_BindableBase_Error;
                xamlMember.SetIsReadOnly();
                break;
            case "MVVMSidekick.ViewModels.BindableBase`1<NavDemo.Models.NavMenuItem>.HasErrors":
                userType = (global::NavDemo.NavDemo_XamlTypeInfo.XamlUserType)GetXamlTypeByName("MVVMSidekick.ViewModels.BindableBase`1<NavDemo.Models.NavMenuItem>");
                xamlMember = new global::NavDemo.NavDemo_XamlTypeInfo.XamlMember(this, "HasErrors", "Boolean");
                xamlMember.Getter = get_146_BindableBase_HasErrors;
                xamlMember.SetIsReadOnly();
                break;
            case "MVVMSidekick.ViewModels.BindableBase`1<NavDemo.Models.NavMenuItem>.LocalEventRouter":
                userType = (global::NavDemo.NavDemo_XamlTypeInfo.XamlUserType)GetXamlTypeByName("MVVMSidekick.ViewModels.BindableBase`1<NavDemo.Models.NavMenuItem>");
                xamlMember = new global::NavDemo.NavDemo_XamlTypeInfo.XamlMember(this, "LocalEventRouter", "MVVMSidekick.EventRouting.EventRouter");
                xamlMember.Getter = get_147_BindableBase_LocalEventRouter;
                xamlMember.Setter = set_147_BindableBase_LocalEventRouter;
                break;
            case "NavDemo.ViewModels.MainPage_Model.IsPaneOpen":
                userType = (global::NavDemo.NavDemo_XamlTypeInfo.XamlUserType)GetXamlTypeByName("NavDemo.ViewModels.MainPage_Model");
                xamlMember = new global::NavDemo.NavDemo_XamlTypeInfo.XamlMember(this, "IsPaneOpen", "Boolean");
                xamlMember.Getter = get_148_MainPage_Model_IsPaneOpen;
                xamlMember.Setter = set_148_MainPage_Model_IsPaneOpen;
                break;
            case "NavDemo.ViewModels.MainPage_Model.listViewBackGround":
                userType = (global::NavDemo.NavDemo_XamlTypeInfo.XamlUserType)GetXamlTypeByName("NavDemo.ViewModels.MainPage_Model");
                xamlMember = new global::NavDemo.NavDemo_XamlTypeInfo.XamlMember(this, "listViewBackGround", "String");
                xamlMember.Getter = get_149_MainPage_Model_listViewBackGround;
                xamlMember.Setter = set_149_MainPage_Model_listViewBackGround;
                break;
            case "MVVMSidekick.ViewModels.ViewModelBase`1<NavDemo.ViewModels.MainPage_Model>.UnbindDisposeGroup":
                userType = (global::NavDemo.NavDemo_XamlTypeInfo.XamlUserType)GetXamlTypeByName("MVVMSidekick.ViewModels.ViewModelBase`1<NavDemo.ViewModels.MainPage_Model>");
                xamlMember = new global::NavDemo.NavDemo_XamlTypeInfo.XamlMember(this, "UnbindDisposeGroup", "MVVMSidekick.Common.IDisposeGroup");
                xamlMember.Getter = get_150_ViewModelBase_UnbindDisposeGroup;
                xamlMember.SetIsReadOnly();
                break;
            case "MVVMSidekick.ViewModels.ViewModelBase`1<NavDemo.ViewModels.MainPage_Model>.UnloadDisposeGroup":
                userType = (global::NavDemo.NavDemo_XamlTypeInfo.XamlUserType)GetXamlTypeByName("MVVMSidekick.ViewModels.ViewModelBase`1<NavDemo.ViewModels.MainPage_Model>");
                xamlMember = new global::NavDemo.NavDemo_XamlTypeInfo.XamlMember(this, "UnloadDisposeGroup", "MVVMSidekick.Common.IDisposeGroup");
                xamlMember.Getter = get_151_ViewModelBase_UnloadDisposeGroup;
                xamlMember.SetIsReadOnly();
                break;
            case "MVVMSidekick.ViewModels.ViewModelBase`1<NavDemo.ViewModels.MainPage_Model>.IsDisposingWhenUnbindRequired":
                userType = (global::NavDemo.NavDemo_XamlTypeInfo.XamlUserType)GetXamlTypeByName("MVVMSidekick.ViewModels.ViewModelBase`1<NavDemo.ViewModels.MainPage_Model>");
                xamlMember = new global::NavDemo.NavDemo_XamlTypeInfo.XamlMember(this, "IsDisposingWhenUnbindRequired", "Boolean");
                xamlMember.Getter = get_152_ViewModelBase_IsDisposingWhenUnbindRequired;
                xamlMember.SetIsReadOnly();
                break;
            case "MVVMSidekick.ViewModels.ViewModelBase`1<NavDemo.ViewModels.MainPage_Model>.IsDisposingWhenUnloadRequired":
                userType = (global::NavDemo.NavDemo_XamlTypeInfo.XamlUserType)GetXamlTypeByName("MVVMSidekick.ViewModels.ViewModelBase`1<NavDemo.ViewModels.MainPage_Model>");
                xamlMember = new global::NavDemo.NavDemo_XamlTypeInfo.XamlMember(this, "IsDisposingWhenUnloadRequired", "Boolean");
                xamlMember.Getter = get_153_ViewModelBase_IsDisposingWhenUnloadRequired;
                xamlMember.SetIsReadOnly();
                break;
            case "MVVMSidekick.ViewModels.ViewModelBase`1<NavDemo.ViewModels.MainPage_Model>.StageManager":
                userType = (global::NavDemo.NavDemo_XamlTypeInfo.XamlUserType)GetXamlTypeByName("MVVMSidekick.ViewModels.ViewModelBase`1<NavDemo.ViewModels.MainPage_Model>");
                xamlMember = new global::NavDemo.NavDemo_XamlTypeInfo.XamlMember(this, "StageManager", "MVVMSidekick.Views.IStageManager");
                xamlMember.Getter = get_154_ViewModelBase_StageManager;
                xamlMember.Setter = set_154_ViewModelBase_StageManager;
                break;
            case "MVVMSidekick.ViewModels.ViewModelBase`1<NavDemo.ViewModels.MainPage_Model>.HaveReturnValue":
                userType = (global::NavDemo.NavDemo_XamlTypeInfo.XamlUserType)GetXamlTypeByName("MVVMSidekick.ViewModels.ViewModelBase`1<NavDemo.ViewModels.MainPage_Model>");
                xamlMember = new global::NavDemo.NavDemo_XamlTypeInfo.XamlMember(this, "HaveReturnValue", "Boolean");
                xamlMember.Getter = get_155_ViewModelBase_HaveReturnValue;
                xamlMember.SetIsReadOnly();
                break;
            case "MVVMSidekick.ViewModels.ViewModelBase`1<NavDemo.ViewModels.MainPage_Model>.IsUIBusy":
                userType = (global::NavDemo.NavDemo_XamlTypeInfo.XamlUserType)GetXamlTypeByName("MVVMSidekick.ViewModels.ViewModelBase`1<NavDemo.ViewModels.MainPage_Model>");
                xamlMember = new global::NavDemo.NavDemo_XamlTypeInfo.XamlMember(this, "IsUIBusy", "Boolean");
                xamlMember.Getter = get_156_ViewModelBase_IsUIBusy;
                xamlMember.Setter = set_156_ViewModelBase_IsUIBusy;
                break;
            case "MVVMSidekick.ViewModels.ViewModelBase`1<NavDemo.ViewModels.MainPage_Model>.Dispatcher":
                userType = (global::NavDemo.NavDemo_XamlTypeInfo.XamlUserType)GetXamlTypeByName("MVVMSidekick.ViewModels.ViewModelBase`1<NavDemo.ViewModels.MainPage_Model>");
                xamlMember = new global::NavDemo.NavDemo_XamlTypeInfo.XamlMember(this, "Dispatcher", "Windows.UI.Core.CoreDispatcher");
                xamlMember.Getter = get_157_ViewModelBase_Dispatcher;
                xamlMember.SetIsReadOnly();
                break;
            case "MVVMSidekick.ViewModels.BindableBase`1<NavDemo.ViewModels.MainPage_Model>.BindableInstanceId":
                userType = (global::NavDemo.NavDemo_XamlTypeInfo.XamlUserType)GetXamlTypeByName("MVVMSidekick.ViewModels.BindableBase`1<NavDemo.ViewModels.MainPage_Model>");
                xamlMember = new global::NavDemo.NavDemo_XamlTypeInfo.XamlMember(this, "BindableInstanceId", "String");
                xamlMember.Getter = get_158_BindableBase_BindableInstanceId;
                xamlMember.SetIsReadOnly();
                break;
            case "MVVMSidekick.ViewModels.BindableBase`1<NavDemo.ViewModels.MainPage_Model>.Error":
                userType = (global::NavDemo.NavDemo_XamlTypeInfo.XamlUserType)GetXamlTypeByName("MVVMSidekick.ViewModels.BindableBase`1<NavDemo.ViewModels.MainPage_Model>");
                xamlMember = new global::NavDemo.NavDemo_XamlTypeInfo.XamlMember(this, "Error", "String");
                xamlMember.Getter = get_159_BindableBase_Error;
                xamlMember.SetIsReadOnly();
                break;
            case "MVVMSidekick.ViewModels.BindableBase`1<NavDemo.ViewModels.MainPage_Model>.HasErrors":
                userType = (global::NavDemo.NavDemo_XamlTypeInfo.XamlUserType)GetXamlTypeByName("MVVMSidekick.ViewModels.BindableBase`1<NavDemo.ViewModels.MainPage_Model>");
                xamlMember = new global::NavDemo.NavDemo_XamlTypeInfo.XamlMember(this, "HasErrors", "Boolean");
                xamlMember.Getter = get_160_BindableBase_HasErrors;
                xamlMember.SetIsReadOnly();
                break;
            case "MVVMSidekick.ViewModels.BindableBase`1<NavDemo.ViewModels.MainPage_Model>.LocalEventRouter":
                userType = (global::NavDemo.NavDemo_XamlTypeInfo.XamlUserType)GetXamlTypeByName("MVVMSidekick.ViewModels.BindableBase`1<NavDemo.ViewModels.MainPage_Model>");
                xamlMember = new global::NavDemo.NavDemo_XamlTypeInfo.XamlMember(this, "LocalEventRouter", "MVVMSidekick.EventRouting.EventRouter");
                xamlMember.Getter = get_161_BindableBase_LocalEventRouter;
                xamlMember.Setter = set_161_BindableBase_LocalEventRouter;
                break;
            case "MVVMSidekick.Views.StageManager.CurrentBindingView":
                userType = (global::NavDemo.NavDemo_XamlTypeInfo.XamlUserType)GetXamlTypeByName("MVVMSidekick.Views.StageManager");
                xamlMember = new global::NavDemo.NavDemo_XamlTypeInfo.XamlMember(this, "CurrentBindingView", "MVVMSidekick.Views.IView");
                xamlMember.Getter = get_162_StageManager_CurrentBindingView;
                xamlMember.SetIsReadOnly();
                break;
            case "MVVMSidekick.Views.StageManager.DefaultStage":
                userType = (global::NavDemo.NavDemo_XamlTypeInfo.XamlUserType)GetXamlTypeByName("MVVMSidekick.Views.StageManager");
                xamlMember = new global::NavDemo.NavDemo_XamlTypeInfo.XamlMember(this, "DefaultStage", "MVVMSidekick.Views.IStage");
                xamlMember.Getter = get_163_StageManager_DefaultStage;
                xamlMember.Setter = set_163_StageManager_DefaultStage;
                break;
            case "MVVMSidekick.Views.StageManager.Beacon":
                userType = (global::NavDemo.NavDemo_XamlTypeInfo.XamlUserType)GetXamlTypeByName("MVVMSidekick.Views.StageManager");
                xamlMember = new global::NavDemo.NavDemo_XamlTypeInfo.XamlMember(this, "Beacon", "String");
                xamlMember.SetTargetTypeName("Windows.UI.Xaml.DependencyObject");
                xamlMember.SetIsDependencyProperty();
                xamlMember.SetIsAttachable();
                xamlMember.Getter = get_164_StageManager_Beacon;
                xamlMember.Setter = set_164_StageManager_Beacon;
                break;
            case "NavDemo.MainPage.StrongTypeViewModel":
                userType = (global::NavDemo.NavDemo_XamlTypeInfo.XamlUserType)GetXamlTypeByName("NavDemo.MainPage");
                xamlMember = new global::NavDemo.NavDemo_XamlTypeInfo.XamlMember(this, "StrongTypeViewModel", "NavDemo.ViewModels.MainPage_Model");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_165_MainPage_StrongTypeViewModel;
                xamlMember.Setter = set_165_MainPage_StrongTypeViewModel;
                break;
            case "NavDemo.ViewModels.SearchPage_Model.Title":
                userType = (global::NavDemo.NavDemo_XamlTypeInfo.XamlUserType)GetXamlTypeByName("NavDemo.ViewModels.SearchPage_Model");
                xamlMember = new global::NavDemo.NavDemo_XamlTypeInfo.XamlMember(this, "Title", "String");
                xamlMember.Getter = get_166_SearchPage_Model_Title;
                xamlMember.Setter = set_166_SearchPage_Model_Title;
                break;
            case "NavDemo.ViewModels.SearchPage_Model.dateText":
                userType = (global::NavDemo.NavDemo_XamlTypeInfo.XamlUserType)GetXamlTypeByName("NavDemo.ViewModels.SearchPage_Model");
                xamlMember = new global::NavDemo.NavDemo_XamlTypeInfo.XamlMember(this, "dateText", "String");
                xamlMember.Getter = get_167_SearchPage_Model_dateText;
                xamlMember.Setter = set_167_SearchPage_Model_dateText;
                break;
            case "NavDemo.ViewModels.SearchPage_Model.listDialog":
                userType = (global::NavDemo.NavDemo_XamlTypeInfo.XamlUserType)GetXamlTypeByName("NavDemo.ViewModels.SearchPage_Model");
                xamlMember = new global::NavDemo.NavDemo_XamlTypeInfo.XamlMember(this, "listDialog", "System.Collections.Generic.List`1<NavDemo.Dialog>");
                xamlMember.Getter = get_168_SearchPage_Model_listDialog;
                xamlMember.Setter = set_168_SearchPage_Model_listDialog;
                break;
            case "NavDemo.ViewModels.SearchPage_Model.chosenDialog":
                userType = (global::NavDemo.NavDemo_XamlTypeInfo.XamlUserType)GetXamlTypeByName("NavDemo.ViewModels.SearchPage_Model");
                xamlMember = new global::NavDemo.NavDemo_XamlTypeInfo.XamlMember(this, "chosenDialog", "NavDemo.Dialog");
                xamlMember.Getter = get_169_SearchPage_Model_chosenDialog;
                xamlMember.Setter = set_169_SearchPage_Model_chosenDialog;
                break;
            case "NavDemo.ViewModels.SearchPage_Model.suggest":
                userType = (global::NavDemo.NavDemo_XamlTypeInfo.XamlUserType)GetXamlTypeByName("NavDemo.ViewModels.SearchPage_Model");
                xamlMember = new global::NavDemo.NavDemo_XamlTypeInfo.XamlMember(this, "suggest", "NavDemo.Services.SuggestService");
                xamlMember.Getter = get_170_SearchPage_Model_suggest;
                xamlMember.Setter = set_170_SearchPage_Model_suggest;
                break;
            case "NavDemo.ViewModels.SearchPage_Model.chosenFriend":
                userType = (global::NavDemo.NavDemo_XamlTypeInfo.XamlUserType)GetXamlTypeByName("NavDemo.ViewModels.SearchPage_Model");
                xamlMember = new global::NavDemo.NavDemo_XamlTypeInfo.XamlMember(this, "chosenFriend", "NavDemo.Friend");
                xamlMember.Getter = get_171_SearchPage_Model_chosenFriend;
                xamlMember.Setter = set_171_SearchPage_Model_chosenFriend;
                break;
            case "NavDemo.ViewModels.SearchPage_Model.friendItemList":
                userType = (global::NavDemo.NavDemo_XamlTypeInfo.XamlUserType)GetXamlTypeByName("NavDemo.ViewModels.SearchPage_Model");
                xamlMember = new global::NavDemo.NavDemo_XamlTypeInfo.XamlMember(this, "friendItemList", "System.Collections.Generic.List`1<NavDemo.Friend>");
                xamlMember.Getter = get_172_SearchPage_Model_friendItemList;
                xamlMember.Setter = set_172_SearchPage_Model_friendItemList;
                break;
            case "NavDemo.ViewModels.SearchPage_Model.suggestBoxText":
                userType = (global::NavDemo.NavDemo_XamlTypeInfo.XamlUserType)GetXamlTypeByName("NavDemo.ViewModels.SearchPage_Model");
                xamlMember = new global::NavDemo.NavDemo_XamlTypeInfo.XamlMember(this, "suggestBoxText", "String");
                xamlMember.Getter = get_173_SearchPage_Model_suggestBoxText;
                xamlMember.Setter = set_173_SearchPage_Model_suggestBoxText;
                break;
            case "NavDemo.ViewModels.SearchPage_Model.CommandAddFriend":
                userType = (global::NavDemo.NavDemo_XamlTypeInfo.XamlUserType)GetXamlTypeByName("NavDemo.ViewModels.SearchPage_Model");
                xamlMember = new global::NavDemo.NavDemo_XamlTypeInfo.XamlMember(this, "CommandAddFriend", "MVVMSidekick.ViewModels.CommandModel`2<MVVMSidekick.Reactive.ReactiveCommand, String>");
                xamlMember.Getter = get_174_SearchPage_Model_CommandAddFriend;
                xamlMember.Setter = set_174_SearchPage_Model_CommandAddFriend;
                break;
            case "NavDemo.ViewModels.SearchPage_Model.CommandGetFriends":
                userType = (global::NavDemo.NavDemo_XamlTypeInfo.XamlUserType)GetXamlTypeByName("NavDemo.ViewModels.SearchPage_Model");
                xamlMember = new global::NavDemo.NavDemo_XamlTypeInfo.XamlMember(this, "CommandGetFriends", "MVVMSidekick.ViewModels.CommandModel`2<MVVMSidekick.Reactive.ReactiveCommand, String>");
                xamlMember.Getter = get_175_SearchPage_Model_CommandGetFriends;
                xamlMember.Setter = set_175_SearchPage_Model_CommandGetFriends;
                break;
            case "NavDemo.ViewModels.SearchPage_Model.CommandTableInit":
                userType = (global::NavDemo.NavDemo_XamlTypeInfo.XamlUserType)GetXamlTypeByName("NavDemo.ViewModels.SearchPage_Model");
                xamlMember = new global::NavDemo.NavDemo_XamlTypeInfo.XamlMember(this, "CommandTableInit", "MVVMSidekick.ViewModels.CommandModel`2<MVVMSidekick.Reactive.ReactiveCommand, String>");
                xamlMember.Getter = get_176_SearchPage_Model_CommandTableInit;
                xamlMember.Setter = set_176_SearchPage_Model_CommandTableInit;
                break;
            case "NavDemo.ViewModels.SearchPage_Model.CommandSubmitFriend":
                userType = (global::NavDemo.NavDemo_XamlTypeInfo.XamlUserType)GetXamlTypeByName("NavDemo.ViewModels.SearchPage_Model");
                xamlMember = new global::NavDemo.NavDemo_XamlTypeInfo.XamlMember(this, "CommandSubmitFriend", "MVVMSidekick.ViewModels.CommandModel`2<MVVMSidekick.Reactive.ReactiveCommand, String>");
                xamlMember.Getter = get_177_SearchPage_Model_CommandSubmitFriend;
                xamlMember.Setter = set_177_SearchPage_Model_CommandSubmitFriend;
                break;
            case "NavDemo.ViewModels.SearchPage_Model.CommandSubmitDate":
                userType = (global::NavDemo.NavDemo_XamlTypeInfo.XamlUserType)GetXamlTypeByName("NavDemo.ViewModels.SearchPage_Model");
                xamlMember = new global::NavDemo.NavDemo_XamlTypeInfo.XamlMember(this, "CommandSubmitDate", "MVVMSidekick.ViewModels.CommandModel`2<MVVMSidekick.Reactive.ReactiveCommand, String>");
                xamlMember.Getter = get_178_SearchPage_Model_CommandSubmitDate;
                xamlMember.Setter = set_178_SearchPage_Model_CommandSubmitDate;
                break;
            case "NavDemo.ViewModels.SearchPage_Model.CommandChoseFriend":
                userType = (global::NavDemo.NavDemo_XamlTypeInfo.XamlUserType)GetXamlTypeByName("NavDemo.ViewModels.SearchPage_Model");
                xamlMember = new global::NavDemo.NavDemo_XamlTypeInfo.XamlMember(this, "CommandChoseFriend", "MVVMSidekick.ViewModels.CommandModel`2<MVVMSidekick.Reactive.ReactiveCommand, String>");
                xamlMember.Getter = get_179_SearchPage_Model_CommandChoseFriend;
                xamlMember.Setter = set_179_SearchPage_Model_CommandChoseFriend;
                break;
            case "NavDemo.ViewModels.SearchPage_Model.CommandChangeDate":
                userType = (global::NavDemo.NavDemo_XamlTypeInfo.XamlUserType)GetXamlTypeByName("NavDemo.ViewModels.SearchPage_Model");
                xamlMember = new global::NavDemo.NavDemo_XamlTypeInfo.XamlMember(this, "CommandChangeDate", "MVVMSidekick.ViewModels.CommandModel`2<MVVMSidekick.Reactive.ReactiveCommand, String>");
                xamlMember.Getter = get_180_SearchPage_Model_CommandChangeDate;
                xamlMember.Setter = set_180_SearchPage_Model_CommandChangeDate;
                break;
            case "MVVMSidekick.ViewModels.ViewModelBase`1<NavDemo.ViewModels.SearchPage_Model>.UnbindDisposeGroup":
                userType = (global::NavDemo.NavDemo_XamlTypeInfo.XamlUserType)GetXamlTypeByName("MVVMSidekick.ViewModels.ViewModelBase`1<NavDemo.ViewModels.SearchPage_Model>");
                xamlMember = new global::NavDemo.NavDemo_XamlTypeInfo.XamlMember(this, "UnbindDisposeGroup", "MVVMSidekick.Common.IDisposeGroup");
                xamlMember.Getter = get_181_ViewModelBase_UnbindDisposeGroup;
                xamlMember.SetIsReadOnly();
                break;
            case "MVVMSidekick.ViewModels.ViewModelBase`1<NavDemo.ViewModels.SearchPage_Model>.UnloadDisposeGroup":
                userType = (global::NavDemo.NavDemo_XamlTypeInfo.XamlUserType)GetXamlTypeByName("MVVMSidekick.ViewModels.ViewModelBase`1<NavDemo.ViewModels.SearchPage_Model>");
                xamlMember = new global::NavDemo.NavDemo_XamlTypeInfo.XamlMember(this, "UnloadDisposeGroup", "MVVMSidekick.Common.IDisposeGroup");
                xamlMember.Getter = get_182_ViewModelBase_UnloadDisposeGroup;
                xamlMember.SetIsReadOnly();
                break;
            case "MVVMSidekick.ViewModels.ViewModelBase`1<NavDemo.ViewModels.SearchPage_Model>.IsDisposingWhenUnbindRequired":
                userType = (global::NavDemo.NavDemo_XamlTypeInfo.XamlUserType)GetXamlTypeByName("MVVMSidekick.ViewModels.ViewModelBase`1<NavDemo.ViewModels.SearchPage_Model>");
                xamlMember = new global::NavDemo.NavDemo_XamlTypeInfo.XamlMember(this, "IsDisposingWhenUnbindRequired", "Boolean");
                xamlMember.Getter = get_183_ViewModelBase_IsDisposingWhenUnbindRequired;
                xamlMember.SetIsReadOnly();
                break;
            case "MVVMSidekick.ViewModels.ViewModelBase`1<NavDemo.ViewModels.SearchPage_Model>.IsDisposingWhenUnloadRequired":
                userType = (global::NavDemo.NavDemo_XamlTypeInfo.XamlUserType)GetXamlTypeByName("MVVMSidekick.ViewModels.ViewModelBase`1<NavDemo.ViewModels.SearchPage_Model>");
                xamlMember = new global::NavDemo.NavDemo_XamlTypeInfo.XamlMember(this, "IsDisposingWhenUnloadRequired", "Boolean");
                xamlMember.Getter = get_184_ViewModelBase_IsDisposingWhenUnloadRequired;
                xamlMember.SetIsReadOnly();
                break;
            case "MVVMSidekick.ViewModels.ViewModelBase`1<NavDemo.ViewModels.SearchPage_Model>.StageManager":
                userType = (global::NavDemo.NavDemo_XamlTypeInfo.XamlUserType)GetXamlTypeByName("MVVMSidekick.ViewModels.ViewModelBase`1<NavDemo.ViewModels.SearchPage_Model>");
                xamlMember = new global::NavDemo.NavDemo_XamlTypeInfo.XamlMember(this, "StageManager", "MVVMSidekick.Views.IStageManager");
                xamlMember.Getter = get_185_ViewModelBase_StageManager;
                xamlMember.Setter = set_185_ViewModelBase_StageManager;
                break;
            case "MVVMSidekick.ViewModels.ViewModelBase`1<NavDemo.ViewModels.SearchPage_Model>.HaveReturnValue":
                userType = (global::NavDemo.NavDemo_XamlTypeInfo.XamlUserType)GetXamlTypeByName("MVVMSidekick.ViewModels.ViewModelBase`1<NavDemo.ViewModels.SearchPage_Model>");
                xamlMember = new global::NavDemo.NavDemo_XamlTypeInfo.XamlMember(this, "HaveReturnValue", "Boolean");
                xamlMember.Getter = get_186_ViewModelBase_HaveReturnValue;
                xamlMember.SetIsReadOnly();
                break;
            case "MVVMSidekick.ViewModels.ViewModelBase`1<NavDemo.ViewModels.SearchPage_Model>.IsUIBusy":
                userType = (global::NavDemo.NavDemo_XamlTypeInfo.XamlUserType)GetXamlTypeByName("MVVMSidekick.ViewModels.ViewModelBase`1<NavDemo.ViewModels.SearchPage_Model>");
                xamlMember = new global::NavDemo.NavDemo_XamlTypeInfo.XamlMember(this, "IsUIBusy", "Boolean");
                xamlMember.Getter = get_187_ViewModelBase_IsUIBusy;
                xamlMember.Setter = set_187_ViewModelBase_IsUIBusy;
                break;
            case "MVVMSidekick.ViewModels.ViewModelBase`1<NavDemo.ViewModels.SearchPage_Model>.Dispatcher":
                userType = (global::NavDemo.NavDemo_XamlTypeInfo.XamlUserType)GetXamlTypeByName("MVVMSidekick.ViewModels.ViewModelBase`1<NavDemo.ViewModels.SearchPage_Model>");
                xamlMember = new global::NavDemo.NavDemo_XamlTypeInfo.XamlMember(this, "Dispatcher", "Windows.UI.Core.CoreDispatcher");
                xamlMember.Getter = get_188_ViewModelBase_Dispatcher;
                xamlMember.SetIsReadOnly();
                break;
            case "MVVMSidekick.ViewModels.BindableBase`1<NavDemo.ViewModels.SearchPage_Model>.BindableInstanceId":
                userType = (global::NavDemo.NavDemo_XamlTypeInfo.XamlUserType)GetXamlTypeByName("MVVMSidekick.ViewModels.BindableBase`1<NavDemo.ViewModels.SearchPage_Model>");
                xamlMember = new global::NavDemo.NavDemo_XamlTypeInfo.XamlMember(this, "BindableInstanceId", "String");
                xamlMember.Getter = get_189_BindableBase_BindableInstanceId;
                xamlMember.SetIsReadOnly();
                break;
            case "MVVMSidekick.ViewModels.BindableBase`1<NavDemo.ViewModels.SearchPage_Model>.Error":
                userType = (global::NavDemo.NavDemo_XamlTypeInfo.XamlUserType)GetXamlTypeByName("MVVMSidekick.ViewModels.BindableBase`1<NavDemo.ViewModels.SearchPage_Model>");
                xamlMember = new global::NavDemo.NavDemo_XamlTypeInfo.XamlMember(this, "Error", "String");
                xamlMember.Getter = get_190_BindableBase_Error;
                xamlMember.SetIsReadOnly();
                break;
            case "MVVMSidekick.ViewModels.BindableBase`1<NavDemo.ViewModels.SearchPage_Model>.HasErrors":
                userType = (global::NavDemo.NavDemo_XamlTypeInfo.XamlUserType)GetXamlTypeByName("MVVMSidekick.ViewModels.BindableBase`1<NavDemo.ViewModels.SearchPage_Model>");
                xamlMember = new global::NavDemo.NavDemo_XamlTypeInfo.XamlMember(this, "HasErrors", "Boolean");
                xamlMember.Getter = get_191_BindableBase_HasErrors;
                xamlMember.SetIsReadOnly();
                break;
            case "MVVMSidekick.ViewModels.BindableBase`1<NavDemo.ViewModels.SearchPage_Model>.LocalEventRouter":
                userType = (global::NavDemo.NavDemo_XamlTypeInfo.XamlUserType)GetXamlTypeByName("MVVMSidekick.ViewModels.BindableBase`1<NavDemo.ViewModels.SearchPage_Model>");
                xamlMember = new global::NavDemo.NavDemo_XamlTypeInfo.XamlMember(this, "LocalEventRouter", "MVVMSidekick.EventRouting.EventRouter");
                xamlMember.Getter = get_192_BindableBase_LocalEventRouter;
                xamlMember.Setter = set_192_BindableBase_LocalEventRouter;
                break;
            case "NavDemo.Behaviours.ListViewBehavior.AssociatedObject":
                userType = (global::NavDemo.NavDemo_XamlTypeInfo.XamlUserType)GetXamlTypeByName("NavDemo.Behaviours.ListViewBehavior");
                xamlMember = new global::NavDemo.NavDemo_XamlTypeInfo.XamlMember(this, "AssociatedObject", "Windows.UI.Xaml.DependencyObject");
                xamlMember.Getter = get_193_ListViewBehavior_AssociatedObject;
                xamlMember.Setter = set_193_ListViewBehavior_AssociatedObject;
                break;
            case "NavDemo.SearchPage.StrongTypeViewModel":
                userType = (global::NavDemo.NavDemo_XamlTypeInfo.XamlUserType)GetXamlTypeByName("NavDemo.SearchPage");
                xamlMember = new global::NavDemo.NavDemo_XamlTypeInfo.XamlMember(this, "StrongTypeViewModel", "NavDemo.ViewModels.SearchPage_Model");
                xamlMember.SetIsDependencyProperty();
                xamlMember.Getter = get_194_SearchPage_StrongTypeViewModel;
                xamlMember.Setter = set_194_SearchPage_StrongTypeViewModel;
                break;
            }
            return xamlMember;
        }
    }

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.17.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class XamlSystemBaseType : global::Windows.UI.Xaml.Markup.IXamlType
    {
        string _fullName;
        global::System.Type _underlyingType;

        public XamlSystemBaseType(string fullName, global::System.Type underlyingType)
        {
            _fullName = fullName;
            _underlyingType = underlyingType;
        }

        public string FullName { get { return _fullName; } }

        public global::System.Type UnderlyingType
        {
            get
            {
                return _underlyingType;
            }
        }

        virtual public global::Windows.UI.Xaml.Markup.IXamlType BaseType { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Windows.UI.Xaml.Markup.IXamlMember ContentProperty { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Windows.UI.Xaml.Markup.IXamlMember GetMember(string name) { throw new global::System.NotImplementedException(); }
        virtual public bool IsArray { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsCollection { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsConstructible { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsDictionary { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsMarkupExtension { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsBindable { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsReturnTypeStub { get { throw new global::System.NotImplementedException(); } }
        virtual public bool IsLocalType { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Windows.UI.Xaml.Markup.IXamlType ItemType { get { throw new global::System.NotImplementedException(); } }
        virtual public global::Windows.UI.Xaml.Markup.IXamlType KeyType { get { throw new global::System.NotImplementedException(); } }
        virtual public object ActivateInstance() { throw new global::System.NotImplementedException(); }
        virtual public void AddToMap(object instance, object key, object item)  { throw new global::System.NotImplementedException(); }
        virtual public void AddToVector(object instance, object item)  { throw new global::System.NotImplementedException(); }
        virtual public void RunInitializer()   { throw new global::System.NotImplementedException(); }
        virtual public object CreateFromString(string input)   { throw new global::System.NotImplementedException(); }
    }
    
    internal delegate object Activator();
    internal delegate void AddToCollection(object instance, object item);
    internal delegate void AddToDictionary(object instance, object key, object item);
    internal delegate object CreateFromStringMethod(string args);

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.17.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class XamlUserType : global::NavDemo.NavDemo_XamlTypeInfo.XamlSystemBaseType
    {
        global::NavDemo.NavDemo_XamlTypeInfo.XamlTypeInfoProvider _provider;
        global::Windows.UI.Xaml.Markup.IXamlType _baseType;
        bool _isArray;
        bool _isMarkupExtension;
        bool _isBindable;
        bool _isReturnTypeStub;
        bool _isLocalType;

        string _contentPropertyName;
        string _itemTypeName;
        string _keyTypeName;
        global::System.Collections.Generic.Dictionary<string, string> _memberNames;
        global::System.Collections.Generic.Dictionary<string, object> _enumValues;

        public XamlUserType(global::NavDemo.NavDemo_XamlTypeInfo.XamlTypeInfoProvider provider, string fullName, global::System.Type fullType, global::Windows.UI.Xaml.Markup.IXamlType baseType)
            :base(fullName, fullType)
        {
            _provider = provider;
            _baseType = baseType;
        }

        // --- Interface methods ----

        override public global::Windows.UI.Xaml.Markup.IXamlType BaseType { get { return _baseType; } }
        override public bool IsArray { get { return _isArray; } }
        override public bool IsCollection { get { return (CollectionAdd != null); } }
        override public bool IsConstructible { get { return (Activator != null); } }
        override public bool IsDictionary { get { return (DictionaryAdd != null); } }
        override public bool IsMarkupExtension { get { return _isMarkupExtension; } }
        override public bool IsBindable { get { return _isBindable; } }
        override public bool IsReturnTypeStub { get { return _isReturnTypeStub; } }
        override public bool IsLocalType { get { return _isLocalType; } }

        override public global::Windows.UI.Xaml.Markup.IXamlMember ContentProperty
        {
            get { return _provider.GetMemberByLongName(_contentPropertyName); }
        }

        override public global::Windows.UI.Xaml.Markup.IXamlType ItemType
        {
            get { return _provider.GetXamlTypeByName(_itemTypeName); }
        }

        override public global::Windows.UI.Xaml.Markup.IXamlType KeyType
        {
            get { return _provider.GetXamlTypeByName(_keyTypeName); }
        }

        override public global::Windows.UI.Xaml.Markup.IXamlMember GetMember(string name)
        {
            if (_memberNames == null)
            {
                return null;
            }
            string longName;
            if (_memberNames.TryGetValue(name, out longName))
            {
                return _provider.GetMemberByLongName(longName);
            }
            return null;
        }

        override public object ActivateInstance()
        {
            return Activator(); 
        }

        override public void AddToMap(object instance, object key, object item) 
        {
            DictionaryAdd(instance, key, item);
        }

        override public void AddToVector(object instance, object item)
        {
            CollectionAdd(instance, item);
        }

        override public void RunInitializer() 
        {
            global::System.Runtime.CompilerServices.RuntimeHelpers.RunClassConstructor(UnderlyingType.TypeHandle);
        }

        override public object CreateFromString(string input)
        {
            if (CreateFromStringMethod != null)
            {
                return this.CreateFromStringMethod(input);
            }
            else if (_enumValues != null)
            {
                int value = 0;

                string[] valueParts = input.Split(',');

                foreach (string valuePart in valueParts) 
                {
                    object partValue;
                    int enumFieldValue = 0;
                    try
                    {
                        if (_enumValues.TryGetValue(valuePart.Trim(), out partValue))
                        {
                            enumFieldValue = global::System.Convert.ToInt32(partValue);
                        }
                        else
                        {
                            try
                            {
                                enumFieldValue = global::System.Convert.ToInt32(valuePart.Trim());
                            }
                            catch( global::System.FormatException )
                            {
                                foreach( string key in _enumValues.Keys )
                                {
                                    if( string.Compare(valuePart.Trim(), key, global::System.StringComparison.OrdinalIgnoreCase) == 0 )
                                    {
                                        if( _enumValues.TryGetValue(key.Trim(), out partValue) )
                                        {
                                            enumFieldValue = global::System.Convert.ToInt32(partValue);
                                            break;
                                        }
                                    }
                                }
                            }
                        }
                        value |= enumFieldValue; 
                    }
                    catch( global::System.FormatException )
                    {
                        throw new global::System.ArgumentException(input, FullName);
                    }
                }

                return value; 
            }
            throw new global::System.ArgumentException(input, FullName);
        }

        // --- End of Interface methods

        public Activator Activator { get; set; }
        public AddToCollection CollectionAdd { get; set; }
        public AddToDictionary DictionaryAdd { get; set; }
        public CreateFromStringMethod CreateFromStringMethod {get; set; }

        public void SetContentPropertyName(string contentPropertyName)
        {
            _contentPropertyName = contentPropertyName;
        }

        public void SetIsArray()
        {
            _isArray = true; 
        }

        public void SetIsMarkupExtension()
        {
            _isMarkupExtension = true;
        }

        public void SetIsBindable()
        {
            _isBindable = true;
        }

        public void SetIsReturnTypeStub()
        {
            _isReturnTypeStub = true;
        }

        public void SetIsLocalType()
        {
            _isLocalType = true;
        }

        public void SetItemTypeName(string itemTypeName)
        {
            _itemTypeName = itemTypeName;
        }

        public void SetKeyTypeName(string keyTypeName)
        {
            _keyTypeName = keyTypeName;
        }

        public void AddMemberName(string shortName)
        {
            if(_memberNames == null)
            {
                _memberNames =  new global::System.Collections.Generic.Dictionary<string,string>();
            }
            _memberNames.Add(shortName, FullName + "." + shortName);
        }

        public void AddEnumValue(string name, object value)
        {
            if (_enumValues == null)
            {
                _enumValues = new global::System.Collections.Generic.Dictionary<string, object>();
            }
            _enumValues.Add(name, value);
        }
    }

    internal delegate object Getter(object instance);
    internal delegate void Setter(object instance, object value);

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.Windows.UI.Xaml.Build.Tasks"," 10.0.17.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class XamlMember : global::Windows.UI.Xaml.Markup.IXamlMember
    {
        global::NavDemo.NavDemo_XamlTypeInfo.XamlTypeInfoProvider _provider;
        string _name;
        bool _isAttachable;
        bool _isDependencyProperty;
        bool _isReadOnly;

        string _typeName;
        string _targetTypeName;

        public XamlMember(global::NavDemo.NavDemo_XamlTypeInfo.XamlTypeInfoProvider provider, string name, string typeName)
        {
            _name = name;
            _typeName = typeName;
            _provider = provider;
        }

        public string Name { get { return _name; } }

        public global::Windows.UI.Xaml.Markup.IXamlType Type
        {
            get { return _provider.GetXamlTypeByName(_typeName); }
        }

        public void SetTargetTypeName(string targetTypeName)
        {
            _targetTypeName = targetTypeName;
        }
        public global::Windows.UI.Xaml.Markup.IXamlType TargetType
        {
            get { return _provider.GetXamlTypeByName(_targetTypeName); }
        }

        public void SetIsAttachable() { _isAttachable = true; }
        public bool IsAttachable { get { return _isAttachable; } }

        public void SetIsDependencyProperty() { _isDependencyProperty = true; }
        public bool IsDependencyProperty { get { return _isDependencyProperty; } }

        public void SetIsReadOnly() { _isReadOnly = true; }
        public bool IsReadOnly { get { return _isReadOnly; } }

        public Getter Getter { get; set; }
        public object GetValue(object instance)
        {
            if (Getter != null)
                return Getter(instance);
            else
                throw new global::System.InvalidOperationException("GetValue");
        }

        public Setter Setter { get; set; }
        public void SetValue(object instance, object value)
        {
            if (Setter != null)
                Setter(instance, value);
            else
                throw new global::System.InvalidOperationException("SetValue");
        }
    }
}

